# generated by datamodel-codegen:
#   filename:  openapi-arguments.json
#   timestamp: 2025-08-07T21:33:34+00:00

from __future__ import annotations

from beekeepy.handle.runnable import Arguments


class HivedArguments(Arguments):
    account_history_rocksdb_blacklist_ops: list[str] = []
    """
    Defines a list of operations which will be explicitly ignored.
    """
    account_history_rocksdb_dump_balance_history: str | None = None
    """
    Dumps balances for all tracked accounts to a CSV file every time they change
    """
    account_history_rocksdb_path: str = 'blockchain/account-history-rocksdb-storage'
    """
    The location of the rocksdb database for account history. By default it is $DATA_DIR/blockchain/account-history-rocksdb-storage
    """
    account_history_rocksdb_stop_import_at_block: int = 0
    """
    Allows to specify block number, the data import process should stop at.
    """
    account_history_rocksdb_track_account_range: list[str] = []
    """
    Defines a range of accounts to track as a json pair ["from","to"] [from,to] Can be specified multiple times.
    """
    account_history_rocksdb_whitelist_ops: list[str] = []
    """
    Defines a list of operations which will be explicitly logged.
    """
    advanced_benchmark: str | None = None
    """
    Make profiling for every plugin.
    """
    alternate_chain_spec: str | None = None
    """
    Filepath for the alternate chain specification in JSON format
    """
    backtrace: str = 'yes'
    """
    Whether to print backtrace on SIGSEGV
    """
    block_data_export_file: str = 'NONE'
    """
    Where to export data (NONE to discard)
    """
    block_data_skip_empty: bool = False
    """
    Skip producing when no factory is registered
    """
    block_log_compression_level: int = 15
    """
    Block log zstd compression level 0 (fast, low compression) - 22 (slow, high compression)
    """
    block_log_info_print_file: str = 'ILOG'
    """
    Where to print (filename or special sink ILOG, STDOUT, STDERR)
    """
    block_log_info_print_interval_seconds: int = 86400
    """
    How often to print out block_log_info (default 1 day)
    """
    block_log_info_print_irreversible: bool = True
    """
    Whether to defer printing until block is irreversible
    """
    block_log_split: int = 9999
    """
    Whether the block log should be single file (-1), not used at all & keeping only head block in memory (0), or split into files each containing 1M blocks & keeping N full million latest blocks (N). Default 9999.
    """
    block_stats_report_output: str = 'ILOG'
    """
    Where to put block stat reports: DLOG, ILOG, NOTIFY, LOG_NOTIFY. Default ILOG.
    """
    block_stats_report_type: str = 'FULL'
    """
    Level of detail of block stat reports: NONE, MINIMAL, REGULAR, FULL. Default FULL (recommended for API nodes).
    """
    blockchain_thread_pool_size: int = 8
    """
    Number of worker threads used to pre-validate transactions and blocks
    """
    cashout_logging_ending_block: int | None = None
    """
    Ending block for comment cashout log
    """
    cashout_logging_log_path_dir: str | None = None
    """
    Path to log file
    """
    cashout_logging_starting_block: int | None = None
    """
    Starting block for comment cashout log
    """
    chain_id: str = '18dcf0a285365fc58b71f18b3d3fec954aa0c141c44e4e5cb4cf777b9eab274e'
    """
    chain ID to connect to
    """
    check_locks: bool = False
    """
    Check correctness of chainbase locking
    """
    checkpoint: list[str] = []
    """
    Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
    """
    colony_article: str | None = None
    """
    Size and frequency parameters of article transactions.
    """
    colony_custom: str | None = None
    """
    Size and frequency parameters of custom_json transactions. If no other transaction type is requested, minimal custom jsons will be produced.
    """
    colony_max_concurrency: int = 1000
    """
    Number of transactions per thread that can be sent to queue with no wait. 0 means auto adjust. Default is 1000
    """
    colony_no_broadcast: bool = False
    """
    Disables broadcasting of produced transactions - only local witness will include them in block.
    """
    colony_reply: str | None = None
    """
    Size and frequency parameters of reply transactions.
    """
    colony_sign_with: list[str] = []
    """
    WIF PRIVATE KEY to be used to sign each transaction.
    """
    colony_start_at_block: int = 0
    """
    Start producing transactions when block with given number becomes head block (or right at the start if the block already passed).
    """
    colony_threads: int = 2
    """
    Number of worker threads. Default is 2
    """
    colony_transactions_per_block: int | None = None
    """
    Max number of transactions produced per block. When not set it will be sum of weights of individual types.
    """
    colony_transfer: str | None = None
    """
    Size and frequency parameters of transfer transactions.
    """
    colony_vote: str | None = None
    """
    Size and frequency parameters of vote transactions.
    """
    colony_wait_for_work: int = 50
    """
    Time (in milliseconds) to wait before checking if there is more work to do. 0 will just yield() the thread. Default is 50
    """
    comment_archive: str = 'ROCKSDB'
    """
    Type of comment archive to use: NONE means comments won't be archived, MEMORY keeps archived comments in memory, ROCKSDB stores them in RocksDB. Default: ROCKSDB
    """
    comments_rocksdb_path: str = 'comments-rocksdb-storage'
    """
    the location of the comments data files
    """
    config: str = 'config.ini'
    """
    Configuration file name relative to data-dir
    """
    data_dir: str | None = None
    """
    Directory containing configuration file config.ini. Default location: $HOME/.hived or CWD/. hived
    """
    debug_node_edit_script: list[str] = []
    """
    Database edits to apply on startup (may specify multiple times)
    """
    disable_get_block: str | None = None
    """
    Disable get_block API call
    """
    dump_memory_details: bool = False
    """
    Dump database objects memory usage info. Use set-benchmark-interval to set dump interval.
    """
    dump_snapshot: str | None = None
    """
    Allows to force immediate snapshot dump at plugin startup. All data in the snaphsot storage are overwritten
    """
    enable_block_log_auto_fixing: bool = True
    """
    If enabled, corrupted block_log will try to fix itself automatically.
    """
    enable_block_log_compression: bool = True
    """
    Compress blocks using zstd as they're added to the block log
    """
    enable_stale_production: bool = False
    """
    Enable block production, even if the chain is stale.
    """
    exit_at_block: int | None = None
    """
    Same as --stop-at-block, but also exit the application
    """
    exit_before_sync: bool = False
    """
    Exits before starting sync, handy for dumping snapshot without starting replay
    """
    flush_state_interval: int | None = None
    """
    flush shared memory changes to disk every N blocks
    """
    force_replay: bool = False
    """
    Before replaying clean all old files. If specifed, `--replay-blockchain` flag is implied
    """
    generate_completions: str | None = None
    """
    Generate bash auto-complete script (try: eval "$(hived --generate-completions)")
    """
    list_plugins: str | None = None
    """
    Print names of all available plugins and exit
    """
    load_snapshot: str | None = None
    """
    Allows to force immediate snapshot import at plugin startup. All data in state storage are overwritten
    """
    log_appender: list[str] = []
    """
    Appender definition JSON. Obligatory attributes:
    "appender" - name of appender
    "stream" - target stream, mutually exclusive with "file"
    "file" - target filename (including path), mutually exclusive with "stream"
    Optional attributes:
    "time_format" - see time_format enum values (default: "iso_8601_seconds")
    Optional attributes (applicable to file appender only):
    "delta_times" - whether times should be printed as deltas since previous message (default: false)
    "flush" - whether each log write should end with flush (default: true)
    "truncate" - whether to truncate the log file at startup (default: true)
    "rotate" - whether the log files should be rotated (default: true)
    "rotation_interval" - seconds between file rotation (default: 3600)
    "rotation_limit" - seconds before rotated file is removed (default: 86400)
    """
    log_console_appender: list[str] = []
    log_file_appender: list[str] = []
    log_json_rpc: str | None = None
    """
    json-rpc log directory name.
    """
    log_logger: list[str] = []
    """
    Logger definition JSON:
    "name" - name of logger
    "level" - level of reporting, see log_level enum values
    "appenders" - list of designated appenders
    """
    market_history_bucket_size: str = '[15,60,300,3600,86400]'
    """
    Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
    """
    market_history_buckets_per_size: int = 5760
    """
    How far back in time to track history for each bucket size, measured in the number of buckets (default: 5760)
    """
    max_mempool_size: str = '100M'
    """
    Postponed transactions that exceed limit are dropped from pending. Setting 0 means only pending transactions that fit in reapplication window of 200ms will stay in mempool.
    """
    notifications_endpoint: list[str] = []
    """
    list of addresses, that will receive notification about in-chain events
    """
    p2p_endpoint: str | None = None
    """
    The local IP address and port to listen for incoming connections.
    """
    p2p_force_validate: bool = False
    """
    Force validation of all transactions.
    """
    p2p_max_connections: int | None = None
    """
    Maxmimum number of incoming connections on P2P endpoint.
    """
    p2p_parameters: str | None = None
    """
    P2P network parameters. (Default: {"listen_endpoint":"0.0.0.0:0","accept_incoming_connections":true,"wait_if_endpoint_is_busy":true,"private_key":"0000000000000000000000000000000000000000000000000000000000000000","desired_number_of_connections":20,"maximum_number_of_connections":200,"peer_connection_retry_timeout":30,"peer_inactivity_timeout":5,"peer_advertising_disabled":false,"maximum_number_of_blocks_to_handle_at_one_time":200,"maximum_number_of_sync_blocks_to_prefetch":20000,"maximum_blocks_per_peer_during_syncing":200,"active_ignored_request_timeout_microseconds":6000000} )
    """
    p2p_seed_node: list[str] = []
    """
    The IP address and port of a remote peer to sync with.
    """
    pacemaker_max_offset: int = 20000
    """
    maximum time of emission offset from block timestamp in milliseconds, default 20000ms (when exceeded, node will be stopped)
    """
    pacemaker_min_offset: int = -300
    """
    minimum time of emission offset from block timestamp in milliseconds, default -300ms
    """
    pacemaker_source: str | None = None
    """
    path to block_log file - source of block emissions
    """
    plugin: list[str] = []
    """
    Plugin(s) to enable, may be specified multiple times
    """
    private_key: list[str] = []
    """
    WIF PRIVATE KEY to be used by one or more witnesses or miners
    """
    process_snapshot_threads_num: int | None = None
    """
    Number of threads intended for snapshot processing. By default set to detected available threads count.
    """
    queen_block_size: int = 0
    """
    Size of blocks expected to be filled (or max allowed by witnesses). Default value 0 means max blocks.
    """
    queen_tx_count: int = 0
    """
    Number of transactions in block. Default value 0 means no limit.
    """
    rc_flood_level: int = 20
    """
    Number of full blocks that can be present in mempool before RC surcharge is applied. 0-65535. Default 20 (one minute of full blocks).
    """
    rc_flood_surcharge: int = 10000
    """
    Multiplication factor for temporary extra RC cost charged for each block above flood level before transaction is allowed to enter and remain in pending. 0-10000. Default 10000 (100%).
    """
    rc_stats_report_output: str = 'ILOG'
    """
    Where to put daily RC stat reports: DLOG, ILOG, NOTIFY, LOG_NOTIFY. Default ILOG.
    """
    rc_stats_report_type: str = 'REGULAR'
    """
    Level of detail of daily RC stat reports: NONE, MINIMAL, REGULAR, FULL. Default REGULAR.
    """
    replay_blockchain: bool = False
    """
    clear chain database and replay all blocks
    """
    required_participation: int = 33
    """
    Percent of witnesses (0-99) that must be participating in order to produce blocks
    """
    resync_blockchain: bool = False
    """
    clear chain database and block log
    """
    set_benchmark_interval: int | None = None
    """
    Print time and memory usage every given number of blocks
    """
    shared_file_dir: str = 'blockchain'
    """
    the location of the chain shared memory files (absolute path or relative to application data dir)
    """
    shared_file_full_threshold: int = 0
    """
    A 2 precision percentage (0-10000) that defines the threshold for when to autoscale the shared memory file. Setting this to 0 disables autoscaling. Recommended value for consensus node is 9500 (95%).
    """
    shared_file_scale_rate: int = 0
    """
    A 2 precision percentage (0-10000) that defines how quickly to scale the shared memory file. When autoscaling occurs the file's size will be increased by this percent. Setting this to 0 disables autoscaling. Recommended value is between 1000-2000 (10-20%)
    """
    shared_file_size: str = '24G'
    """
    Size of the shared memory file. Default: 24G. If running with many plugins, increase this value to 28G.
    """
    skeleton_key: str = '5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n'
    """
    WIF PRIVATE key to be used as skeleton key for all accounts
    """
    snapshot_root_dir: str = 'snapshot'
    """
    The location (root-dir) of the snapshot storage, to save/read portable state dumps
    """
    statsd_batchsize: int = 1
    """
    Size to batch statsd messages.
    """
    statsd_blacklist: list[str] = []
    """
    Blacklist of statistics to capture.
    """
    statsd_endpoint: str | None = None
    """
    Endpoint to send statsd messages to.
    """
    statsd_record_on_replay: bool = False
    """
    Records statsd events during replay
    """
    statsd_whitelist: list[str] = []
    """
    Whitelist of statistics to capture.
    """
    stop_at_block: int | None = None
    """
    Stop after reaching given block number
    """
    transaction_status_block_depth: int = 64000
    """
    Defines the number of blocks from the head block that transaction statuses will be tracked.
    """
    validate_database_invariants: bool = False
    """
    Validate all supply invariants check out
    """
    validate_during_replay: bool = False
    """
    Runs all validations that are normally turned off during replay
    """
    webserver_http_endpoint: str | None = None
    """
    Local http endpoint for webserver requests.
    """
    webserver_https_certificate_file_name: str | None = None
    """
    File name with a server's certificate.
    """
    webserver_https_endpoint: str | None = None
    """
    Local https endpoint for webserver requests.
    """
    webserver_https_key_file_name: str | None = None
    """
    File name with a server's private key.
    """
    webserver_thread_pool_size: int = 32
    """
    Number of threads used to handle queries. Default: 32.
    """
    webserver_unix_endpoint: str | None = None
    """
    Local unix http endpoint for webserver requests.
    """
    webserver_ws_deflate: bool = False
    """
    Enable the RFC-7692 permessage-deflate extension for the WebSocket server (only used if the client requests it).  This may save bandwidth at the expense of CPU
    """
    webserver_ws_endpoint: str | None = None
    """
    Local websocket endpoint for webserver requests.
    """
    witness: list[str] = []
    """
    name of witness controlled by this node (e.g. initwitness )
    """
