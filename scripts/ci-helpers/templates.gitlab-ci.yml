include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  - local: /scripts/ci-helpers/prepare_data_image_job.yml
  - project: hive/common-ci-configuration
    ref: a3e97d90268154fae7933ea98e50e3c1c7c72d43
    file:
      - /templates/dynamic_tag_jobs.gitlab-ci.yml
      - /templates/npm_projects.gitlab-ci.yml
      - /templates/wasm_build.gitlab-ci.yml
      - /templates/python_projects.gitlab-ci.yml
      - /templates/cache_cleanup.gitlab-ci.yml

.python_based:
  extends:
    - .project_develop_configuration_template
  image: "$CI_REGISTRY_IMAGE/ci-base-image$TEST_IMAGE_TAG"
  before_script:
    - cd $CI_PROJECT_DIR/tests/python/hive-local-tools
    - !reference [.project_develop_configuration_template, before_script]
    - cd $CI_PROJECT_DIR

.pytest_based:
  extends: .python_based
  after_script:
    - |
      shopt -s globstar
      tar --exclude='**/generated_during_*/**/block_log' --exclude='**/generated_during_*/**/block_log.artifacts' --exclude='**/generated_during_*/**/shared_memory.bin' --exclude='**/generated_during_*/**/*.sst' -cf - **/generated_during_* | 7z a -si generated_during.tar.7z
      tar -cf - **/generated_by_package_fixtures | 7z a -si generated_by_package_fixtures.tar.7z
  artifacts:
    reports:
      junit: $PYTEST_PYTEST_JUNIT_REPORT
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - "generated_during.tar.7z"
      - "generated_by_package_fixtures.tar.7z"
      - "$PYTEST_PYTEST_JUNIT_REPORT"
    when: always
    expire_in: 1 week

.test_tools_based_base:
  extends: .pytest_based
  variables:
    HIVED_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/hived"
    CLI_WALLET_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/cli_wallet"
    GET_DEV_KEY_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/get_dev_key"
    BLOCK_LOG_UTIL_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/block_log_util"
    TEST_TOOLS_NODE_DEFAULT_WAIT_FOR_LIVE_TIMEOUT: "60"

.message_format_tests:
  extends: .test_tools_based_base
  stage: test
  variables:
    PYTEST_TIMEOUT_MINUTES: 30
    PYTEST_JUNIT_REPORT: $CI_PROJECT_DIR/tests/python/api_tests/message_format_tests/$API/report.xml
  script:
    - cd tests/python/api_tests/message_format_tests/$API
    - export PYTEST_ARGS=(-m ${NODE_TYPE} --http-endpoint=${NODE_ADDRESS})
    - !reference [.run-pytest, script]
  parallel:
    matrix:
      # Any new APIs added here have to also be added in job dynamic-pipeline-test-results-collector
      - API: [ account_by_key_api_tests,
               account_history_api,
               block_api_tests,
               condenser_api_tests,
               database_api_tests,
               json_rpc_api_tests,
               market_history_api_tests,
               rc_api_tests,
               reputation_api_tests,
               transaction_status_api_tests,
               wallet_bridge_api_tests ]
  tags:
    - public-runner-docker
    - hived-for-tests

.rewrite-dotenv-and-extract-binaries:
  extends: .rewrite-dotenv-and-extract-binaries-template
  tags:
    - public-runner-docker