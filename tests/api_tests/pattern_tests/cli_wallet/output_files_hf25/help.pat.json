"                          variant_object about()\ncondenser_api::legacy_signed_transaction cancel_order(const string & owner, uint32_t orderid, bool broadcast)\ncondenser_api::legacy_signed_transaction cancel_transfer_from_savings(const string & from, uint32_t request_id, bool broadcast)\ncondenser_api::legacy_signed_transaction change_recovery_account(const string & owner, const string & new_recovery_account, bool broadcast)\ncondenser_api::legacy_signed_transaction claim_account_creation(const string & creator, const condenser_api::legacy_asset & fee, bool broadcast)\ncondenser_api::legacy_signed_transaction claim_account_creation_nonblocking(const string & creator, const condenser_api::legacy_asset & fee, bool broadcast)\ncondenser_api::legacy_signed_transaction claim_reward_balance(const string & account, const condenser_api::legacy_asset & reward_hive, const condenser_api::legacy_asset & reward_hbd, const condenser_api::legacy_asset & reward_vests, bool broadcast)\ncondenser_api::legacy_signed_transaction convert_hbd(const string & from, const condenser_api::legacy_asset & amount, bool broadcast)\ncondenser_api::legacy_signed_transaction convert_hive_with_collateral(const string & from, const condenser_api::legacy_asset & collateral_amount, bool broadcast)\ncondenser_api::legacy_signed_transaction create_account(const string & creator, const string & new_account_name, const string & json_meta, bool broadcast)\ncondenser_api::legacy_signed_transaction create_account_delegated(const string & creator, const condenser_api::legacy_asset & hive_fee, const condenser_api::legacy_asset & delegated_vests, const string & new_account_name, const string & json_meta, bool broadcast)\ncondenser_api::legacy_signed_transaction create_account_with_keys(const string & creator, const string & newname, const string & json_meta, public_key_type owner, public_key_type active, public_key_type posting, public_key_type memo, bool broadcast)\ncondenser_api::legacy_signed_transaction create_account_with_keys_delegated(const string & creator, const condenser_api::legacy_asset & hive_fee, const condenser_api::legacy_asset & delegated_vests, const string & newname, const string & json_meta, public_key_type owner, public_key_type active, public_key_type posting, public_key_type memo, bool broadcast)\ncondenser_api::legacy_signed_transaction create_funded_account_with_keys(const string & creator, const string & new_account_name, const condenser_api::legacy_asset & initial_amount, const string & memo, const string & json_meta, public_key_type owner_key, public_key_type active_key, public_key_type posting_key, public_key_type memo_key, bool broadcast)\ncondenser_api::legacy_signed_transaction create_order(const string & owner, uint32_t order_id, const condenser_api::legacy_asset & amount_to_sell, const condenser_api::legacy_asset & min_to_receive, bool fill_or_kill, uint32_t expiration, bool broadcast)\ncondenser_api::legacy_signed_transaction create_proposal(const account_name_type & creator, const account_name_type & receiver, time_point_sec start_date, time_point_sec end_date, const condenser_api::legacy_asset & daily_pay, string subject, string permlink, bool broadcast)\ncondenser_api::legacy_signed_transaction decline_voting_rights(const string & account, bool decline, bool broadcast)\n                                  string decrypt_memo(string memo)\ncondenser_api::legacy_signed_transaction delegate_vesting_shares(const string & delegator, const string & delegatee, const condenser_api::legacy_asset & vesting_shares, bool broadcast)\ncondenser_api::legacy_signed_transaction delegate_vesting_shares_and_transfer(const string & delegator, const string & delegatee, const condenser_api::legacy_asset & vesting_shares, const condenser_api::legacy_asset & transfer_amount, optional<string> transfer_memo, bool broadcast)\ncondenser_api::legacy_signed_transaction delegate_vesting_shares_and_transfer_nonblocking(const string & delegator, const string & delegatee, const condenser_api::legacy_asset & vesting_shares, const condenser_api::legacy_asset & transfer_amount, optional<string> transfer_memo, bool broadcast)\ncondenser_api::legacy_signed_transaction delegate_vesting_shares_nonblocking(const string & delegator, const string & delegatee, const condenser_api::legacy_asset & vesting_shares, bool broadcast)\ncondenser_api::legacy_signed_transaction escrow_approve(const string & from, const string & to, const string & agent, const string & who, uint32_t escrow_id, bool approve, bool broadcast)\ncondenser_api::legacy_signed_transaction escrow_dispute(const string & from, const string & to, const string & agent, const string & who, uint32_t escrow_id, bool broadcast)\ncondenser_api::legacy_signed_transaction escrow_release(const string & from, const string & to, const string & agent, const string & who, const string & receiver, uint32_t escrow_id, const condenser_api::legacy_asset & hbd_amount, const condenser_api::legacy_asset & hive_amount, bool broadcast)\ncondenser_api::legacy_signed_transaction escrow_transfer(const string & from, const string & to, const string & agent, uint32_t escrow_id, const condenser_api::legacy_asset & hbd_amount, const condenser_api::legacy_asset & hive_amount, const condenser_api::legacy_asset & fee, const time_point_sec & ratification_deadline, const time_point_sec & escrow_expiration, const string & json_meta, bool broadcast)\n             condenser_api::legacy_asset estimate_hive_collateral(const condenser_api::legacy_asset & hbd_amount_to_get)\n    condenser_api::find_proposals_return find_proposals(vector<int64_t> proposal_ids)\nvector<database_api::api_recurrent_transfer_object> find_recurrent_transfers(const account_name_type & from)\ncondenser_api::legacy_signed_transaction follow(const string & follower, const string & following, set<string> what, bool broadcast)\n       condenser_api::api_account_object get_account(const string & account_name)\nmap<uint32_t, condenser_api::api_operation_object> get_account_history(const string & account, uint32_t from, uint32_t limit)\n               vector<account_name_type> get_active_witnesses()\noptional<condenser_api::legacy_signed_block> get_block(uint32_t num)\nvector<condenser_api::api_collateralized_convert_request_object> get_collateralized_conversion_requests(const string & owner)\nvector<condenser_api::api_convert_request_object> get_conversion_requests(const string & owner)\n                                  string get_encrypted_memo(const string & from, const string & to, const string & memo)\n  condenser_api::api_feed_history_object get_feed_history()\nvector<condenser_api::api_limit_order_object> get_open_orders(const string & accountname)\nvector<condenser_api::api_operation_object> get_ops_in_block(uint32_t block_num, bool only_virtual)\n    condenser_api::get_order_book_return get_order_book(uint32_t limit)\nvector<database_api::api_owner_authority_history_object> get_owner_history(const string & account)\n                                  string get_private_key(public_key_type pubkey)\n           pair<public_key_type, string> get_private_key_from_password(const string & account, const string & role, const string & password)\n                               operation get_prototype_operation(const string & operation_type)\n                    condenser_api::state get_state(string url)\ncondenser_api::legacy_signed_transaction get_transaction(transaction_id_type trx_id)\nvector<database_api::api_withdraw_vesting_route_object> get_withdraw_routes(const string & account, condenser_api::withdraw_route_type type)\noptional<condenser_api::api_witness_object> get_witness(const string & owner_account)\n                                  string gethelp(const string & method)\n                                  string help()\n                                    bool import_key(const string & wif_key)\n                                 variant info()\n                                    bool is_locked()\n                                    bool is_new()\n               vector<account_name_type> list_accounts(const string & lowerbound, uint32_t limit)\n            map<public_key_type, string> list_keys()\nvector<condenser_api::api_account_object> list_my_accounts()\ncondenser_api::list_proposal_votes_return list_proposal_votes(fc::variant start, uint32_t limit, database_api::sort_order_type order_by, database_api::order_direction_type order_type, database_api::proposal_status status)\n    condenser_api::list_proposals_return list_proposals(fc::variant start, uint32_t limit, database_api::sort_order_type order_by, database_api::order_direction_type order_type, database_api::proposal_status status)\n               vector<account_name_type> list_witnesses(const string & lowerbound, uint32_t limit)\n                                    bool load_wallet_file(string wallet_filename)\n                                    void lock()\n                                  string normalize_brain_key(string s)\ncondenser_api::legacy_signed_transaction post_comment(const string & author, const string & permlink, const string & parent_author, const string & parent_permlink, const string & title, const string & body, const string & json, bool broadcast)\ncondenser_api::legacy_signed_transaction publish_feed(const string & witness, const condenser_api::legacy_price & exchange_rate, bool broadcast)\ncondenser_api::legacy_signed_transaction recover_account(const string & account_to_recover, authority recent_authority, authority new_authority, bool broadcast)\ncondenser_api::legacy_signed_transaction recurrent_transfer(const account_name_type & from, const account_name_type & to, const condenser_api::legacy_asset & amount, const string & memo, uint16_t recurrence, uint16_t executions, bool broadcast)\ncondenser_api::legacy_signed_transaction remove_proposal(const account_name_type & deleter, const flat_set<int64_t> & ids, bool broadcast)\ncondenser_api::legacy_signed_transaction request_account_recovery(const string & recovery_account, const string & account_to_recover, authority new_authority, bool broadcast)\n                                    void save_wallet_file(string wallet_filename)\n                                  string serialize_transaction(const signed_transaction & tx)\n                                    void set_password(const string & password)\n                                    void set_transaction_expiration(uint32_t seconds)\ncondenser_api::legacy_signed_transaction set_voting_proxy(const string & account_to_modify, const string & proxy, bool broadcast)\ncondenser_api::legacy_signed_transaction set_withdraw_vesting_route(const string & from, const string & to, uint16_t percent, bool auto_vest, bool broadcast)\ncondenser_api::legacy_signed_transaction sign_transaction(const condenser_api::legacy_signed_transaction & tx, bool broadcast)\n                          brain_key_info suggest_brain_key()\ncondenser_api::legacy_signed_transaction transfer(const string & from, const string & to, const condenser_api::legacy_asset & amount, const string & memo, bool broadcast)\ncondenser_api::legacy_signed_transaction transfer_from_savings(const string & from, uint32_t request_id, const string & to, const condenser_api::legacy_asset & amount, const string & memo, bool broadcast)\ncondenser_api::legacy_signed_transaction transfer_nonblocking(const string & from, const string & to, const condenser_api::legacy_asset & amount, const string & memo, bool broadcast)\ncondenser_api::legacy_signed_transaction transfer_to_savings(const string & from, const string & to, const condenser_api::legacy_asset & amount, const string & memo, bool broadcast)\ncondenser_api::legacy_signed_transaction transfer_to_vesting(const string & from, const string & to, const condenser_api::legacy_asset & amount, bool broadcast)\ncondenser_api::legacy_signed_transaction transfer_to_vesting_nonblocking(const string & from, const string & to, const condenser_api::legacy_asset & amount, bool broadcast)\n                                    void unlock(const string & password)\ncondenser_api::legacy_signed_transaction update_account(const string & accountname, const string & json_meta, public_key_type owner, public_key_type active, public_key_type posting, public_key_type memo, bool broadcast)\ncondenser_api::legacy_signed_transaction update_account_auth_account(const string & account_name, authority_type type, const string & auth_account, weight_type weight, bool broadcast)\ncondenser_api::legacy_signed_transaction update_account_auth_key(const string & account_name, authority_type type, public_key_type key, weight_type weight, bool broadcast)\ncondenser_api::legacy_signed_transaction update_account_auth_threshold(const string & account_name, authority_type type, uint32_t threshold, bool broadcast)\ncondenser_api::legacy_signed_transaction update_account_memo_key(const string & account_name, public_key_type key, bool broadcast)\ncondenser_api::legacy_signed_transaction update_account_meta(const string & account_name, const string & json_meta, bool broadcast)\ncondenser_api::legacy_signed_transaction update_proposal(int64_t proposal_id, const account_name_type & creator, const condenser_api::legacy_asset & daily_pay, string subject, string permlink, optional<time_point_sec> end_date, bool broadcast)\ncondenser_api::legacy_signed_transaction update_proposal_votes(const account_name_type & voter, const flat_set<int64_t> & proposals, bool approve, bool broadcast)\ncondenser_api::legacy_signed_transaction update_witness(const string & witness_name, const string & url, public_key_type block_signing_key, const condenser_api::api_chain_properties & props, bool broadcast)\ncondenser_api::legacy_signed_transaction vote(const string & voter, const string & author, const string & permlink, int16_t weight, bool broadcast)\ncondenser_api::legacy_signed_transaction vote_for_witness(const string & account_to_vote_with, const string & witness_to_vote_for, bool approve, bool broadcast)\ncondenser_api::legacy_signed_transaction withdraw_vesting(const string & from, const condenser_api::legacy_asset & vesting_shares, bool broadcast)\n"