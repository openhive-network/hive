stages:
- static_code_analysis
- build
- test
- cleanup
- publish
- deploy

variables:
  PYTEST_NUMBER_OF_PROCESSES: 8
  GIT_DEPTH: 15
  GIT_SUBMODULE_DEPTH: 1
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  CI_DEBUG_SERVICES: "true"

  # Versions of Python packages
  PYTHON_JUNIT_XML_VERSION: "1.9"
  PYTHON_DATEUTIL_VERSION: "2.8.2"

  DATA_CACHE_HIVE_PREFIX: "/cache/replay_data_hive"
  BLOCK_LOG_SOURCE_DIR_5M: /blockchain/block_log_5m
  BLOCK_LOG_SOURCE_DIR_MIRRORNET_5M: /blockchain/block_log_5m_mirrornet

  # Variables required by the mirrornet pipeline
  TEST_TOOLS_VALIDATE_RESPONSE_SCHEMAS: "TRUE"

include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  # needed to point TEST_IMAGE_TAG
  - local: '/scripts/ci-helpers/ci_image_tag_vars.yml'
  - local: '/scripts/ci-helpers/prepare_data_image_job.yml'
  - local: '/scripts/ci-helpers/mirrornet_jobs.gitlab-ci.yml'
  - local: '/scripts/ci-helpers/extended_block_log_creation.gitlab-ci.yml'

cleanup_hived_cache_manual:
  extends: .cleanup_cache_manual_template
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "/cache/replay_data_hive_*"
  tags:
    - data-cache-storage

cleanup_cache_on_hived_builders:
  extends: .cleanup_cache_manual_template
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "/cache/replay_data_hive_*"
  tags:
    - public-runner-docker
    - hived-for-tests

cleanup_old_hived_cache:
  extends: .cleanup_old_cache_template
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "/cache/replay_data_hive_*"
  tags:
    - data-cache-storage


testnet_node_build:
  extends: .prepare_hived_image
  stage: build

  variables:
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD
    BINARY_CACHE_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries"
    HIVE_NETWORK_TYPE: testnet
  artifacts:
    paths:
      - "$BINARY_CACHE_PATH"
  tags:
    - public-runner-docker
    - hived-for-tests

.unit_tests_base:
  extends: .job-defaults
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/ci-base-image$TEST_IMAGE_TAG"
  variables:
    GIT_STRATEGY: none
    FF_NETWORK_PER_BUILD: "true"
  tags:
    - public-runner-docker

.hived-service: &hived-service
  - name: $HIVED_IMAGE_NAME
    alias: hived-instance
    variables:
      DATA_SOURCE: "${DATA_CACHE_HIVE_PREFIX}_${HIVED_COMMIT}"
      LOG_FILE: $CI_JOB_NAME.log
    command: ["--replay-blockchain", "--stop-at-block=5000000"]

.test-block-log-service:
  variables:
    TEST_BLOCK_LOG_SERVER: "http://test-block-log-server:80"
  services:
    - name: $TEST_BLOCK_LOG_LATEST_VERSION_IMAGE
      alias: test-block-log-server

.python_based:
  image: "$CI_REGISTRY_IMAGE/ci-base-image$TEST_IMAGE_TAG"
  extends:
    - .project_develop_configuration_template
  before_script:
    - cd $CI_PROJECT_DIR/tests/python/hive-local-tools
    - !reference [.project_develop_configuration_template, before_script]
    - cd $CI_PROJECT_DIR

.python_static_analysis_configuration:
  extends: .python_based
  needs: []  # to run immediately without waiting for previous jobs
  variables:
    PACKAGES_TO_CHECK: "$CI_PROJECT_DIR/tests/python/hive-local-tools" # temporary until test code will be cleaned up in further MRs
    PYPROJECT_CONFIG_PATH: "$CI_PROJECT_DIR/tests/python/hive-local-tools/pyproject.toml"
    PRE_COMMIT_CONFIG: "$CI_PROJECT_DIR/tests/python/hive-local-tools/.pre-commit-config.yaml"
    PYPROJECT_DIR: "$CI_PROJECT_DIR/tests/python/hive-local-tools"
  before_script:
    - !reference [.python_based, before_script]
    - cd $CI_PROJECT_DIR/tests/python/hive-local-tools
  tags:
    - public-runner-docker

pre_commit_checks:
  stage: static_code_analysis
  variables:
    POETRY_INSTALL_ARGS: --only pre-commit
  extends:
    - .pre_commit_checks_template
    - .python_static_analysis_configuration
  artifacts:
    paths:
      - tests/python/hive-local-tools/poetry.lock

.pytest_based:
  extends: .python_based
  variables:
    PYPROJECT_DIR: "$CI_PROJECT_DIR/tests/python/hive-local-tools"
  after_script:
    - |
      shopt -s globstar
      tar --exclude='**/generated_during_*/**/block_log*' --exclude='**/generated_during_*/**/shared_memory.bin' --exclude='**/generated_during_*/**/*.sst' -cf - **/generated_during_* | 7z a -si generated_during.tar.7z
      tar -cf - **/generated_by_package_fixtures | 7z a -si generated_by_package_fixtures.tar.7z
  artifacts:
    reports:
      junit: $PYTEST_JUNIT_REPORT
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - "generated_during.tar.7z"
      - "generated_by_package_fixtures.tar.7z"
    when: always
    expire_in: 1 week

.test_tools_based:
  extends: .pytest_based
  variables:
    HIVED_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/hived"
    CLI_WALLET_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/cli_wallet"
    GET_DEV_KEY_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/get_dev_key"
    BLOCK_LOG_UTIL_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/block_log_util"
    SST_DUMP_PATH: "$CI_PROJECT_DIR/hived-testnet-binaries/sst_dump"
    TEST_TOOLS_NODE_DEFAULT_WAIT_FOR_LIVE_TIMEOUT: "60"
  needs:
    - job: testnet_node_build
      artifacts: true

recovery_tests:
  stage: test
  extends: .test_tools_based
  variables:
    PYTEST_TIMEOUT_MINUTES: 10
    PYTEST_JUNIT_REPORT: $CI_PROJECT_DIR/tests/python/functional/recovery_tests/report.xml
  script:
    - cd tests/python/functional/recovery_tests
    - !reference [.run-pytest, script]
  tags:
    - public-runner-docker
