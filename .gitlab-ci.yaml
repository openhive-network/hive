stages:
- build
- test
- cleanup

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  # pin to specific docker images for build repeatability
  #points registry.gitlab.syncad.com/hive/hive/runtime:ubuntu-20.04-3
  RUNTIME_IMAGE_TAG: "@sha256:58b2ef26ece0463bad9ba61c665ffb9dc4255a4d65b27f56048786e3fae7b2e5"
  #points registry.gitlab.syncad.com/hive/hive/builder:ubuntu-20.04-3
  BUILDER_IMAGE_TAG: "@sha256:590750387c74c470ee30910502b4f855122eae9ef9c6e7ad0841985abdc3938c"
  #points registry.gitlab.syncad.com/hive/hive/test:ubuntu-20.04-3
  TEST_IMAGE_TAG: "@sha256:991f5c225ea66dccabd43ae18ebe9cc4c90dc2b14d80625202f96e041c832ac6"
  #points to our clone of python:3.8-slim-bullseye
  PYTHON_BULLSEYE_TAG: "@sha256:c4dc24a9761fe0a7b3f498fe677e8129ab0a62d72a3beae5ea899482f104a962"
  # Versions of Python packages
  PYTEST_VERSION: "7.1.2"
  PYTEST_XDIST_VERSION: "2.5.0"
  PYTEST_TIMEOUT_VERSION: "2.1.0"

include: '/scripts/ci-helpers/prepare_data_image_job.yml'

prepare_hived_data_image:
  extends: .prepare_hived_data_5m_image
  stage: build
  variables:
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD

  tags:
    - public-runner-docker
    - hived-for-tests

cleanup_hived_data_image:
  extends: .docker_image_cleanup_job
  stage: cleanup
  dependencies:
    - prepare_hived_data_image

  variables:
    REGISTRY: $CI_REGISTRY_IMAGE
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_REGISTRY_CLEANUP_TOKEN
    IMAGE_PATH: $HIVED_IMAGE_NAME_REGISTRY_PATH
    IMAGE_TAG: $HIVED_IMAGE_NAME_REGISTRY_TAG

  tags:
    - public-runner-docker
    - hived-for-tests

testnet_node_build:
  stage: build
  image: "$CI_REGISTRY_IMAGE/builder$BUILDER_IMAGE_TAG"
  interruptible: true
  script:
    # TESTNET=ON HIVE_LINT=OFF
    - ./ciscripts/build.sh ON OFF
    - mkdir -p "$CI_JOB_NAME"/tests/unit
    - mv build/install-root "$CI_JOB_NAME"
    - mv contrib/hived.run "$CI_JOB_NAME"
    - mv contrib/config-for-docker.ini "$CI_JOB_NAME"
    - mv build/tests/unit/chain_test build/tests/unit/plugin_test "$CI_JOB_NAME"/tests/unit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "$CI_JOB_NAME"
    expire_in: 6 hours
  tags:
     - public-runner-docker
     - hived-for-tests
     - hived

chain_test:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  interruptible: true
  variables:
    GIT_STRATEGY: none
  script:
    - timeout 23m ./testnet_node_build/tests/unit/chain_test --log_format=JUNIT --log_sink=chain_test_results.xml --log_level=error > chain_test.log 2>&1
  timeout: 28min
  artifacts:
    reports:
      junit: chain_test_results.xml
    paths:
      - chain_test.log
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

plugin_test:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  interruptible: true
  variables:
    GIT_STRATEGY: none
  script:
    # note: consider using --result_code=no to force exit code 0 even when tests fail because they currently fail and I want a nice green checkmark
    - timeout 6m ./testnet_node_build/tests/unit/plugin_test --log_format=JUNIT --log_sink=plugin_test_results.xml --log_level=error > plugin_test.log 2>&1
  timeout: 11min
  artifacts:
    reports:
      junit: plugin_test_results.xml
    paths:
      - plugin_test.log
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

.beem_setup : &beem_setup
  - git clone --depth=1 --single-branch --branch master https://gitlab.syncad.com/hive/beem.git
  - python3 -m venv venv/
  - . venv/bin/activate
  - python3 -m pip install --upgrade pip
  - pip3 install junit-xml python-dateutil
  - cd beem
  - python3 -m pip install --upgrade -r requirements-test.txt
  - python3 setup.py install
  - cd ..
  - mkdir -p build/tests/hive-node-data

beem_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:
    - *beem_setup
    - cd tests/functional/python_tests/dhf_tests
    - timeout 18m pytest -n ${NUMBER_OF_PROCESSES} --durations 0 --junitxml="./report.xml"
  timeout: 23min
  artifacts:
    reports:
      junit: tests/functional/python_tests/dhf_tests/report.xml
  tags:
    - public-runner-docker

.test_tools_based:
  variables:
    HIVED_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived"
    CLI_WALLET_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/cli_wallet"
    GET_DEV_KEY_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/get_dev_key"
    TEST_TOOLS_NODE_DEFAULT_WAIT_FOR_LIVE_TIMEOUT: "60"
  interruptible: true
  before_script:
    - apt-get update -y && apt-get install -y python3 python3-pip python3-dev python3-venv
    - export NUMBER_OF_PROCESSES=$(nproc)
    - python3 -m venv venv/
    - . venv/bin/activate
    - pip3 install pytest==${PYTEST_VERSION} pytest-xdist==${PYTEST_XDIST_VERSION} pytest-timeout==${PYTEST_TIMEOUT_VERSION} "$CI_PROJECT_DIR/tests/test_tools"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "**/generated_during_*"
    - "**/generated_by_package_fixtures"
    when: always
    expire_in: 1 week

.test_tools_based_with_faketime:
  extends: .test_tools_based
  before_script:
    - !reference [.test_tools_based, before_script]
    - git clone --depth 1 --branch master https://github.com/wolfcw/libfaketime.git
    - cd libfaketime && make
    - export LIBFAKETIME_PATH=`pwd`/src/libfaketime.so.1
    - cd ..

cli_wallet_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/cli_wallet
    - timeout 30m pytest --junitxml="./report.xml"
  timeout: 35min
  tags:
    - public-runner-docker
  artifacts:
    reports:
      junit: tests/functional/python_tests/cli_wallet/report.xml

hived_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/hived
    - timeout 21m pytest --junitxml="./report.xml"
  timeout: 26min
  tags:
    - public-runner-docker
  artifacts:
    reports:
      junit: tests/functional/python_tests/hived/report.xml

cli_wallet_extended_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/cli_wallet_extended_tests
    - timeout 11m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 16min
  artifacts:
    reports:
      junit: tests/functional/python_tests/cli_wallet_extended_tests/report.xml
  tags:
    - public-runner-docker

fork_tests:
  stage: test
  extends: .test_tools_based_with_faketime
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/fork_tests
    - timeout 8m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 13min
  artifacts:
    reports:
      junit: tests/functional/python_tests/fork_tests/report.xml
  tags:
    - public-runner-docker

hf26_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    SIGN_TRANSACTION_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/sign_transaction"
  script:
    - cd tests/functional/python_tests/hf26_tests
    - timeout 20m pytest -n auto --junitxml="./report.xml"
  timeout: 25min
  artifacts:
    reports:
      junit: tests/functional/python_tests/hf26_tests/report.xml
  tags:
    - public-runner-docker

live_sync_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/test_tools/package
  script:
    - apt-get update -y && apt-get install -y tox
    - cd tests/functional/python_tests/live_sync_tests
    - timeout 11m tox
  timeout: 16min
  artifacts:
    reports:
      junit: tests/functional/python_tests/live_sync_tests/report.xml
  tags:
    - public-runner-docker
    
network_broadcast_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/network_broadcast_tests
    - timeout 6m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 11min
  artifacts:
    reports:
      junit: tests/functional/python_tests/network_broadcast_tests/report.xml
  tags:
    - public-runner-docker

test_tools_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/test_tools/tests
    - timeout 23m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 28min
  artifacts:
    reports:
      junit: tests/test_tools/tests/report.xml
  tags:
    - public-runner-docker

rc_direct_delegations_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd tests/functional/python_tests/direct_rc_delegations_tests
    - timeout 12m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 17min
  artifacts:
    reports:
      junit: tests/functional/python_tests/direct_rc_delegations_tests/report.xml
  tags:
    - public-runner-docker

message_format_testnet_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    SIGN_TRANSACTION_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/sign_transaction"
    TEST_TOOLS_VALIDATE_RESPONSE_SCHEMAS: "TRUE"
    NODE_TYPE: "testnet"
  script:
    - cd tests/api_tests/message_format_tests
    - pip3 install "$CI_PROJECT_DIR/tests/schemas"
    - timeout 24m pytest --timeout=1380 -m "${NODE_TYPE} or (not testnet and not mainnet_5m and not mainnet_64m)" -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 28min
  artifacts:
    reports:
      junit: tests/api_tests/message_format_tests/report.xml
  tags:
    - public-runner-docker

datagen_api_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    SIGN_TRANSACTION_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/sign_transaction"
  script:
    - cd tests/functional/python_tests/datagen_tests/api_tests/
    - timeout 9m pytest --timeout=480 --durations=0 -vv -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  timeout: 13min
  artifacts:
    reports:
      junit: tests/functional/python_tests/datagen_tests/api_tests/report.xml
  tags:
    - public-runner-docker

patterns_tests:
  extends: .docker_image_builder_job
  stage: test
  variables:
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/tests/test_tools/package"

  needs:
    - job: prepare_hived_data_image
      artifacts: true

  services:
    - name: $HIVED_IMAGE_NAME
      alias: hived-instance

  before_script:
    - !reference [.docker_image_builder_job, before_script]
    - echo "HIVED image name $HIVED_IMAGE_NAME"
    - apk update && apk add build-base python3-dev
    - python3 -m ensurepip
    - pip3 install tox
    - pip3 install -r $CI_PROJECT_DIR/tests/api_tests/comparsion_tests/requirements.txt

  script:
    # run pattern tests
    - cd $CI_PROJECT_DIR/tests/api_tests/pattern_tests
    - timeout 33m ./run_tests.sh hived-instance:8090 `git rev-parse --show-toplevel`

  timeout: 38min
  artifacts:
    when: always
    reports:
      junit: $CI_PROJECT_DIR/tests/api_tests/pattern_tests/results.xml
    paths:
    - "$CI_JOB_NAME"
    - "**/from_node.log"
    - "**/ah.log"
    - "**/*.out.json"
    - "$CI_PROJECT_DIR/tests/tests_api/hived/workdir_*"
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests

transaction_serialization_testnet_tests:
  stage: test
  extends: .test_tools_based_with_faketime
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - cd $CI_PROJECT_DIR/tests/functional/python_tests/transaction_serialization_tests
    - timeout 15m pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml" -m testnet
  timeout: 20min
  artifacts:
    reports:
      junit: tests/functional/python_tests/transaction_serialization_tests/report.xml
  tags:
    - public-runner-docker

transaction_serialization_mainnet_tests:
  stage: test
  image: "$CI_REGISTRY_IMAGE/python$PYTHON_BULLSEYE_TAG"
  interruptible: true
  variables:
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/tests/test_tools/package"
    HIVED_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived"
    CLI_WALLET_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/cli_wallet"
    GET_DEV_KEY_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/get_dev_key"
    TEST_TOOLS_NODE_DEFAULT_WAIT_FOR_LIVE_TIMEOUT: "60"
  needs:
    - job: prepare_hived_data_image
      artifacts: true

  services:
    - name: $HIVED_IMAGE_NAME
      alias: hived-instance

  before_script:
    - echo "HIVED image name $HIVED_IMAGE_NAME"
    - apt update && apt install -y bash git ca-certificates curl build-essential python3-dev
    - python3 -m ensurepip
    - export NUMBER_OF_PROCESSES=$(nproc)
    - pip3 install pytest pytest-xdist "$CI_PROJECT_DIR/tests/test_tools"

  script:
    # run pattern tests
    - cd $CI_PROJECT_DIR/tests/functional/python_tests/transaction_serialization_tests/cli_wallet
    - timeout 27m pytest -n ${NUMBER_OF_PROCESSES} -m mainnet_5m --junitxml="./report.xml" --http-endpoint='hived-instance:8090' --ws-endpoint='hived-instance:8090' --wallet-path="$CI_PROJECT_DIR/hived-mainnet-binaries/cli_wallet"

  timeout: 32min

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    reports:
      junit: $CI_PROJECT_DIR/tests/functional/python_tests/transaction_serialization_tests/cli_wallet/report.xml
    paths:
    - "**/generated_during_*"
    - "**/generated_by_package_fixtures"
    when: always
    expire_in: 1 week
  tags:
    - public-runner-docker
    - hived-for-tests

.message_format_tests:
  image: "$CI_REGISTRY_IMAGE/python$PYTHON_BULLSEYE_TAG"
  variables:
    TEST_TOOLS_VALIDATE_RESPONSE_SCHEMAS: "TRUE"
  script:
    - apt update && apt install -y bash git ca-certificates curl build-essential python3-dev
    - python3 -m ensurepip
    - export NUMBER_OF_PROCESSES=$(nproc)
    - pip3 install pytest pytest-xdist "$CI_PROJECT_DIR/tests/test_tools" "$CI_PROJECT_DIR/tests/schemas"
    - cd tests/api_tests/message_format_tests
    - timeout 30m pytest -n ${NUMBER_OF_PROCESSES} -m ${NODE_TYPE} --junitxml="./report.xml" --http-endpoint=${NODE_ADDRESS}
  timeout: 35min
  artifacts:
    reports:
      junit: tests/api_tests/message_format_tests/report.xml
  tags:
    - public-runner-docker
    - hived-for-tests

message_format_mainnet_5m_tests:
  extends: .message_format_tests
  needs:
    - job: prepare_hived_data_image
      artifacts: true
  services:
    - name: $HIVED_IMAGE_NAME
      alias: hived-instance
  variables:
    NODE_ADDRESS: "hived-instance:8090"
    NODE_TYPE: "mainnet_5m"

message_format_mainnet_64m_tests:
  extends: .message_format_tests
  variables:
    NODE_ADDRESS: "http://api.fqdn.pl:8092"
    NODE_TYPE: "mainnet_64m"
  rules:
    # Run this job, only when environment variable "RUN_MESSAGE_FORMAT_TESTS_ON_MAINNET_64M" is set
    - if: $RUN_MESSAGE_FORMAT_TESTS_ON_MAINNET_64M == "TRUE"
      when: always
