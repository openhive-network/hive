stages:
- build
- test
- package

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  # pin to specific docker images for build repeatability
  RUNTIME_IMAGE_TAG: "@sha256:e1995e7b44d58436ce97fbcd28a5200d8e877f476c9c4bd3e1cc394c17be050b"
  BUILDER_IMAGE_TAG: "@sha256:13933b563395cc3c6ea8bcbd95b717eb4c9fcc33c4cd7194e620713aca03180d"
  TEST_IMAGE_TAG: "@sha256:fc78e92864645317c82c4703edd5b679c3d22c24bb7253612fb350b629681637"

testnet_node_build:
  stage: build
  image: "$CI_REGISTRY_IMAGE/builder$BUILDER_IMAGE_TAG"
  script:
    # TESTNET=ON HIVE_LINT=ON
    - ./ciscripts/build.sh ON ON
    - mkdir -p "$CI_JOB_NAME"/tests/unit
    - mv build/install-root "$CI_JOB_NAME"
    - mv contrib/hived.run "$CI_JOB_NAME"
    - mv contrib/config-for-docker.ini "$CI_JOB_NAME"
    - mv build/tests/unit/chain_test build/tests/unit/plugin_test "$CI_JOB_NAME"/tests/unit
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "$CI_JOB_NAME"
    expire_in: 6 hours
  tags:
     - public-runner-docker
     - hived-for-tests

consensus_build:
  stage: build
  image: "$CI_REGISTRY_IMAGE/builder$BUILDER_IMAGE_TAG"
  script:
    # TESTNET=OFF HIVE_LINT=ON
    - ./ciscripts/build.sh OFF ON
    - mkdir "$CI_JOB_NAME"
    - mv build/install-root "$CI_JOB_NAME"
    - mv contrib/hived.run "$CI_JOB_NAME"
    - mv contrib/config-for-docker.ini "$CI_JOB_NAME"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "$CI_JOB_NAME"
    expire_in: 6 hours
  tags:
    - public-runner-docker

chain_test:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  variables:
    GIT_STRATEGY: none
  script:
    - ./testnet_node_build/tests/unit/chain_test --log_format=JUNIT --log_sink=chain_test_results.xml --log_level=error > /dev/null 2>&1
  artifacts:
    reports:
      junit: chain_test_results.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

plugin_test:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG"
  variables:
    GIT_STRATEGY: none
  script:
    # note: consider using --result_code=no to force exit code 0 even when tests fail because they currently fail and I want a nice green checkmark
    - ./testnet_node_build/tests/unit/plugin_test --log_format=JUNIT --log_sink=plugin_test_results.xml --log_level=error > /dev/null 2>&1
  artifacts:
    reports:
      junit: plugin_test_results.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

.beem_setup : &beem_setup |
  git clone --depth=1 --single-branch --branch master https://gitlab.syncad.com/hive/beem.git
  cd beem
  python3 -m pip install --upgrade pip
  python3 -m pip install --upgrade -r requirements-test.txt
  python3 setup.py install
  cd ..
  mkdir -p build/tests/hive-node-data

beem_tests:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:
    - *beem_setup
    - cd tests/functional/python_tests/dhf_tests
    - "python3 run_proposal_tests.py initminer hive.fund 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data"
    - rm -rf $CI_PROJECT_DIR/build/tests/hive-node-data
    - mkdir -p $CI_PROJECT_DIR/build/tests/hive-node-data
    - "python3 beem_dhf_tests.py initminer initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data --no-erase-proposal --junit-output=beem_dhf_test.xml"
    - cd ../hived
    - "python3 hived_hybrid_operations_test.py initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data"
  artifacts:
    paths:
    - tests/functional/python_tests/dhf_tests/artifacts/
    - tests/functional/python_tests/dhf_tests/beem_dhf_tests.log
    - tests/functional/python_tests/hived/hived_hybrid_operations_test.log
    reports:
      junit: tests/functional/python_tests/dhf_tests/beem_dhf_test.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

list_proposals_tests:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:
    - *beem_setup
    - cd tests/functional/python_tests/dhf_tests
    - "python3 list_proposals_tests.py initminer initminer 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --run-hived $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived --working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data --junit-output=list_proposals_tests.xml"
  artifacts:
    paths:
    - tests/functional/python_tests/dhf_tests/hdf_list_proposal.log
    reports:
      junit: tests/functional/python_tests/dhf_tests/list_proposals_tests.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

cli_wallet_tests:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:
    - *beem_setup
    - cd tests/functional/python_tests/cli_wallet
    - "python3 run.py --hive-path $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived --hive-working-dir=$CI_PROJECT_DIR/build/tests/hive-node-data --path-to-cli $CI_PROJECT_DIR/testnet_node_build/install-root/bin --creator initminer --wif 5JNHfZYKGaomSFvd4NUdQ9qMcEAC43kujbfjueTHpVapX1Kzq2n --junit-output=cli_wallet_tests.xml"
  artifacts:
    paths:
    - tests/functional/python_tests/cli_wallet/tests/logs/cli_wallet.log
    reports:
      junit: tests/functional/python_tests/cli_wallet/cli_wallet_tests.xml
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker

hived_options_tests:
  stage: test
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:
    - cd tests/functional/python_tests/hived
    - apt-get update -y && apt-get install -y python3 python3-pip python3-dev
    - pip3 install -U psutil
    - "python3 hived_options_tests.py --run-hived $CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived"
  tags:
    - public-runner-docker

.test_tools_based:
  variables:
    PYTHONPATH: "$CI_PROJECT_DIR/tests/test_tools/package"
    HIVED_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/hived"
    CLI_WALLET_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/cli_wallet"
    GET_DEV_KEY_PATH: "$CI_PROJECT_DIR/testnet_node_build/install-root/bin/get_dev_key"
  before_script:
    - apt-get update -y && apt-get install -y python3 python3-pip python3-dev
    - export NUMBER_OF_PROCESSES=$(nproc)
    - pip3 install requests
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
    - "**/generated_during_*"
    - "**/generated_by_package_fixtures"
    when: always
    expire_in: 1 week

cli_wallet_extended_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - pip3 install pytest pytest-xdist
    - cd tests/functional/python_tests/cli_wallet_extended_tests
    - pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  artifacts:
    reports:
      junit: tests/functional/python_tests/cli_wallet_extended_tests/report.xml
  tags:
    - public-runner-docker

fork_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - pip3 install pytest
    - cd tests/functional/python_tests/fork_tests
    - pytest --junitxml="./report.xml"
  artifacts:
    reports:
      junit: tests/functional/python_tests/fork_tests/report.xml
  tags:
    - public-runner-docker

synchronization_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - pip3 install pytest
    - cd tests/functional/python_tests/synchronization_tests
    - pytest --junitxml="./report.xml"
  artifacts:
    reports:
      junit: tests/functional/python_tests/synchronization_tests/report.xml
  tags:
    - public-runner-docker

test_tools_tests:
  stage: test
  extends: .test_tools_based
  needs:
    - job: testnet_node_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/test$TEST_IMAGE_TAG"
  script:
    - pip3 install pytest pytest-xdist
    - cd tests/test_tools/tests
    - pytest -n ${NUMBER_OF_PROCESSES} --junitxml="./report.xml"
  artifacts:
    reports:
      junit: tests/test_tools/tests/report.xml
  tags:
    - public-runner-docker

hived_replay_tests:
  stage: test
  needs:
    - job: consensus_build
      artifacts: true
  image: "$CI_REGISTRY_IMAGE/builder$BUILDER_IMAGE_TAG"
  variables:
    PYTHONPATH: $CI_PROJECT_DIR/tests/functional
  script:

    - export ROOT_DIRECTORY=$PWD
    - mkdir $ROOT_DIRECTORY/replay_logs
    - cd tests/functional/python_tests/hived
    - apt-get update -y && apt-get install -y python3 python3-pip python3-dev
    - pip3 install -U wget psutil junit_xml gcovr secp256k1prp requests
    - $CI_PROJECT_DIR/consensus_build/install-root/bin/truncate_block_log /blockchain/block_log /tmp/block_log 3000000

    # quick replays for 10k blocks, with node restarts
    - "python3 snapshot_1.py --run-hived $CI_PROJECT_DIR/consensus_build/install-root/bin/hived --block-log /tmp/block_log --blocks 10000 --artifact-directory $ROOT_DIRECTORY/replay_logs"
    - "python3 snapshot_2.py --run-hived $CI_PROJECT_DIR/consensus_build/install-root/bin/hived --block-log /tmp/block_log --blocks 10000 --artifact-directory $ROOT_DIRECTORY/replay_logs"

    # group of tests, that uses one node with 5 milion blocks replayed
    - "python3 start_replay_tests.py --run-hived $CI_PROJECT_DIR/consensus_build/install-root/bin/hived --blocks 3000000 --block-log /tmp/block_log --test-directory $PWD/replay_based_tests --artifact-directory $ROOT_DIRECTORY/replay_logs"

  artifacts:
    paths:
    - replay_logs
    when: always
    expire_in: 6 months
  tags:
    - public-runner-docker
    - hived-for-tests

package_consensus_node:
  stage: package
  needs:
    - job: consensus_build
      artifacts: true
  image: docker:19.03.11
  services:
    - docker:19.03.11-dind
  variables:
    DOCKER_BUILDKIT: 1
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - "docker build -f ciscripts/Dockerfile.ci --target=consensus_node --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg RUNTIME_IMAGE_TAG=$RUNTIME_IMAGE_TAG --tag $CI_REGISTRY_IMAGE/consensus_node:$CI_COMMIT_SHORT_SHA ."
    - "docker push $CI_REGISTRY_IMAGE/consensus_node:$CI_COMMIT_SHORT_SHA"
    - "echo ===> the consensus node image for this build is: $CI_REGISTRY_IMAGE/consensus_node:$CI_COMMIT_SHORT_SHA"
  tags:
    - public-runner-docker

