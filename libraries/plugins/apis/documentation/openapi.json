{
    "openapi": "3.1.0",
    "info": {
        "title": "Hive OpenAPI",
        "version": "1.27.11",
        "description": "**Introduction to Hive**\n\nHive is an advanced decentralized blockchain offering fast, fee-less transactions completed in just 3 seconds. It's highlighted by features like human-readable account names, a decentralized community fund, and an algorithmic stablecoin, HBD, backed by HIVE.\n\nPowered by the Delegated Proof of Stake (DPoS) consensus mechanism, Hive achieves an optimal blend of scalability, decentralization, and speed. \n\n**Innovative Features:**\n\n- **Resource Credits System:** Users can stake HIVE tokens to gain resources, enabling virtually free transactions directly on the blockchain, avoiding high fees common with Bitcoin or Ethereum.\n\n- **Human Readable Usernames:** Simplifies interactions by allowing easy recollection of account names for both businesses and individuals, enhancing social and financial interactions.\n\n- **Algorithmic Stablecoin:** The HBD stablecoin, backed by HIVE, boasts nearly a decade of stable performance, being among the pioneers of algorithmic stablecoins.\n\n- **Social Networking:** Hive's flagship applications are decentralized, community-driven social networks, establishing it as the first blockchain to truly support free speech and decentralized information sharing within the Web3 space.\n\n- **Decentralized Hive Fund:** Managed and owned by the community, this fund allocates resources to global developers and teams fostering innovation on the blockchain.\n\n- **Applications in Gaming, NFT, DeFi, and More:** Hive offers an attractive development environment with seamless integration capabilities for building engaging Web3 applications.\n\n**Web2 vs Web3**\n\nWhile today's Internet (Web2) is dominated by services that exchange personal data for functionality, Web3, powered by blockchains like Hive, enables decentralized applications (dApps) that respect data ownership and empower users.\n\n**Differences:**\n\n| Aspect          | Web2                                        | Web3                                           |\n|-----------------|---------------------------------------------|------------------------------------------------|\n| Data Ownership  | Centralized entities control data           | Decentralized, user-owned data                 |\n| Trust           | Requires trust in central authorities       | Trustless with blockchain technology           |\n| Censorship      | Susceptible to centralized censorship       | Decentralization provides resistance           |\n| Scalability     | Limited by central infrastructure           | Potentially expansive through decentralization |\n| Transparency    | Opaque data handling processes              | Blockchain offers transparent records          |\n| Governance      | Centralized power structures                | DAO-based, community governance                |\n| Monetization    | Relies on advertising, central monetization | Tokens and smart contracts decentralize it     |\n| Intermediaries  | Heavily depends on middlemen                | Reduced need for intermediaries                |\n| Innovation      | Driven by major corporations                | Community and protocol-driven                  |\n\nInvest your time in building innovative Web3 products with Hive's empowering platform.\n\n**Developer Workflow**\n\nThis overview provides a simplified understanding of how services interact with the blockchain. It serves as a foundation for learning and developing within the Hive network.\n"
    },
    "servers": [
        {
            "url": "http://proxy_url:7777"
        }
    ],
    "tags": [
        {
            "name": "account_by_key_api",
            "description": "Used to lookup account information based on a key.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "account_history_api",
            "description": "Used to lookup account history information.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "block_api",
            "description": "Used to query values related to the block plugin.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "bridge",
            "description": "Presents data interpreted by the hivemind database as JSON-RPC."
        },
        {
            "name": "condenser_api",
            "description": "Contains all of the API methods that currently exist and uses the existing argument formatting."
        },
        {
            "name": "database_api",
            "description": "Used to query information about accounts, transactions, and blockchain data."
        },
        {
            "name": "debug_node_api",
            "description": "This plugin allows all sorts of creative “what-if” experiments with the chain."
        },
        {
            "name": "follow_api",
            "description": "Used to lookup information related to reputation and account follow operations.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "market_history_api",
            "description": "Used to lookup market history information.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "network_broadcast_api",
            "description": "Used to broadcast transactions and blocks.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "rc_api",
            "description": "Allows querying of various Resource Credit metrics."
        },
        {
            "name": "reputation_api",
            "description": "Needed by condenser_api to optionally use follow_api or reputation_api for account reputations"
        },
        {
            "name": "rewards_api",
            "description": "Returns the simulated curve for payouts"
        },
        {
            "name": "tags_api",
            "description": "Used to lookup information about tags, posts, and discussions.\nThese AppBase API methods are still under development and subject to change."
        },
        {
            "name": "transaction_status_api",
            "description": "This API is intended to evaluate a transaction status after calling condenser_api.broadcast_transaction."
        },
        {
            "name": "wallet_bridge_api",
            "description": "Required for cli_wallet interactions."
        },
        {
            "name": "witness_api",
            "description": "Returns the available bandwidth of an account."
        }
    ],
    "paths": {
        "account_by_key_api.get_key_references": {
            "post": {
                "tags": [
                    "account_by_key_api"
                ],
                "summary": "Returns all accounts that have the key associated with their owner or active authorities.",
                "description": "Parameters:\n\n- `keys`: An array of strings representing keys to query. Example:\n  - `[\"STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9\"]` — queries for the key \"STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9\".\n  - `[\"STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9\", \"STM4uSuD4da2uqp52J2pQ7Pth3hGa7j4ECyrHASnXmmH16NymEg6Q\"]` — queries for the keys \"STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9\" and \"STM4uSuD4da2uqp52J2pQ7Pth3hGa7j4ECyrHASnXmmH16NymEg6Q\".\n",
                "operationId": "get_key_references",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_key_references"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_key_references_response"
                                },
                                "example": {
                                    "accounts": [
                                        "hiveio"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "account_history_api.enum_virtual_ops": {
            "post": {
                "tags": [
                    "account_history_api"
                ],
                "summary": "Allows specifying a range of blocks to retrieve virtual operations for.",
                "description": "Parameters:\n\n- `block_range_begin`: An integer representing the starting block number (inclusive) for the search.\n\n- `block_range_end`: An integer representing the last block number (exclusive) for the search.\n\n- `include_reversible`: A boolean (optional). If set to true, operations from reversible blocks will be included if `block_num` points to such a block.\n\n- `group_by_block`: A boolean (optional). Determines whether to group results by block.\n\n- `operation_begin`: An integer (optional). The starting virtual operation in the given block (inclusive).\n\n- `limit`: An integer (optional). Specifies the maximum number of operations to retrieve.\n\n- `filter`: An integer (optional). A bitwise filter that determines which operations to match. Use the following values for filtering:\n  - `fill_convert_request_operation` = 0x000001\n  - `author_reward_operation` = 0x000002\n  - `curation_reward_operation` = 0x000004\n  - `comment_reward_operation` = 0x000008\n  - `liquidity_reward_operation` = 0x000010\n  - `interest_operation` = 0x000020\n  - `fill_vesting_withdraw_operation` = 0x000040\n  - `fill_order_operation` = 0x000080\n  - `shutdown_witness_operation` = 0x000100\n  - `fill_transfer_from_savings_operation` = 0x000200\n  - `hardfork_operation` = 0x000400\n  - `comment_payout_update_operation` = 0x000800\n  - `return_vesting_delegation_operation` = 0x001000\n  - `comment_benefactor_reward_operation` = 0x002000\n  - `producer_reward_operation` = 0x004000\n  - `clear_null_account_balance_operation` = 0x008000\n  - `proposal_pay_operation` = 0x010000\n  - `sps_fund_operation` = 0x020000\n  - `hardfork_hive_operation` = 0x040000\n  - `hardfork_hive_restore_operation` = 0x080000\n  - `delayed_voting_operation` = 0x100000\n  - `consolidate_treasury_balance_operation` = 0x200000\n  - `effective_comment_vote_operation` = 0x400000\n  - `ineffective_delete_comment_operation` = 0x800000\n  - `sps_convert_operation` = 0x1000000\n  - `dhf_funding_operation` = 0x0020000\n  - `dhf_conversion_operation` = 0x1000000\n  - `expired_account_notification_operation` = 0x2000000\n  - `changed_recovery_account_operation` = 0x4000000\n  - `transfer_to_vesting_completed_operation` = 0x8000000\n  - `pow_reward_operation` = 0x10000000\n  - `vesting_shares_split_operation` = 0x20000000\n  - `account_created_operation` = 0x40000000\n  - `fill_collateralized_convert_request_operation` = 0x80000000\n  - `system_warning_operation` = 0x100000000\n  - `fill_recurrent_transfer_operation` = 0x200000000\n  - `failed_recurrent_transfer_operation` = 0x400000000\n  - `limit_order_cancelled_operation` = 0x800000000\n  - `producer_missed_operation` = 0x1000000000\n  - `proposal_fee_operation` = 0x2000000000\n  - `collateralized_convert_immediate_conversion_operation` = 0x4000000000\n  - `escrow_approved_operation` = 0x8000000000\n  - `escrow_rejected_operation` = 0x10000000000\n  - `proxy_cleared_operation` = 0x20000000000\n",
                "operationId": "enum_virtual_ops",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/enum_virtual_ops"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/enum_virtual_ops_response"
                                },
                                "example": {
                                    "next_block_range_begin": 90000000,
                                    "next_operation_begin": "14187667172",
                                    "ops": [],
                                    "ops_by_block": [
                                        {
                                            "block": 90000000,
                                            "irreversible": true,
                                            "ops": [
                                                {
                                                    "block": 90000000,
                                                    "op": {
                                                        "type": "effective_comment_vote_operation",
                                                        "value": {
                                                            "author": "name0",
                                                            "pending_payout": {
                                                                "amount": "4617",
                                                                "nai": "@@000000013",
                                                                "precision": 3
                                                            },
                                                            "permlink": "cite-de-l-espace-exterior",
                                                            "rshares": 1719370020,
                                                            "total_vote_weight": "15643776445465",
                                                            "voter": "bernardino",
                                                            "weight": 1719370020
                                                        }
                                                    },
                                                    "op_in_trx": 1,
                                                    "operation_id": "14187667170",
                                                    "timestamp": "2024-10-21T21:53:45",
                                                    "trx_id": "807a5694a79e2e76fd4961d61fbbfc32cfc0aae5",
                                                    "trx_in_block": 0,
                                                    "virtual_op": true
                                                }
                                            ],
                                            "timestamp": "2024-10-21T21:53:45"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "account_history_api.get_account_history": {
            "post": {
                "tags": [
                    "account_history_api"
                ],
                "summary": "Returns a history of all operations for a given account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query.\n\n- `start`: An integer indicating the starting point for the query. Use `-1` for reverse history or any positive number for a specific starting point.\n\n- `limit`: An integer up to 1000 specifying the maximum number of results to return.\n\n- `include_reversible`: A boolean (optional) that, if set to true, includes operations from reversible blocks.\n\n- `operation_filter_low`: An integer (optional) used to filter the first 64 operations based on a bitwise mask.\n\n- `operation_filter_high`: An integer (optional) used to filter higher-numbered operations with a 128-bit bitmask composed of {operation_filter_high, operation_filter_low}.\n\nIf `operation_filter_low` or `operation_filter_high` are set, the response will only include operations matching the bitwise filter.\n\nExamples:\n\n- **`account = \"hiveio\"`**, **`start = 1000`**, **`limit = 1000`**: Queries the latest items in history for the account \"hiveio\", with up to 1,000 results.\n\n- **`account = \"alice\"`**, **`start = -1`**, **`limit = 1000`**: Queries the oldest items in history for the account \"alice\", with up to 1,000 results.\n\n- **`account = \"bob\"`**, **`start = -1`**, **`limit = 1000`**, **`include_reversible = true`**, **`operation_filter_low = 1`**: Queries only vote operations for \"bob\" from the oldest item, up to 1,000 results.\n\n- **`account = \"charlie\"`**, **`start = -1`**, **`limit = 1000`**, **`include_reversible = true`**, **`operation_filter_low = 262144`**: Queries only custom JSON operations for \"charlie\" from the oldest item, up to 1,000 results.\n\n- **`account = \"emma\"`**, **`start = -1`**, **`limit = 1000`**, **`include_reversible = true`**, **`operation_filter_low = 0`**, **`operation_filter_high = 1`**: Queries only proposal payments to \"emma\" from the oldest item, up to 1,000 results.\n",
                "operationId": "get_account_history",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_account_history"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_account_history_response"
                                },
                                "example": {
                                    "history": [
                                        [
                                            1000,
                                            {
                                                "block": 41745898,
                                                "op": {
                                                    "type": "effective_comment_vote_operation",
                                                    "value": {
                                                        "author": "hiveio",
                                                        "pending_payout": {
                                                            "amount": "150705",
                                                            "nai": "@@000000013",
                                                            "precision": 3
                                                        },
                                                        "permlink": "announcing-the-launch-of-hive-blockchain",
                                                        "rshares": 56243682705,
                                                        "total_vote_weight": 21629700,
                                                        "voter": "lecumberre",
                                                        "weight": 835
                                                    }
                                                },
                                                "op_in_trx": 1,
                                                "operation_id": 0,
                                                "timestamp": "2020-03-18T01:11:51",
                                                "trx_id": "7a31d99559a3d93526bd1a05fd9fa0f55b1ebcb8",
                                                "trx_in_block": 13,
                                                "virtual_op": true
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "account_history_api.get_ops_in_block": {
            "post": {
                "tags": [
                    "account_history_api"
                ],
                "summary": "Returns all operations contained in a block.",
                "description": "Parameter:\n\n- `block_num`: An integer representing the specific block number to retrieve operations for.\n\n- `only_virtual`: A boolean indicating whether to include only virtual operations.\n\n- `include_reversible`: A boolean (optional) that, if set to true, includes operations from reversible blocks if `block_num` points to such a block.\n",
                "operationId": "get_ops_in_block",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_ops_in_block"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_ops_in_block_response"
                                },
                                "example": {
                                    "ops": [
                                        {
                                            "block": 1,
                                            "op": {
                                                "type": "account_created_operation",
                                                "value": {
                                                    "creator": "miners",
                                                    "initial_delegation": {
                                                        "amount": "0",
                                                        "nai": "@@000000037",
                                                        "precision": 6
                                                    },
                                                    "initial_vesting_shares": {
                                                        "amount": "0",
                                                        "nai": "@@000000037",
                                                        "precision": 6
                                                    },
                                                    "new_account_name": "miners"
                                                }
                                            },
                                            "op_in_trx": 1,
                                            "operation_id": 0,
                                            "timestamp": "2016-03-24T16:05:00",
                                            "trx_id": "0000000000000000000000000000000000000000",
                                            "trx_in_block": 4294967295,
                                            "virtual_op": true
                                        },
                                        {
                                            "block": 1,
                                            "op": {
                                                "type": "producer_reward_operation",
                                                "value": {
                                                    "producer": "initminer",
                                                    "vesting_shares": {
                                                        "amount": "1000000",
                                                        "nai": "@@000000037",
                                                        "precision": 6
                                                    }
                                                }
                                            },
                                            "op_in_trx": 1,
                                            "operation_id": 0,
                                            "timestamp": "2016-03-24T16:05:00",
                                            "trx_id": "0000000000000000000000000000000000000000",
                                            "trx_in_block": 4294967295,
                                            "virtual_op": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "account_history_api.get_transaction": {
            "post": {
                "tags": [
                    "account_history_api"
                ],
                "summary": "Returns the details of a transaction based on a transaction ID, including signatures, operations, and the block number it was included in.",
                "description": "Parameters:\n\n- `id`: A string representing the transaction ID (`trx_id`) of the expected transaction.\n\n- `include_reversible`: A boolean (optional) that, if set to true, includes operations from reversible blocks if the transaction's block number points to such a block.\n",
                "operationId": "get_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_transaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_transaction_response"
                                },
                                "example": {
                                    "block_num": 21401130,
                                    "expiration": "2018-04-09T00:29:06",
                                    "extensions": [],
                                    "operations": [
                                        {
                                            "type": "claim_reward_balance_operation",
                                            "value": {
                                                "account": "social",
                                                "reward_hbd": {
                                                    "amount": "0",
                                                    "nai": "@@000000013",
                                                    "precision": 3
                                                },
                                                "reward_hive": {
                                                    "amount": "0",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "reward_vests": {
                                                    "amount": "1",
                                                    "nai": "@@000000037",
                                                    "precision": 6
                                                }
                                            }
                                        }
                                    ],
                                    "ref_block_num": 36374,
                                    "ref_block_prefix": 3218139339,
                                    "signatures": [
                                        "1b01bdbb0c0d43db821c09ae8a82881c1ce3ba0eca35f23bc06541eca05560742f210a21243e20d04d5c88cb977abf2d75cc088db0fff2ca9fdf2cba753cf69844"
                                    ],
                                    "transaction_id": "6fde0190a97835ea6d9e651293e90c89911f933c",
                                    "transaction_num": 25
                                }
                            }
                        }
                    }
                }
            }
        },
        "block_api.get_block": {
            "post": {
                "tags": [
                    "block_api"
                ],
                "summary": "Retrieve a full, signed block of the referenced block, or null if no matching block was found.",
                "description": "Parameters:\n\n- `block_num`: An integer representing the block number to query.\n",
                "operationId": "get_block",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_block"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_block_response"
                                },
                                "example": {
                                    "block": {
                                        "previous": "0000000000000000000000000000000000000000",
                                        "timestamp": "2016-03-24T16:05:00",
                                        "witness": "",
                                        "transaction_merkle_root": "0000000000000000000000000000000000000000",
                                        "extensions": [],
                                        "witness_signature": "",
                                        "transactions": [],
                                        "block_id": "",
                                        "signing_key": "",
                                        "transaction_ids": []
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "block_api.get_block_header": {
            "post": {
                "tags": [
                    "block_api"
                ],
                "summary": "Retrieve a block header of the referenced block, or null if no matching block was found.",
                "description": "Parameters:\n\n- `block_num`: An integer representing the block number to query.\n",
                "operationId": "get_block_header",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_block"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_block_header_response"
                                },
                                "example": {
                                    "header": {
                                        "previous": "0000000000000000000000000000000000000000",
                                        "timestamp": "2016-03-24T16:05:00",
                                        "witness": "",
                                        "transaction_merkle_root": "0000000000000000000000000000000000000000",
                                        "extensions": []
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "block_api.get_block_range": {
            "post": {
                "tags": [
                    "block_api"
                ],
                "summary": "Retrieve a range of full, signed blocks. The list may be shorter than requested if count blocks would take you past the current head block.",
                "description": "Parameters:\n\n- `starting_block_num`: An integer indicating the height of the first block to be returned.\n\n- `count`: An integer specifying the maximum number of blocks to return.\n\nExamples:\n\n- `starting_block_num = 1`, `count = 10` — Queries the block headers for the very first block through the tenth block.\n\n- `starting_block_num = 8675309`, `count = 50` — Queries block headers for block numbers 8,675,309 through 8,675,359.\n\n- `starting_block_num = 62396745`, `count = 1000` — Queries block headers for block numbers 62,396,745 through 62,397,745.\n",
                "operationId": "get_block_range",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_block_range"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_block_range_response"
                                },
                                "example": {
                                    "blocks": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.account_notifications": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Account notifications.",
                "description": "Supported values for the `type` parameter:\n\n- `new_community`: A new community was created.\n- `set_role`: A mod or admin adds a role to an account.\n- `set_props`: Properties are set for a community.\n- `set_label`: A title, badge, or label has been set for an account.\n- `mute_post`: A post has been muted, with a reason.\n- `unmute_post`: A post has been unmuted, with a reason.\n- `pin_post`: A post has been pinned.\n- `unpin_post`: A post has been unpinned.\n- `flag_post`: A post has been flagged by a member, with a reason.\n- `error`: Provides feedback to developers for operations that cannot be interpreted.\n- `subscribe`: An account has subscribed to a community.\n- `reply`: A post has been replied to.\n- `reblog`: A post has been reblogged (shared again).\n- `follow`: An account has followed another account.\n- `mention`: An author mentions an account.\n- `vote`: A voter votes for an author.\n\n*Note:* The score value associated with each operation is based on the originating account rank.\n",
                "operationId": "account_notifications",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/account_notifications"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account_notifications_response"
                                },
                                "example": [
                                    {
                                        "date": "2025-08-04T03:32:51",
                                        "id": 9024595,
                                        "msg": "@beggars mentioned you and 1 others",
                                        "score": 61,
                                        "type": "mention",
                                        "url": "@beggars/beeline-wallet-cli-mega-updates-plugin-system-themes-and-more"
                                    },
                                    {
                                        "date": "2025-08-02T12:07:48",
                                        "id": 8905222,
                                        "msg": "@beggars mentioned you and 9 others",
                                        "score": 61,
                                        "type": "mention",
                                        "url": "@beggars/introducing-beeline-an-open-source-terminal-wallet-for-hive"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.does_user_follow_any_lists": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Checks if a given observer follows any blacklists or mute lists.",
                "operationId": "does_user_follow_any_lists",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/does_user_follow_any_lists"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/does_user_follow_any_lists_response"
                                },
                                "example": false
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_account_posts": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Lists posts related to a given account.",
                "description": "Parameters:\n\n- `sort`: A string indicating the type of posts to retrieve. Supported values:\n  - `blog`: Top posts authored by the specified account (excluding community posts unless reblogged), plus reblogs ranked by creation or reblog time.\n  - `feed`: Top posts from blogs of accounts followed by the specified account, ranked by creation or reblog time, not older than the last month.\n  - `posts`: Posts authored by the specified account, sorted by newest first.\n  - `replies`: Replies authored by the specified account, sorted by newest first.\n  - `payout`: All posts authored by the specified account that have not yet been cashed out.\n\n- `account`: The account name (string) to retrieve related posts for; must be a valid account.\n\n- `start_author`: The author account name to start from when paginating; optional and used together with `start_permlink`.\n\n- `start_permlink`: The permlink of the post corresponding to `start_author`, used as a paging mechanism; optional.\n\n- `limit`: The maximum number of posts to retrieve. If omitted, defaults to 20.\n\n- `observer`: (Optional) For `blog`, `feed`, and `replies` sorts, this parameter is ignored. Otherwise, when provided, it must point to a valid account used to populate blacklist stats and mark posts from blacklisted authors. Currently, this parameter is ignored.\n",
                "operationId": "get_account_posts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_account_posts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_account_posts_response"
                                },
                                "example": [
                                    {
                                        "active_votes": [
                                            {
                                                "rshares": 649620066,
                                                "voter": "knightmarey"
                                            }
                                        ],
                                        "author": "hiveio",
                                        "author_payout_value": "109.585 HBD",
                                        "author_reputation": 74.28,
                                        "beneficiaries": [
                                            {
                                                "account": "pettycash",
                                                "weight": 10000
                                            }
                                        ],
                                        "blacklists": [],
                                        "body": "",
                                        "category": "hive5",
                                        "children": 184,
                                        "created": "2025-03-20T16:39:33",
                                        "curator_payout_value": "109.403 HBD",
                                        "depth": 0,
                                        "is_paidout": true,
                                        "json_metadata": {
                                            "app": "hiveblog/0.1",
                                            "format": "markdown",
                                            "image": [
                                                "https://images.hive.blog/DQmaJaewnEu4wVKaPYMx7gpkwuSy4aiYdqLb87ncMRQnHku/image.png",
                                                "https://images.hive.blog/DQmNf7kJ3n7gtB4NACuzCurrJQATD7N98dsW4BZNevUyVYx/image.png",
                                                "https://images.hive.blog/DQmQ1ZApmrTG6DGmbEPW48uX2oWQdJxj6Ky7bQL5a5zNH24/Five_Years_Hive_Card.png",
                                                "https://images.hive.blog/DQmZjJcHu7K9ZusxswhSJ1X36Bc3D3FgiJ3kZJxG1SqsiDs/image.png"
                                            ],
                                            "links": [
                                                "https://hivewhale.com/"
                                            ],
                                            "tags": [
                                                "hive5",
                                                "hive",
                                                "anniversary"
                                            ]
                                        },
                                        "max_accepted_payout": "1000000.000 HBD",
                                        "net_rshares": 623550720229968,
                                        "payout": 218.988,
                                        "payout_at": "2025-03-27T16:39:33",
                                        "pending_payout_value": "0.000 HBD",
                                        "percent_hbd": 10000,
                                        "permlink": "hive-5-celebrating-our-5th-anniversary-as-hive",
                                        "post_id": 141560746,
                                        "reblogs": 134,
                                        "replies": [],
                                        "stats": {
                                            "flag_weight": 1,
                                            "gray": false,
                                            "hide": false,
                                            "total_votes": 1475
                                        },
                                        "title": "Hive 5: Celebrating our 5th Anniversary as Hive",
                                        "updated": "2025-03-20T16:39:33",
                                        "url": "/hive5/@hiveio/hive-5-celebrating-our-5th-anniversary-as-hive"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_community": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Get community details.",
                "description": "Parameters:\n\n- `name`: The community category name (string) to retrieve details for.\n\n- `observer`: A valid account name (string) used as an observer. This parameter is optional.\n",
                "operationId": "get_community",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_community"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_community_response"
                                },
                                "example": {
                                    "about": "",
                                    "avatar_url": "",
                                    "context": {
                                        "role": "guest",
                                        "subscribed": false,
                                        "title": ""
                                    },
                                    "created_at": "2019-10-27 08:28:51",
                                    "description": "",
                                    "flag_text": "",
                                    "id": 1332099,
                                    "is_nsfw": false,
                                    "lang": "en",
                                    "name": "hive-123456",
                                    "num_authors": 0,
                                    "num_pending": 0,
                                    "settings": {},
                                    "subscribers": 49,
                                    "sum_pending": 0,
                                    "team": [
                                        [
                                            "hive-123456",
                                            "owner",
                                            ""
                                        ],
                                        [
                                            "nftimo",
                                            "admin",
                                            ""
                                        ],
                                        [
                                            "inji",
                                            "admin",
                                            ""
                                        ],
                                        [
                                            "therealwolf",
                                            "admin",
                                            ""
                                        ]
                                    ],
                                    "title": "inji",
                                    "type_id": 1
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_community_context": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gets the role, subscription status, and title for a given account in a given community.",
                "operationId": "get_community_context",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_community_context"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_community_context_response"
                                },
                                "example": {
                                    "role": "admin",
                                    "subscribed": true,
                                    "title": "Witness: @therealwolf"
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_discussion": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gives a flattened discussion tree starting at given post.",
                "operationId": "get_discussion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_discussion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_discussion_response"
                                },
                                "example": {
                                    "steevc/re-hiveio-qoimw3": {
                                        "active_votes": [
                                            {
                                                "rshares": 66800471918,
                                                "voter": "blockchainyouth"
                                            },
                                            {
                                                "rshares": 86075046512,
                                                "voter": "antisocialist"
                                            },
                                            {
                                                "rshares": 30283066226,
                                                "voter": "montycashmusic"
                                            }
                                        ],
                                        "author": "steevc",
                                        "author_payout_value": "0.026 HBD",
                                        "author_reputation": 79.63,
                                        "beneficiaries": [],
                                        "blacklists": [],
                                        "body": "Technically Hive seems to be a good place. We have lots of cool projects going on that can make it more usable. We just need more people using it. That could mean a real marketing drive. I see Justin is buying mentions from some big Twitter users, but we can be more organic and real. \n\nHive five!",
                                        "category": "hiveecosystem",
                                        "children": 0,
                                        "created": "2021-02-14T11:07:15",
                                        "curator_payout_value": "0.025 HBD",
                                        "depth": 1,
                                        "is_paidout": true,
                                        "json_metadata": {
                                            "app": "peakd/2021.01.3",
                                            "tags": [
                                                "hiveecosystem"
                                            ]
                                        },
                                        "max_accepted_payout": "1000000.000 HBD",
                                        "net_rshares": 183158584656,
                                        "parent_author": "hiveio",
                                        "parent_permlink": "around-the-hive-reflections",
                                        "payout": 0.051,
                                        "payout_at": "2021-02-21T11:07:15",
                                        "pending_payout_value": "0.000 HBD",
                                        "percent_hbd": 10000,
                                        "permlink": "re-hiveio-qoimw3",
                                        "post_id": 101869017,
                                        "reblogs": 0,
                                        "replies": [],
                                        "stats": {
                                            "flag_weight": 0,
                                            "gray": false,
                                            "hide": false,
                                            "total_votes": 3
                                        },
                                        "title": "RE: Around the Hive: Reflections",
                                        "updated": "2021-02-14T11:07:15",
                                        "url": "/hiveecosystem/@hiveio/around-the-hive-reflections#@steevc/re-hiveio-qoimw3"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_follow_list": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Returns blacklisted/muted accounts or list of blacklists/mute lists followed by a given observer.",
                "description": "Parameters:\n\n- `observer`: A valid account name (string) to act as an observer.\n\n- `follow_type`: A string indicating the type of follow-related list to retrieve. Supported values:\n  - `follow_blacklist`: Accounts that are on the observer's follow blacklist.\n  - `follow_muted`: Accounts that are on the observer's follow mute list.\n  - `blacklisted`: Accounts that are directly blacklisted by the observer.\n  - `muted`: Accounts that are directly muted by the observer.\n",
                "operationId": "get_follow_list",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_follow_list"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_follow_list_response"
                                },
                                "example": [
                                    {
                                        "blacklist_description": "",
                                        "muted_list_description": "Phishing accounts",
                                        "name": "hive.blog"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_payout_stats": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Lists communities ordered by payout with stats (total payout, number of posts and authors).",
                "description": "Parameters:\n\n- `limit`: An integer specifying the maximum number of results to retrieve. If omitted, the server defaults to 250. This parameter is optional.\n",
                "operationId": "get_payout_stats",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_payout_stats"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_payout_stats_response"
                                },
                                "example": {
                                    "blogs": 31613.378,
                                    "items": [
                                        [
                                            "@hbd.funder",
                                            "@hbd.funder",
                                            19175.395,
                                            77,
                                            null
                                        ]
                                    ],
                                    "total": 91599.777
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_post": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gives single selected post.",
                "description": "Parameters:\n\n- `author`: A valid account name (string).\n\n- `permlink`: A valid permlink (string).\n\n- `observer`: A valid account name (string) used as an observer. This parameter is optional.\n",
                "operationId": "get_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_post_response"
                                },
                                "example": {
                                    "steevc/re-hiveio-qoimw3": {
                                        "active_votes": [
                                            {
                                                "rshares": 66800471918,
                                                "voter": "blockchainyouth"
                                            },
                                            {
                                                "rshares": 86075046512,
                                                "voter": "antisocialist"
                                            },
                                            {
                                                "rshares": 30283066226,
                                                "voter": "montycashmusic"
                                            }
                                        ],
                                        "author": "steevc",
                                        "author_payout_value": "0.026 HBD",
                                        "author_reputation": 79.63,
                                        "beneficiaries": [],
                                        "blacklists": [],
                                        "body": "Technically Hive seems to be a good place. We have lots of cool projects going on that can make it more usable. We just need more people using it. That could mean a real marketing drive. I see Justin is buying mentions from some big Twitter users, but we can be more organic and real. \n\nHive five!",
                                        "category": "hiveecosystem",
                                        "children": 0,
                                        "created": "2021-02-14T11:07:15",
                                        "curator_payout_value": "0.025 HBD",
                                        "depth": 1,
                                        "is_paidout": true,
                                        "json_metadata": {
                                            "app": "peakd/2021.01.3",
                                            "tags": [
                                                "hiveecosystem"
                                            ]
                                        },
                                        "max_accepted_payout": "1000000.000 HBD",
                                        "net_rshares": 183158584656,
                                        "parent_author": "hiveio",
                                        "parent_permlink": "around-the-hive-reflections",
                                        "payout": 0.051,
                                        "payout_at": "2021-02-21T11:07:15",
                                        "pending_payout_value": "0.000 HBD",
                                        "percent_hbd": 10000,
                                        "permlink": "re-hiveio-qoimw3",
                                        "post_id": 101869017,
                                        "reblogs": 0,
                                        "replies": [],
                                        "stats": {
                                            "flag_weight": 0,
                                            "gray": false,
                                            "hide": false,
                                            "total_votes": 3
                                        },
                                        "title": "RE: Around the Hive: Reflections",
                                        "updated": "2021-02-14T11:07:15",
                                        "url": "/hiveecosystem/@hiveio/around-the-hive-reflections#@steevc/re-hiveio-qoimw3"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_post_header": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gives very basic information on given post.",
                "description": "Parameters:\n\n- `author`: A valid account name (string).\n\n- `permlink`: A valid permlink (string).\n",
                "operationId": "get_post_header",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_post_header"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_post_header_response"
                                },
                                "example": {
                                    "author": "hiveio",
                                    "category": "hiveecosystem",
                                    "depth": 0,
                                    "permlink": "around-the-hive-reflections"
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_profile": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gets profile.",
                "description": "Parameters:\n\n- `account`: A valid account name (string).\n\n- `observer`: A valid account name (string) used as an observer. This parameter is optional.\n",
                "operationId": "get_profile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_profile"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_profile_response"
                                },
                                "example": {
                                    "active": "2016-04-29T22:28:00",
                                    "blacklists": [],
                                    "context": {
                                        "followed": false,
                                        "muted": false
                                    },
                                    "created": "2016-03-25T15:09:27",
                                    "id": 241,
                                    "metadata": {
                                        "profile": {
                                            "about": "",
                                            "blacklist_description": "",
                                            "cover_image": "",
                                            "location": "",
                                            "muted_list_description": "",
                                            "name": "",
                                            "profile_image": "",
                                            "website": ""
                                        }
                                    },
                                    "name": "alice",
                                    "post_count": 0,
                                    "reputation": 25,
                                    "stats": {
                                        "followers": 431,
                                        "following": 0,
                                        "rank": 0
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_ranked_posts": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Get ranked posts.",
                "description": "Parameters:\n\n- `sort`: A string indicating the sorting method. Supported values:\n  - `trending`\n  - `hot`\n  - `created`\n  - `promoted`\n  - `payout`\n  - `payout_comments`\n  - `muted`\n\n- `tag`: A string representing any valid tag.\n\n- `observer`: A string representing any valid account or an empty string.\n",
                "operationId": "get_ranked_posts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_ranked_posts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_ranked_posts_response"
                                },
                                "example": [
                                    {
                                        "active_votes": [
                                            {
                                                "rshares": 649620066,
                                                "voter": "knightmarey"
                                            }
                                        ],
                                        "author": "hiveio",
                                        "author_payout_value": "109.585 HBD",
                                        "author_reputation": 74.28,
                                        "beneficiaries": [
                                            {
                                                "account": "pettycash",
                                                "weight": 10000
                                            }
                                        ],
                                        "blacklists": [],
                                        "body": "",
                                        "category": "hive5",
                                        "children": 184,
                                        "created": "2025-03-20T16:39:33",
                                        "curator_payout_value": "109.403 HBD",
                                        "depth": 0,
                                        "is_paidout": true,
                                        "json_metadata": {
                                            "app": "hiveblog/0.1",
                                            "format": "markdown",
                                            "image": [
                                                "https://images.hive.blog/DQmaJaewnEu4wVKaPYMx7gpkwuSy4aiYdqLb87ncMRQnHku/image.png",
                                                "https://images.hive.blog/DQmNf7kJ3n7gtB4NACuzCurrJQATD7N98dsW4BZNevUyVYx/image.png",
                                                "https://images.hive.blog/DQmQ1ZApmrTG6DGmbEPW48uX2oWQdJxj6Ky7bQL5a5zNH24/Five_Years_Hive_Card.png",
                                                "https://images.hive.blog/DQmZjJcHu7K9ZusxswhSJ1X36Bc3D3FgiJ3kZJxG1SqsiDs/image.png"
                                            ],
                                            "links": [
                                                "https://hivewhale.com/"
                                            ],
                                            "tags": [
                                                "hive5",
                                                "hive",
                                                "anniversary"
                                            ]
                                        },
                                        "max_accepted_payout": "1000000.000 HBD",
                                        "net_rshares": 623550720229968,
                                        "payout": 218.988,
                                        "payout_at": "2025-03-27T16:39:33",
                                        "pending_payout_value": "0.000 HBD",
                                        "percent_hbd": 10000,
                                        "permlink": "hive-5-celebrating-our-5th-anniversary-as-hive",
                                        "post_id": 141560746,
                                        "reblogs": 134,
                                        "replies": [],
                                        "stats": {
                                            "flag_weight": 1,
                                            "gray": false,
                                            "hide": false,
                                            "total_votes": 1475
                                        },
                                        "title": "Hive 5: Celebrating our 5th Anniversary as Hive",
                                        "updated": "2025-03-20T16:39:33",
                                        "url": "/hive5/@hiveio/hive-5-celebrating-our-5th-anniversary-as-hive"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.get_relationship_between_accounts": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Tells what relations connect given accounts from the perspective of first account.",
                "operationId": "get_relationship_between_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_relationship_between_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_relationship_between_accounts_response"
                                },
                                "example": {
                                    "blacklists": false,
                                    "follows": false,
                                    "follows_blacklists": false,
                                    "follows_muted": false,
                                    "ignores": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "bridge.list_all_subscriptions": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "List all subscriptions, titles, and roles to a community for an account.",
                "description": "Parameters:\n\n- `account`: A string representing a valid account name.\n",
                "operationId": "list_all_subscriptions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_all_subscriptions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_all_subscriptions_response"
                                },
                                "example": [
                                    [
                                        "hive-139531",
                                        "HiveDevs",
                                        "admin",
                                        "Wizard"
                                    ],
                                    [
                                        "hive-102930",
                                        "Hive Improvement",
                                        "mod",
                                        ""
                                    ],
                                    [
                                        "hive-160391",
                                        "Blockchain Wizardry",
                                        "mod",
                                        "Wizard"
                                    ],
                                    [
                                        "hive-104647",
                                        "Steemfest 4",
                                        "mod",
                                        "Blockchain Wizard"
                                    ],
                                    [
                                        "hive-106258",
                                        "HiveFest",
                                        "guest",
                                        ""
                                    ],
                                    [
                                        "hive-196387",
                                        "StemSocial",
                                        "guest",
                                        ""
                                    ],
                                    [
                                        "hive-148309",
                                        "BuzzParty Meet Hive!",
                                        "guest",
                                        ""
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.list_communities": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gets community.",
                "description": "Parameters:\n\n- `last`: A string representing the name of the community for paging purposes (optional).\n\n- `limit`: An integer to limit the number of listed communities; default is 100. This parameter is optional.\n\n- `query`: A string to filter communities based on title and about fields. This parameter is optional.\n\n- `sort`: A string to define the sorting method. Optional with default:\n  - `rank`: sort by community rank\n  - `new`: sort by newest communities\n  - `subs`: sort by subscriptions\n\n- `observer`: A valid account name (string). This parameter is optional.\n",
                "operationId": "list_communities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_communities"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_communities_response"
                                },
                                "example": [
                                    {
                                        "about": "HIVE Version of /r/wallstreetbets",
                                        "admins": [
                                            "jeffjagoe"
                                        ],
                                        "avatar_url": "",
                                        "context": {},
                                        "created_at": "2021-01-27 22:30:54",
                                        "id": 1432837,
                                        "is_nsfw": false,
                                        "lang": "en",
                                        "name": "hive-108729",
                                        "num_authors": 0,
                                        "num_pending": 0,
                                        "subscribers": 42,
                                        "sum_pending": 0,
                                        "title": "Wall Street Bets",
                                        "type_id": 1
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.list_community_roles": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "List community roles and labels for each account in the community.",
                "description": "Parameters:\n\n- `community`: A string representing the community category name.\n\n- `last`: A string representing the name of the subscriber for paging purposes (optional).\n\n- `limit`: An integer to limit the number of listed subscribers; default is 100. This parameter is optional.\n",
                "operationId": "list_community_roles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_community_roles"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_community_roles_response"
                                },
                                "example": [
                                    [
                                        "hive-123456",
                                        "owner",
                                        ""
                                    ],
                                    [
                                        "inji",
                                        "admin",
                                        ""
                                    ],
                                    [
                                        "nftimo",
                                        "admin",
                                        ""
                                    ],
                                    [
                                        "therealwolf",
                                        "admin",
                                        ""
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.list_pop_communities": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gets a list of popular communities.",
                "description": "Parameters:\n\n- `limit`: An integer to limit the number of listed communities; default is 25. This parameter is optional.\n",
                "operationId": "list_pop_communities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_pop_communities"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_pop_communities_response"
                                },
                                "example": [
                                    [
                                        "hive-167922",
                                        "LeoFinance"
                                    ],
                                    [
                                        "hive-125125",
                                        "Ecency"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "bridge.list_subscribers": {
            "post": {
                "tags": [
                    "bridge"
                ],
                "summary": "Gets a list of subscribers for a given community.",
                "description": "Parameters:\n\n- `community`: A string representing the community category name.\n\n- `last`: A string indicating the name of the subscriber for paging purposes (optional).\n\n- `limit`: An integer to limit the number of listed subscribers; defaults to 100 if omitted. This parameter is optional.\n",
                "operationId": "list_subscribers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_subscribers"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_subscribers_response"
                                },
                                "example": [
                                    [
                                        "abdex9",
                                        "guest",
                                        null,
                                        "2020-02-09T18:24:57"
                                    ],
                                    [
                                        "abdoulhameed",
                                        "guest",
                                        null,
                                        "2021-04-03T18:30:18"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.broadcast_transaction": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Used to broadcast a transaction.",
                "operationId": "condenser_broadcast_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_broadcast_transaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_broadcast_transaction_response"
                                },
                                "example": {}
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.broadcast_transaction_synchronous": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Used to broadcast a transaction and waits for it to be processed synchronously.",
                "operationId": "condenser_broadcast_transaction_synchronous",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_broadcast_transaction_synchronous"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_broadcast_transaction_synchronous_response"
                                },
                                "example": {
                                    "id": "0000000000000000000000000000000000000000",
                                    "block_num": 0,
                                    "trx_num": 0,
                                    "expired": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.find_proposals": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Finds proposals by proposal.id (not proposal.proposal_id).",
                "operationId": "condenser_find_proposals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_find_proposals"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_find_proposals_response"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "proposal_id": "139924505899904",
                                        "creator": "alice",
                                        "receiver": "bob",
                                        "start_date": "2019-07-01T00:00:00",
                                        "end_date": "2019-08-01T23:59:59",
                                        "daily_pay": "4800.000 HBD",
                                        "subject": "My Proposal",
                                        "permlink": "creator-proposal-permlink",
                                        "total_votes": "77351826710",
                                        "status": "active"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.find_rc_accounts": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns the available resource credits of accounts.",
                "operationId": "condenser_find_rc_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_find_rc_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_find_rc_accounts_response"
                                },
                                "example": [
                                    {
                                        "account": "alice",
                                        "delegated_rc": 0,
                                        "max_rc": 135630143570,
                                        "max_rc_creation_adjustment": "2020.748973 VESTS",
                                        "rc_manabar": {
                                            "current_mana": 135375191366,
                                            "last_update_time": 1550731380
                                        },
                                        "received_delegated_rc": 0
                                    },
                                    {
                                        "account": "demo",
                                        "delegated_rc": 0,
                                        "max_rc": 50966868081,
                                        "max_rc_creation_adjustment": "2020.748973 VESTS",
                                        "rc_manabar": {
                                            "current_mana": 50966868081,
                                            "last_update_time": 1715912571
                                        },
                                        "received_delegated_rc": 6000000000
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.find_recurrent_transfers": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Finds transfers of any liquid asset every fixed amount of time from one account to another.",
                "operationId": "condenser_find_recurrent_transfers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_find_recurrent_transfers"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_find_recurrent_transfers_response"
                                },
                                "example": [
                                    {
                                        "id": 3,
                                        "trigger_date": "2021-07-02T18:11:51",
                                        "from": "alice",
                                        "to": "bob",
                                        "amount": "10.000 HIVE",
                                        "memo": "Payroll",
                                        "recurrence": 26,
                                        "consecutive_failures": 0,
                                        "remaining_executions": 3
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_account_count": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns the number of accounts.",
                "operationId": "condenser_get_account_count",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_account_count"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_account_count_response"
                                },
                                "example": 0
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_account_history": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns a history of all operations for a given account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query.\n\n- `start`: An integer indicating the starting point for the query. Use `-1` for reverse history or any positive number for a specific starting point.\n\n- `limit`: An integer up to 1000 specifying the maximum number of results to return.\n\n- `operation_filter_low`: An integer (optional) used to filter the first 64 operations based on a bitwise mask.\n\n- `operation_filter_high`: An integer (optional) used to filter higher-numbered operations with a 128-bit bitmask composed of {operation_filter_high, operation_filter_low}.\n\nIf either `operation_filter_low` or `operation_filter_high` are set, the response will include only these operations matching the bitwise filter.\n\nExamples:\n\n- `account = \"hiveio\"`, `start = 1000`, `limit = 1000`: Queries the latest items in history for the account \"hiveio\", with up to 1,000 results.\n\n- `account = \"alice\"`, `start = -1`, `limit = 1000`: Queries the oldest items in history for the account \"alice\", with up to 1,000 results.\n\n- `account = \"bob\"`, `start = -1`, `limit = 1000`, `operation_filter_low = 1`: Queries only vote operations for \"bob\" from the oldest item, up to 1,000 results.\n\n- `account = \"charlie\"`, `start = -1`, `limit = 1000`, `operation_filter_low = 262144`: Queries only custom JSON operations for \"charlie\" from the oldest item, up to 1,000 results.\n\n- `account = \"emma\"`, `start = -1`, `limit = 1000`, `operation_filter_low = 0`, `operation_filter_high = 1`: Queries only proposal payments for \"emma\" from the oldest item, up to 1,000 results.\n",
                "operationId": "condenser_get_account_history",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_account_history"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_account_history_response"
                                },
                                "example": [
                                    [
                                        65968,
                                        {
                                            "block": 98382584,
                                            "op": [
                                                "comment",
                                                {
                                                    "author": "bitjoe369",
                                                    "body": "Two thumbs Up!!\n\n<iframe src=\"https://giphy.com/embed/Y2hpIZ2apuMdtIHLuQ\" width=\"384\" height=\"480\" style=\"\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe><p><a href=\"https://giphy.com/gifs/mercedesamgf1-f1-formula-1-one-Y2hpIZ2apuMdtIHLuQ\">via GIPHY</a></p>\n",
                                                    "json_metadata": "{\"tags\":[\"hive5\"],\"app\":\"peakd/2025.8.2\",\"image\":[],\"users\":[]}",
                                                    "parent_author": "hiveio",
                                                    "parent_permlink": "hive-5-celebrating-our-5th-anniversary-as-hive",
                                                    "permlink": "re-hiveio-t0q2px",
                                                    "title": ""
                                                }
                                            ],
                                            "op_in_trx": 0,
                                            "timestamp": "2025-08-09T10:34:18",
                                            "trx_id": "504a547a8c7b041053d60561aec09ea8c6baa6f0",
                                            "trx_in_block": 24,
                                            "virtual_op": false
                                        }
                                    ],
                                    [
                                        65969,
                                        {
                                            "block": 98546170,
                                            "op": [
                                                "vote",
                                                {
                                                    "author": "hiveio",
                                                    "permlink": "hive-at-wrc-the-croatia-rally-is-on",
                                                    "voter": "ninangxss",
                                                    "weight": 1000
                                                }
                                            ],
                                            "op_in_trx": 0,
                                            "timestamp": "2025-08-15T03:02:09",
                                            "trx_id": "477b6992ff34595cec1618b631ca61984e1d19ad",
                                            "trx_in_block": 15,
                                            "virtual_op": false
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_account_reputations": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns a list of account reputations.",
                "description": "Parameters:\n\n- `account_lower_bound`: A string representing the starting account name (lower bound) for the query.\n\n- `limit`: An integer up to 1000 specifying the maximum number of accounts to return.\n\nExamples:\n\n- `account_lower_bound = \"hiveio\"`, `limit = 1` — queries accounts starting with \"hiveio\", returning only one result.\n\n- `account_lower_bound = \"a\"`, `limit = 10` — queries accounts starting with \"a\", returning up to 10 results.\n",
                "operationId": "condenser_get_account_reputations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_account_reputations"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_account_reputations_response"
                                },
                                "example": [
                                    {
                                        "account": "hiveio",
                                        "reputation": 298927146213106
                                    },
                                    {
                                        "account": "hiveiohive",
                                        "reputation": 0
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_accounts": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns accounts, queried by name.",
                "description": "Parameters:\n\n- `account`: An array of strings representing account names to query.\n\n- `delayed_votes_active`: A boolean indicating whether to include only accounts with active delayed votes.\n\nExamples:\n\n- `account = [\"hiveio\"]`, `delayed_votes_active = true` — queries for account named \"hiveio\".\n\n- `account = [\"hiveio\", \"alice\"]`, `delayed_votes_active = false` — queries for accounts \"hiveio\" and \"alice\" with delayed votes hidden.",
                "operationId": "condenser_get_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_accounts_response"
                                },
                                "example": [
                                    {
                                        "active": {
                                            "account_auths": [
                                                [
                                                    "pettycash",
                                                    1
                                                ]
                                            ],
                                            "key_auths": [
                                                [
                                                    "STM69zfrFGnZtU3gWFWpQJ6GhND1nz7TJsKBTjcWfebS1JzBEweQy",
                                                    1
                                                ]
                                            ],
                                            "weight_threshold": 1
                                        },
                                        "balance": "283.441 HIVE",
                                        "can_vote": true,
                                        "comment_count": 0,
                                        "created": "2020-03-06T12:22:51",
                                        "curation_rewards": 20,
                                        "delayed_votes": [],
                                        "delegated_vesting_shares": "0.000000 VESTS",
                                        "downvote_manabar": {
                                            "current_mana": 78641578712,
                                            "last_update_time": 1754586540
                                        },
                                        "governance_vote_expiration_ts": "2026-05-11T00:45:09",
                                        "guest_bloggers": [],
                                        "hbd_balance": "50.418 HBD",
                                        "hbd_last_interest_payment": "2020-10-21T02:45:12",
                                        "hbd_seconds": "0",
                                        "hbd_seconds_last_update": "2020-10-21T02:45:12",
                                        "id": 1370484,
                                        "json_metadata": "",
                                        "last_account_recovery": "1970-01-01T00:00:00",
                                        "last_account_update": "2021-11-09T21:56:27",
                                        "last_owner_update": "1970-01-01T00:00:00",
                                        "last_post": "2025-03-20T16:39:33",
                                        "last_root_post": "2025-03-20T16:39:33",
                                        "last_vote_time": "2025-01-01T06:03:33",
                                        "lifetime_vote_count": 0,
                                        "market_history": [],
                                        "memo_key": "STM7wrsg1BZogeK7X3eG4ivxmLaH69FomR8rLkBbepb3z3hm5SbXu",
                                        "mined": false,
                                        "name": "hiveio",
                                        "next_vesting_withdrawal": "1969-12-31T23:59:59",
                                        "open_recurrent_transfers": 0,
                                        "other_history": [],
                                        "owner": {
                                            "account_auths": [],
                                            "key_auths": [
                                                [
                                                    "STM65PUAPA4yC4RgPtGgsPupxT6yJtMhmT5JHFdsT3uoCbR8WJ25s",
                                                    1
                                                ]
                                            ],
                                            "weight_threshold": 1
                                        },
                                        "pending_claimed_accounts": 0,
                                        "pending_transfers": 0,
                                        "post_bandwidth": 0,
                                        "post_count": 80,
                                        "post_history": [],
                                        "post_voting_power": "314566.314850 VESTS",
                                        "posting": {
                                            "account_auths": [
                                                [
                                                    "threespeak",
                                                    1
                                                ],
                                                [
                                                    "vimm.app",
                                                    1
                                                ]
                                            ],
                                            "key_auths": [
                                                [
                                                    "STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9",
                                                    1
                                                ]
                                            ],
                                            "weight_threshold": 1
                                        },
                                        "posting_json_metadata": "{\"profile\":{\"pinned\":\"none\",\"version\":2,\"website\":\"hive.io\",\"profile_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Jp2YHc6Q-hive-logo.png\",\"cover_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Xe1TcEBi-hive-banner.png\"}}",
                                        "posting_rewards": 1919844,
                                        "previous_owner_update": "1970-01-01T00:00:00",
                                        "proxied_vsf_votes": [
                                            0,
                                            0,
                                            0,
                                            0
                                        ],
                                        "proxy": "",
                                        "received_vesting_shares": "0.000000 VESTS",
                                        "recovery_account": "steempeak",
                                        "reputation": 0,
                                        "reset_account": "null",
                                        "reward_hbd_balance": "0.000 HBD",
                                        "reward_hive_balance": "0.000 HIVE",
                                        "reward_vesting_balance": "0.000000 VESTS",
                                        "reward_vesting_hive": "0.000 HIVE",
                                        "savings_balance": "0.000 HIVE",
                                        "savings_hbd_balance": "0.000 HBD",
                                        "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
                                        "savings_hbd_seconds": "0",
                                        "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
                                        "savings_withdraw_requests": 0,
                                        "tags_usage": [],
                                        "to_withdraw": 0,
                                        "transfer_history": [],
                                        "vesting_balance": "0.000 HIVE",
                                        "vesting_shares": "314566.314850 VESTS",
                                        "vesting_withdraw_rate": "0.000000 VESTS",
                                        "vote_history": [],
                                        "voting_manabar": {
                                            "current_mana": 314566314850,
                                            "last_update_time": 1754586540
                                        },
                                        "voting_power": 0,
                                        "withdraw_routes": 0,
                                        "withdrawn": 0,
                                        "witness_votes": [],
                                        "witnesses_voted_for": 0
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_active_votes": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns all votes for the given post.",
                "description": "Parameters:\n\n- `author`: A string representing the author of the content.\n\n- `permlink`: A string representing the permlink of the content.\n\nExamples:\n\n- `author = \"hiveio\"`, `permlink = \"firstpost\"` — queries votes for content with the slug @hiveio/firstpost.\n\n- `author = \"alice\"`, `permlink = \"a-post-by-alice\"` — queries votes for content with the slug @alice/a-post-by-alice.",
                "operationId": "condenser_get_active_votes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_active_votes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_active_votes_response"
                                },
                                "example": [
                                    {
                                        "percent": 10000,
                                        "reputation": 17822269400,
                                        "rshares": 1126185066,
                                        "time": "2021-02-14T08:19:45",
                                        "voter": "competeapp",
                                        "weight": 66
                                    },
                                    {
                                        "percent": 5000,
                                        "reputation": 5480133697709,
                                        "rshares": 3501783600,
                                        "time": "2021-02-14T15:14:57",
                                        "voter": "angatt",
                                        "weight": 226
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_active_witnesses": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns the list of active witnesses.",
                "operationId": "condenser_get_active_witnesses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_active_witnesses"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_active_witnesses_response"
                                },
                                "example": [
                                    "therealwolf",
                                    "good-karma",
                                    "guiltyparties",
                                    "quochuy",
                                    "blocktrades",
                                    "yabapmatt",
                                    "themarkymark",
                                    "stoodkev",
                                    "hivecuba",
                                    "ausbitbank",
                                    "threespeak",
                                    "roelandp",
                                    "arcange",
                                    "smooth.witness",
                                    "gtg",
                                    "abit",
                                    "steempeak",
                                    "pharesim",
                                    "emrebeyler",
                                    "deathwing",
                                    "ocd-witness"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_block": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns a block.",
                "description": "Parameters:\n\n- `block_num`: An integer representing the block number to query.\n\nExamples:\n\n- `block_num = 1` — queries the very first block.\n\n- `block_num = 8675309` — queries block number 8,675,309.\n\n- `block_num = 62396745` — queries block number 62,396,745.\n",
                "operationId": "condenser_get_block",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_block"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_block_response"
                                },
                                "example": {
                                    "previous": "0000000000000000000000000000000000000000",
                                    "timestamp": "2016-03-24T16:05:00",
                                    "witness": "initminer",
                                    "transaction_merkle_root": "0000000000000000000000000000000000000000",
                                    "extensions": [],
                                    "witness_signature": "204f8ad56a8f5cf722a02b035a61b500aa59b9519b2c33c77a80c0a714680a5a5a7a340d909d19996613c5e4ae92146b9add8a7a663eef37d837ef881477313043",
                                    "transactions": [],
                                    "block_id": "0000000109833ce528d5bbfb3f6225b39ee10086",
                                    "signing_key": "STM8GC13uCZbP44HzMLV6zPZGwVQ8Nt4Kji8PapsPiNq1BK153XTX",
                                    "transaction_ids": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_block_header": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns a block header.",
                "description": "Parameters:\n\n- `block_num`: An integer representing the block number to query.\n\nExamples:\n\n- `block_num = 1` — queries the block header for the very first block.\n\n- `block_num = 8675309` — queries the block header for block number 8,675,309.\n\n- `block_num = 62396745` — queries the block header for block number 62,396,745.\n",
                "operationId": "condenser_get_block_header",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_block_header"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_block_header_response"
                                },
                                "example": {
                                    "extensions": [],
                                    "previous": "0000270f17162d089d8cbf634b7ce434df782c9c",
                                    "timestamp": "2016-03-25T00:34:48",
                                    "transaction_merkle_root": "340b3605652c91cd41456656c1915a7b5b46dffa",
                                    "witness": "itsascam"
                                }
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_blog": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns the list of blog entries for an account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query the blog for.\n\n- `start_entry_id`: An integer representing the starting entry ID for querying the blog.\n\n- `limit`: An integer up to 500 specifying the maximum number of blog entries to return.\n\nExamples:\n\n- `account = \"hiveio\"`, `start_entry_id = 0`, `limit = 1` — queries the blog for the account named \"hiveio\", returning up to one result.\n\n- `account = \"alice\"`, `start_entry_id = 0`, `limit = 50` — queries the blog for the account named \"alice\", returning up to 50 results.\n",
                "operationId": "condenser_get_blog",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_blog"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_blog_response"
                                },
                                "example": [
                                    {
                                        "blog": "hiveio",
                                        "comment": {
                                            "active_votes": [
                                                {
                                                    "percent": "10000",
                                                    "reputation": 31197627261276,
                                                    "rshares": 13081280967,
                                                    "voter": "ferbu"
                                                },
                                                {
                                                    "percent": "4950",
                                                    "reputation": 355586177992570,
                                                    "rshares": 9795724243,
                                                    "voter": "josdelmi"
                                                },
                                                {
                                                    "percent": "10000",
                                                    "reputation": 48120095142290,
                                                    "rshares": 4859584947,
                                                    "voter": "elentogether"
                                                },
                                                {
                                                    "percent": "10000",
                                                    "reputation": 807234681729,
                                                    "rshares": 649620066,
                                                    "voter": "knightmarey"
                                                }
                                            ],
                                            "author": "hiveio",
                                            "author_reputation": 298927146213106,
                                            "beneficiaries": [
                                                {
                                                    "account": "pettycash",
                                                    "weight": 10000
                                                }
                                            ],
                                            "body": "![image.png](https://images.hive.blog/DQmaJaewnEu4wVKaPYMx7gpkwuSy4aiYdqLb87ncMRQnHku/image.png)\n\n\nChanges are happening all over the world. As we celebrate our 5th anniversary as Hive and are approaching a decade as a community we continue to push the boundaries of blockchain possibilities and technical excellence. Over the years through dedication, ingenuity and perseverance, the Hive community has built a true beacon of Web3. The Hive ecosystem is a vibrant embodiment of decentralization and accessibility and it is all of us here on Hive who have collectively made it happen. \n\nOn this special day even the Hive Whale has come out of hibernation after a chilly winter! https://hivewhale.com/ \n\n![image.png](https://images.hive.blog/DQmNf7kJ3n7gtB4NACuzCurrJQATD7N98dsW4BZNevUyVYx/image.png)\n\n## Collect Raffle Tickets & Win! 🎟️🎟️🎟️\nTo help mark this special occasion there are mini-contests throughout this post. Participate in them to collect Raffle Tickets. Each ticket gets you one entry in the Hive5 Raffle which will take place LIVE at Talent Land Mexico. The prize pool is **500 HBD**, divided between 5 lucky winners plus more mystery prizes. Entries for this round are due within 7 days so act fast!\n\n## Revolutionary Web3\n\nHive was created out of the love for decentralization and digital freedom. Unlike its competitors, Hive was never about the money. Hive is all about the vision. About true Web3. \n\nAll of us take special pride in Hive. Hive is built by its users for its users with no corporate influence. It rose out of the flames of an unprecedented attack on decentralization and open source principles and has from that time vowed to champion those key tenets and ensure that corporate greed has no place in its segment of Web3. The Hive community was not for sale five years ago and it never will be. No single entity has control of Hive -- it is decentralized, auditable, transparent, and barrier-less. It is a beacon of creativity, innovation and endurance among the greater blockchain-based technologies landscape and the cryptosphere. Its ecosystem has flourished organically, with myriad dapps, services and solutions for every need, from sharing videos to buying dinner.\n\nHive is built to last. Growth on Hive has never been about financial gains but always about exploring new opportunities to pursue innovation and build the best Web3 experience possible. Integrations, partnerships and onboarding all constitute the key milestones required to promote mass adoption. Not only do they allow new users to discover Hive but they also provide a gateway into data ownership and personal freedom and actualization.\n\n> “Hive makes an escape route possible,” wrote one Hive community member. “Not just from being an early adopter, but also because you can earn it by participating in the game. You make a post, you might get some HIVE. Once you have some Hive Power, you can vote that power and earn HIVE. This is what makes Hive different than most any of the other cryptos on offer, distribution is built into the first layer. You don't need a rack of servers or 4 digit electric bills to mine some hive, just something to say, the ability to type it out, and some networking for friends.”\n\n#### 🎟️ Contest!\n*Guess which Hiver wrote this quote. Tag them. Every correct guess will get **1 Raffle Ticket**. But choose wisely, its 1 guess per person!*\n\n![Five_Years_Hive_Card.png](https://images.hive.blog/DQmQ1ZApmrTG6DGmbEPW48uX2oWQdJxj6Ky7bQL5a5zNH24/Five_Years_Hive_Card.png)\n<sup>*Active accounts and accounts rewarded figures are based on partial estimates due to queries.*</sup>\n\n## Hive Changes Lives\nHive has consistently remained resilient despite being faced first with COVID-related challenges and then a highly-volatile market, which still persists. Despite this, it is listed on over 40 exchanges and both HBD and HIVE are used as currency for B2B and B2C transactions worldwide. Hive has come from wondering what can be done with it in terms of use-cases to being welcomed in everything from grocery stores to entertainment venues to real-estate as the preferred cryptocurrency. Purchases can already be made without delay with only a phone with the help of the Hive Keychain and Distriator and now Hive Debit Cards are becoming available. The Virtual Smart Chain (VSC) is also currently in the final stages just edging towards launch, making integrations even more seamless.\n\nHive brought tangible change to the world. Freedom of expression is a universal human right along with an adequate standard of living. The Hive community does not wait for change to happen; it makes change happen. Hive community members brought water to remote villages in Ghana, Venezuela and Nigeria. In Ghana, the twentieth well is presently being constructed. Ordinary people who had no understanding of the true capabilities of blockchain technology and parallel economies are seeing their effects when their own neighbors have successfully used Hive to resolve problems in weeks that the local governments failed to tackle over decades.\n\n#### 🎟️ Contest!\n*What’s your favorite Hive project? We invite you to celebrate by writing a post about it. Every post of a minimum 1,000 words will get **10 Raffle Tickets**.*\n\n## Feeless and Limitless\nHive is currently positioned as one of the most accessible blockchains to develop on. It makes development simple and fast. It has been transformed from the baseline DPoS blockchain technology it started out as into a light-weight solution suitable for any project or industry application. It did this while improving on security mechanisms to ensure that data integrity and decentralization remain paramount. \n\nHive has not only improved on existing DPoS technology but has made it truly limitless by crafting an extensive layer-2 capability and supporting cross-chain integrations. The HAF API Note Suite now bundles together the innovative Hive Application Framework (HAF) with HAF Account History (HAFAH), Hived (core protocol), Hivemind, a block explorer and more. While Hive sports 3 second blocks, its one block irreversibility (OBI) means that confirmation is near-instant, making transactions final without any waiting. Every part of Hive has been continuously optimized to limit the required resources in relation to all types of transactions and to lower the infrastructure requirements to run the most complex of operations. Everything is designed for scalability and efficiency.\n\n\n![image.png](https://images.hive.blog/DQmZjJcHu7K9ZusxswhSJ1X36Bc3D3FgiJ3kZJxG1SqsiDs/image.png)\n\n\n#### 🎟️ Contest!\n*What types of innovative ideas would you like to see on Hive? Write a post and link it in the comments below describing your desired idea in 400-500 words. Every post that fits the brief will get **5 Raffle Tickets**.*\n\nChanges are happening and changes are also sought after here on Hive too. We look forward to the next five years as we make those changes and pave new roads through Web3. Hive on!",
                                            "body_length": 6976,
                                            "cashout_time": "1969-12-31T23:59:59",
                                            "category": "hive5",
                                            "children": 184,
                                            "created": "2025-03-20T16:39:33",
                                            "curator_payout_value": "109.403 HBD",
                                            "depth": 0,
                                            "json_metadata": "{\"tags\":[\"hive5\",\"hive\",\"anniversary\"],\"image\":[\"https://images.hive.blog/DQmaJaewnEu4wVKaPYMx7gpkwuSy4aiYdqLb87ncMRQnHku/image.png\",\"https://images.hive.blog/DQmNf7kJ3n7gtB4NACuzCurrJQATD7N98dsW4BZNevUyVYx/image.png\",\"https://images.hive.blog/DQmQ1ZApmrTG6DGmbEPW48uX2oWQdJxj6Ky7bQL5a5zNH24/Five_Years_Hive_Card.png\",\"https://images.hive.blog/DQmZjJcHu7K9ZusxswhSJ1X36Bc3D3FgiJ3kZJxG1SqsiDs/image.png\"],\"links\":[\"https://hivewhale.com/\"],\"app\":\"hiveblog/0.1\",\"format\":\"markdown\"}",
                                            "last_payout": "2025-03-27T16:39:33",
                                            "last_update": "2025-03-20T16:39:33",
                                            "max_accepted_payout": "1000000.000 HBD",
                                            "net_rshares": 623550720229968,
                                            "parent_author": "",
                                            "parent_permlink": "hive5",
                                            "pending_payout_value": "0.000 HBD",
                                            "percent_hbd": 10000,
                                            "permlink": "hive-5-celebrating-our-5th-anniversary-as-hive",
                                            "post_id": 141560746,
                                            "replies": [],
                                            "root_title": "Hive 5: Celebrating our 5th Anniversary as Hive",
                                            "title": "Hive 5: Celebrating our 5th Anniversary as Hive",
                                            "total_payout_value": "109.585 HBD",
                                            "url": "/hive5/@hiveio/hive-5-celebrating-our-5th-anniversary-as-hive"
                                        },
                                        "entry_id": 74,
                                        "reblogged_on": "1970-01-01T00:00:00"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_blog_entries": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns a list of blog entries for an account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query the blog entries for.\n\n- `start_entry_id`: An integer representing the starting entry ID for querying the blog entries.\n\n- `limit`: An integer up to 500 specifying the maximum number of blog entries to return.\n\nExamples:\n\n- `account = \"hiveio\"`, `start_entry_id = 0`, `limit = 1` — queries the blog entries for the account named \"hiveio\", returning up to one result.\n\n- `account = \"alice\"`, `start_entry_id = 0`, `limit = 50` — queries the blog entries for the account named \"alice\", returning up to 50 results.\n",
                "operationId": "condenser_get_blog_entries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_blog_entries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_blog_entries_response"
                                },
                                "example": [
                                    {
                                        "author": "hiveio",
                                        "blog": "hiveio",
                                        "entry_id": 74,
                                        "permlink": "hive-5-celebrating-our-5th-anniversary-as-hive",
                                        "reblogged_on": "1970-01-01T00:00:00"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_chain_properties": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns the chain properties.",
                "operationId": "condenser_get_chain_properties",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_chain_properties"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_chain_properties_response"
                                },
                                "example": {
                                    "account_creation_fee": "3.000 HIVE",
                                    "account_subsidy_budget": 797,
                                    "account_subsidy_decay": 347321,
                                    "hbd_interest_rate": 1500,
                                    "maximum_block_size": 65536
                                }
                            }
                        }
                    }
                }
            }
        },
        "condenser_api.get_collateralized_conversion_requests": {
            "post": {
                "tags": [
                    "condenser_api"
                ],
                "summary": "Returns objects corresponding with collateralized_convert operations.",
                "operationId": "condenser_get_collateralized_conversion_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/condenser_get_collateralized_conversion_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/condenser_get_collateralized_conversion_requests_response"
                                },
                                "example": []
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_account_recovery_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of account recovery requests.",
                "description": "Parameters:\n\n- `accounts`: A string representing the account name to query. Example:\n  - `\"hiveio\"` — queries the recovery requests for the account named \"hiveio\".\n",
                "operationId": "find_account_recovery_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_account_recovery_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_account_recovery_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_accounts": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns accounts, queried by name.",
                "description": "Parameters:\n\n- `accounts`: An array of strings representing account names to query. Example:\n  - `[\"hiveio\"]` — queries for the account named \"hiveio\".\n  - `[\"hiveio\", \"alice\"]` — queries for accounts \"hiveio\" and \"alice\".\n\n- `delayed_votes_active`: A boolean indicating whether to include only accounts with active delayed votes. Defaults to false if not specified.\n",
                "operationId": "find_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_accounts_response"
                                },
                                "example": {
                                    "accounts": [
                                        {
                                            "active": {
                                                "account_auths": [
                                                    [
                                                        "pettycash",
                                                        1
                                                    ]
                                                ],
                                                "key_auths": [
                                                    [
                                                        "STM69zfrFGnZtU3gWFWpQJ6GhND1nz7TJsKBTjcWfebS1JzBEweQy",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "balance": {
                                                "amount": "743363",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "can_vote": true,
                                            "comment_count": 0,
                                            "created": "2020-03-06T12:22:51",
                                            "curation_rewards": 20,
                                            "delayed_votes": [],
                                            "delegated_vesting_shares": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "downvote_manabar": {
                                                "current_mana": 5831078449,
                                                "last_update_time": 1735711413
                                            },
                                            "governance_vote_expiration_ts": "2025-06-08T02:00:30",
                                            "hbd_balance": {
                                                "amount": "0",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "hbd_last_interest_payment": "2020-10-21T02:45:12",
                                            "hbd_seconds": "0",
                                            "hbd_seconds_last_update": "2020-10-21T02:45:12",
                                            "id": 1370484,
                                            "is_smt": false,
                                            "json_metadata": "",
                                            "last_account_recovery": "1970-01-01T00:00:00",
                                            "last_account_update": "2021-11-09T21:56:27",
                                            "last_owner_update": "1970-01-01T00:00:00",
                                            "last_post": "2025-03-20T16:39:33",
                                            "last_post_edit": "2025-03-20T16:39:33",
                                            "last_root_post": "2025-03-20T16:39:33",
                                            "last_vote_time": "2025-01-01T06:03:33",
                                            "lifetime_vote_count": 0,
                                            "memo_key": "STM7wrsg1BZogeK7X3eG4ivxmLaH69FomR8rLkBbepb3z3hm5SbXu",
                                            "mined": false,
                                            "name": "hiveio",
                                            "next_vesting_withdrawal": "1969-12-31T23:59:59",
                                            "open_recurrent_transfers": 0,
                                            "owner": {
                                                "account_auths": [],
                                                "key_auths": [
                                                    [
                                                        "STM65PUAPA4yC4RgPtGgsPupxT6yJtMhmT5JHFdsT3uoCbR8WJ25s",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "pending_claimed_accounts": 0,
                                            "pending_transfers": 0,
                                            "post_bandwidth": 0,
                                            "post_count": 80,
                                            "post_voting_power": {
                                                "amount": "23324313796",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "posting": {
                                                "account_auths": [
                                                    [
                                                        "threespeak",
                                                        1
                                                    ],
                                                    [
                                                        "vimm.app",
                                                        1
                                                    ]
                                                ],
                                                "key_auths": [
                                                    [
                                                        "STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "posting_json_metadata": "{\"profile\":{\"pinned\":\"none\",\"version\":2,\"website\":\"hive.io\",\"profile_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Jp2YHc6Q-hive-logo.png\",\"cover_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Xe1TcEBi-hive-banner.png\"}}",
                                            "posting_rewards": 1919844,
                                            "previous_owner_update": "1970-01-01T00:00:00",
                                            "proxied_vsf_votes": [
                                                0,
                                                0,
                                                0,
                                                0
                                            ],
                                            "proxy": "",
                                            "received_vesting_shares": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "recovery_account": "steempeak",
                                            "reset_account": "null",
                                            "reward_hbd_balance": {
                                                "amount": "50418",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "reward_hive_balance": {
                                                "amount": "0",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "reward_vesting_balance": {
                                                "amount": "291242001054",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "reward_vesting_hive": {
                                                "amount": "171636",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "savings_balance": {
                                                "amount": "0",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "savings_hbd_balance": {
                                                "amount": "0",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
                                            "savings_hbd_seconds": "0",
                                            "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
                                            "savings_withdraw_requests": 0,
                                            "to_withdraw": 0,
                                            "vesting_shares": {
                                                "amount": "23324313796",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "vesting_withdraw_rate": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "voting_manabar": {
                                                "current_mana": 22857989494,
                                                "last_update_time": 1735711413
                                            },
                                            "withdraw_routes": 0,
                                            "withdrawn": 0,
                                            "witnesses_voted_for": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_change_recovery_account_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of requests to change the recovery account.",
                "description": "Parameters:\n\n- `accounts`: An array of strings representing account names to query. Example:\n  - `[\"hiveio\"]` — queries the recovery requests for the account named \"hiveio\".\n",
                "operationId": "find_change_recovery_account_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_change_recovery_account_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_change_recovery_account_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_collateralized_conversion_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns objects corresponding with collateralized_convert operations.",
                "description": "Parameters:\n\n- `account`: Anaccount name to query. Example:\n  - `\"hiveio\"` — queries the recovery requests for the account named \"hiveio\".\n",
                "operationId": "find_collateralized_conversion_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_collateralized_conversion_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_collateralized_conversion_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_comments": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Search for comments by author/permlink.",
                "description": "Parameters:\n\n- `comments`: A string array of pairs author/permlink\n",
                "operationId": "find_comments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_comments"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_comments_response"
                                },
                                "example": {
                                    "comments": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_decline_voting_rights_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of requests to decline voting rights.",
                "description": "Parameters:\n\n- `accounts`: An array of strings representing account names to query. Example:\n  - `[\"hiveio\"]` — queries the decline votings rights for the account named \"hiveio\".\n",
                "operationId": "find_decline_voting_rights_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_decline_voting_rights_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_decline_voting_rights_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_escrows": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of escrows.",
                "description": "Parameters:\n\n- `from`: string representing account name to query. Example:\n  - `\"hiveio\"` — queries the escrows for the account named \"hiveio\".\n",
                "operationId": "find_escrows",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_escrows"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_escrows_response"
                                },
                                "example": {
                                    "escrows": [
                                        {
                                            "id": 143,
                                            "escrow_id": 12345,
                                            "from": "temp",
                                            "to": "guest123",
                                            "agent": "smitop",
                                            "ratification_deadline": "2038-01-19T03:14:06",
                                            "escrow_expiration": "2038-01-19T03:14:07",
                                            "hbd_balance": {
                                                "amount": "0",
                                                "precision": 3,
                                                "nai": "@@000000013"
                                            },
                                            "hive_balance": {
                                                "amount": "1",
                                                "precision": 3,
                                                "nai": "@@000000021"
                                            },
                                            "pending_fee": {
                                                "amount": "1",
                                                "precision": 3,
                                                "nai": "@@000000021"
                                            },
                                            "to_approved": false,
                                            "agent_approved": false,
                                            "disputed": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_hbd_conversion_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of HBD conversion requests for an account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query for conversion requests. Examples:\n  - `\"hiveio\"` — queries a conversion request for the account named \"hiveio\".\n  - `\"alice\"` — queries a conversion request for the account named \"alice\".\n",
                "operationId": "find_hbd_conversion_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_hbd_conversion_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_hbd_conversion_requests_response"
                                },
                                "example": {
                                    "requests": [
                                        {
                                            "amount": {
                                                "amount": "20",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "conversion_date": "2024-05-31T23:53:51",
                                            "id": 433539,
                                            "owner": "demo.com",
                                            "requestid": 3205281453
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_limit_orders": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of limit orders.",
                "description": "Parameters:\n\n- `account`: string representing account name to query. Example:\n  - `\"hiveio\"` — queries the limit orders for the account named \"hiveio\".\n",
                "operationId": "find_limit_orders",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_limit_orders"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_limit_orders_response"
                                },
                                "example": {
                                    "orders": [
                                        {
                                            "id": 0,
                                            "created": "2019-12-14T04:05:39",
                                            "expiration": "2019-12-15T05:05:21",
                                            "seller": "",
                                            "orderid": 0,
                                            "for_sale": 0,
                                            "sell_price": {
                                                "base": {
                                                    "amount": "0",
                                                    "precision": 3,
                                                    "nai": "@@000000013"
                                                },
                                                "quote": {
                                                    "amount": "0",
                                                    "precision": 3,
                                                    "nai": "@@000000021"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_owner_histories": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns owner authority history.",
                "description": "Parameters:\n\n- `owner`: A string representing the account name to query for owner history. Examples:\n  - `\"hiveio\"` — queries the owner history for the account named \"hiveio\".\n  - `\"alice\"` — queries the owner history for the account named \"alice\".\n",
                "operationId": "find_owner_histories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_owner_histories"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_owner_histories_response"
                                },
                                "example": {
                                    "owner_auths": [
                                        {
                                            "account": "noorkh",
                                            "id": 765309,
                                            "last_valid_time": "2024-05-16T11:40:09",
                                            "previous_owner_authority": {
                                                "account_auths": [],
                                                "key_auths": [
                                                    [
                                                        "STM6c31ppwyJH4MJycYw5UxdSG6zeLjykgp58GtKV5uf6twZVB5GL",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_proposals": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Finds proposals by proposal.id.",
                "description": "Parameters:\n\n- `proposal_ids`: An array of int representing ids of proposals. Examples:\n  - `[0]` — queries the id `0` proposal.\n  - `[0,1,2]` — queries proposals with id `0,1,2`.\n",
                "operationId": "find_proposals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_proposals"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_proposals_response"
                                },
                                "example": {
                                    "proposals": [
                                        {
                                            "id": 0,
                                            "proposal_id": "139925218365120",
                                            "creator": "alice",
                                            "receiver": "bob",
                                            "start_date": "2019-07-01T00:00:00",
                                            "end_date": "2019-08-01T23:59:59",
                                            "daily_pay": {
                                                "amount": "4800000",
                                                "precision": 3,
                                                "nai": "@@000000013"
                                            },
                                            "subject": "My Proposal",
                                            "permlink": "creator-proposal-permlink",
                                            "total_votes": "77351826710",
                                            "status": "active"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_recurrent_transfers": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Finds transfers of any liquid asset every fixed amount of time from one account to another.",
                "description": "Parameters:\n\n- `from`: string representing account name to query. Example:\n  - `\"hiveio\"` — queries the recurrent transfers for the account named \"hiveio\".\n",
                "operationId": "find_recurrent_transfers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_recurrent_transfers"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_recurrent_transfers_response"
                                },
                                "example": {
                                    "recurrent_transfers": [
                                        {
                                            "id": 3,
                                            "trigger_date": "2021-07-02T18:11:51",
                                            "from": "alice",
                                            "to": "bob",
                                            "amount": {
                                                "amount": "1000",
                                                "precision": 3,
                                                "nai": "@@000000021"
                                            },
                                            "memo": "Payroll",
                                            "recurrence": 26,
                                            "consecutive_failures": 0,
                                            "remaining_executions": 3
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_savings_withdrawals": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of savings withdrawls for an account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query for savings withdrawals. Example:\n  - `\"hiveio\"` — queries the savings withdrawals for the account named \"hiveio\".\n",
                "operationId": "find_savings_withdrawals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_savings_withdrawals"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_savings_withdrawals_response"
                                },
                                "example": {
                                    "withdrawals": [
                                        {
                                            "amount": {
                                                "amount": "1",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "complete": "2024-05-31T11:51:39",
                                            "from": "demo.com",
                                            "id": 213646,
                                            "memo": "",
                                            "request_id": 3205148605,
                                            "to": "demo.com"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_vesting_delegation_expirations": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the expiring vesting delegations for an account.",
                "description": "Returns the expiring vesting delegations for an account. Parameters:\n\n- `account`: A string representing the account name to query. Examples:\n  - `\"hiveio\"` — queries for expiring vesting delegations for \"hiveio\".\n  - `\"alice\"` — queries for expiring vesting delegations for \"alice\".\n",
                "operationId": "find_vesting_delegation_expirations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_vesting_delegation_expirations"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_vesting_delegation_expirations_response"
                                },
                                "example": {
                                    "delegations": [
                                        {
                                            "delegator": "ecency",
                                            "expiration": "2024-05-28T12:25:03",
                                            "id": 5926131,
                                            "vesting_shares": {
                                                "amount": "350000000000",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_vesting_delegations": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of vesting delegations for an account.",
                "description": "Parameters:\n\n- `account`: A string representing the account name to query. Examples:\n  - `\"hiveio\"` — queries for vesting details for \"hiveio\".\n  - `\"alice\"` — queries for vesting details for \"alice\".\n",
                "operationId": "find_vesting_delegations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_vesting_delegations"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_vesting_delegations_response"
                                },
                                "example": {
                                    "delegations": [
                                        {
                                            "delegatee": "sharker",
                                            "delegator": "ecency",
                                            "id": 2454889,
                                            "min_delegation_time": "2024-03-07T15:35:00",
                                            "vesting_shares": {
                                                "amount": "350000000000",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_votes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns all votes for the given post.",
                "description": "Required (non-empty) parameters: author, permlink.\n\n- `author`: A string representing the author of the content. Examples:\n  - `\"hiveio\"` — queries votes for content authored by \"hiveio\".\n  - `\"alice\"` — queries votes for content authored by \"alice\".\n\n- `permlink`: A string representing the permalink of the content. Examples:\n  - `\"announcing-the-launch-of-hive-blockchain\"` — for the post @hiveio/announcing-the-launch-of-hive-blockchain.\n  - `\"a-post-by-alice\"` — for the post @alice/a-post-by-alice.\n",
                "operationId": "find_votes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_votes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_votes_response"
                                },
                                "example": {
                                    "votes": [
                                        {
                                            "id": 0,
                                            "voter": "",
                                            "author": "",
                                            "permlink": "",
                                            "weight": "0",
                                            "rshares": 0,
                                            "vote_percent": 0,
                                            "last_update": "2016-04-07T19:15:36",
                                            "num_changes": -1
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_withdraw_vesting_routes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of vesting withdraw routes for an account.",
                "description": "Required (non-empty) parameters: author, permlink.\n\n- `account`: Anaccount name to query.\n- `order`: A string defining the sorting order.\n",
                "operationId": "find_withdraw_vesting_routes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_withdraw_vesting_routes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_withdraw_vesting_routes_response"
                                },
                                "example": {
                                    "routes": [
                                        {
                                            "auto_vest": true,
                                            "from_account": "feruz",
                                            "id": 49677,
                                            "percent": 100,
                                            "to_account": "ecency"
                                        },
                                        {
                                            "auto_vest": true,
                                            "from_account": "esteemapp",
                                            "id": 49784,
                                            "percent": 10000,
                                            "to_account": "ecency"
                                        },
                                        {
                                            "auto_vest": false,
                                            "from_account": "parker97",
                                            "id": 49828,
                                            "percent": 25,
                                            "to_account": "ecency"
                                        },
                                        {
                                            "auto_vest": false,
                                            "from_account": "gotinazsum2",
                                            "id": 50504,
                                            "percent": 25,
                                            "to_account": "ecency"
                                        },
                                        {
                                            "auto_vest": true,
                                            "from_account": "prettiblk1",
                                            "id": 50524,
                                            "percent": 1000,
                                            "to_account": "ecency"
                                        },
                                        {
                                            "auto_vest": false,
                                            "from_account": "good-karma",
                                            "id": 52240,
                                            "percent": 10000,
                                            "to_account": "ecency"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.find_witnesses": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Search for witnesses.",
                "description": "Parameters:\n\n- `owners`: An array of strings representing account names to query. Example:\n  - `[\"initminer\"]` — queries for the account named \"initminer\".\n  - `[\"initminer\", \"blocktrades\"]` — queries for accounts \"initminer\" and \"blocktrades\".\n",
                "operationId": "find_witnesses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_witnesses"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_witnesses_response"
                                },
                                "example": {
                                    "witnesses": [
                                        {
                                            "available_witness_account_subsidies": 0,
                                            "created": "1970-01-01T00:00:00",
                                            "hardfork_time_vote": "2016-03-24T16:00:00",
                                            "hardfork_version_vote": "0.0.0",
                                            "hbd_exchange_rate": {
                                                "base": {
                                                    "amount": "0",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "quote": {
                                                    "amount": "0",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                }
                                            },
                                            "id": 0,
                                            "last_aslot": 1202,
                                            "last_confirmed_block_num": 1092,
                                            "last_hbd_exchange_update": "1970-01-01T00:00:00",
                                            "last_work": "0000000000000000000000000000000000000000000000000000000000000000",
                                            "owner": "initminer",
                                            "pow_worker": 0,
                                            "props": {
                                                "account_creation_fee": {
                                                    "amount": "1",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "account_subsidy_budget": 797,
                                                "account_subsidy_decay": 347321,
                                                "hbd_interest_rate": 1000,
                                                "maximum_block_size": 131072
                                            },
                                            "running_version": "0.0.0",
                                            "signing_key": "STM8GC13uCZbP44HzMLV6zPZGwVQ8Nt4Kji8PapsPiNq1BK153XTX",
                                            "total_missed": 88,
                                            "url": "",
                                            "virtual_last_update": "225400650183277777230188182",
                                            "virtual_position": "28933178228158941342755574680549120",
                                            "virtual_scheduled_time": "340253433742935705172215129634317850517",
                                            "votes": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_active_witnesses": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of active witnesses.",
                "operationId": "get_active_witnesses",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_active_witnesses_response"
                                },
                                "example": {
                                    "witnesses": [
                                        "lukestokes.mhth",
                                        "gtg",
                                        "ausbitbank",
                                        "clayop",
                                        "yabapmatt",
                                        "curie",
                                        "thecryptodrive",
                                        "roelandp",
                                        "followbtcnews",
                                        "timcliff",
                                        "smooth.witness",
                                        "bhuz",
                                        "aggroed",
                                        "blocktrades",
                                        "cervantes",
                                        "utopian-io",
                                        "anyx",
                                        "jesta",
                                        "drakos",
                                        "someguy123",
                                        "good-karma"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_comment_pending_payouts": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Get comment pending payout data.",
                "description": "Required (non-empty) parameters: author, permlink.\n\n- `author`: A string representing the author of the content. Examples:\n  - `\"hiveio\"` — queries votes for content authored by \"hiveio\".\n  - `\"alice\"` — queries votes for content authored by \"alice\".\n\n- `permlink`: A string representing the permalink of the content. Examples:\n  - `\"announcing-the-launch-of-hive-blockchain\"` — for the post @hiveio/announcing-the-launch-of-hive-blockchain.\n  - `\"a-post-by-alice\"` — for the post @alice/a-post-by-alice.\n",
                "operationId": "get_comment_pending_payouts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_comment_pending_payouts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_comment_pending_payouts_response"
                                },
                                "example": {
                                    "cashout_infos": [
                                        {
                                            "author": "hbd.funder",
                                            "permlink": "upvote-this-post-to-fund-hbdstabilizer-qr2j7n",
                                            "cashout_info": {
                                                "total_vote_weight": 22841196,
                                                "total_payout_value": {
                                                    "amount": "0",
                                                    "precision": 3,
                                                    "nai": "@@000000013"
                                                },
                                                "curator_payout_value": {
                                                    "amount": "0",
                                                    "precision": 3,
                                                    "nai": "@@000000013"
                                                },
                                                "max_accepted_payout": {
                                                    "amount": "1000000000",
                                                    "precision": 3,
                                                    "nai": "@@000000013"
                                                },
                                                "author_rewards": 0,
                                                "children_abs_rshares": "606511906476641",
                                                "net_rshares": "571577939879762",
                                                "abs_rshares": "594467432989642",
                                                "vote_rshares": "583007369825359",
                                                "net_votes": 378,
                                                "active": "2021-04-06T15:29:03",
                                                "last_payout": "1970-01-01T00:00:00",
                                                "cashout_time": "2021-04-12T02:07:00",
                                                "max_cashout_time": "1969-12-31T23:59:59",
                                                "percent_hbd": 10000,
                                                "reward_weight": 10000,
                                                "allow_replies": false,
                                                "allow_votes": true,
                                                "allow_curation_rewards": true
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_config": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns information about compile-time constants. Some properties may not be present.",
                "operationId": "get_config",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_config_response"
                                },
                                "example": {
                                    "IS_TEST_NET": true,
                                    "TESTNET_BLOCK_LIMIT": 3000000,
                                    "SMT_MAX_VOTABLE_ASSETS": 2,
                                    "SMT_VESTING_WITHDRAW_INTERVAL_SECONDS": 604800,
                                    "SMT_UPVOTE_LOCKOUT": 43200,
                                    "SMT_EMISSION_MIN_INTERVAL_SECONDS": 21600,
                                    "SMT_EMIT_INDEFINITELY": 4294967295,
                                    "SMT_MAX_NOMINAL_VOTES_PER_DAY": 1000,
                                    "SMT_MAX_VOTES_PER_REGENERATION": 7000,
                                    "SMT_DEFAULT_VOTES_PER_REGEN_PERIOD": 50,
                                    "SMT_DEFAULT_PERCENT_CURATION_REWARDS": 2500,
                                    "SMT_INITIAL_VESTING_PER_UNIT": 1000000,
                                    "SMT_BALLAST_SUPPLY_PERCENT": 10,
                                    "SMT_MAX_ICO_TIERS": 10,
                                    "HBD_SYMBOL": {
                                        "nai": "@@000000013",
                                        "decimals": 3
                                    },
                                    "HIVE_INITIAL_VOTE_POWER_RATE": 40,
                                    "HIVE_REDUCED_VOTE_POWER_RATE": 10,
                                    "HIVE_100_PERCENT": 10000,
                                    "HIVE_1_PERCENT": 100,
                                    "HIVE_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD": 12000000,
                                    "HIVE_ACTIVE_CHALLENGE_COOLDOWN": "86400000000",
                                    "HIVE_ACTIVE_CHALLENGE_FEE": {
                                        "amount": "2000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_ADDRESS_PREFIX": "TST",
                                    "HIVE_APR_PERCENT_MULTIPLY_PER_BLOCK": "102035135585887",
                                    "HIVE_APR_PERCENT_MULTIPLY_PER_HOUR": "119577151364285",
                                    "HIVE_APR_PERCENT_MULTIPLY_PER_ROUND": "133921203762304",
                                    "HIVE_APR_PERCENT_SHIFT_PER_BLOCK": 87,
                                    "HIVE_APR_PERCENT_SHIFT_PER_HOUR": 77,
                                    "HIVE_APR_PERCENT_SHIFT_PER_ROUND": 83,
                                    "HIVE_BANDWIDTH_AVERAGE_WINDOW_SECONDS": 604800,
                                    "HIVE_BANDWIDTH_PRECISION": 1000000,
                                    "HIVE_BENEFICIARY_LIMIT": 128,
                                    "HIVE_BLOCKCHAIN_PRECISION": 1000,
                                    "HIVE_BLOCKCHAIN_PRECISION_DIGITS": 3,
                                    "HIVE_BLOCKCHAIN_HARDFORK_VERSION": "0.23.0",
                                    "HIVE_BLOCKCHAIN_VERSION": "0.23.0",
                                    "HIVE_BLOCK_INTERVAL": 3,
                                    "HIVE_BLOCKS_PER_DAY": 28800,
                                    "HIVE_BLOCKS_PER_HOUR": 1200,
                                    "HIVE_BLOCKS_PER_YEAR": 10512000,
                                    "HIVE_CASHOUT_WINDOW_SECONDS": 3600,
                                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF12": 3600,
                                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF17": 3600,
                                    "HIVE_CHAIN_ID": "18dcf0a285365fc58b71f18b3d3fec954aa0c141c44e4e5cb4cf777b9eab274e",
                                    "HIVE_COMMENT_REWARD_FUND_NAME": "comment",
                                    "HIVE_COMMENT_TITLE_LIMIT": 256,
                                    "HIVE_CONTENT_APR_PERCENT": 3875,
                                    "HIVE_CONTENT_CONSTANT_HF0": "2000000000000",
                                    "HIVE_CONTENT_CONSTANT_HF21": "2000000000000",
                                    "HIVE_CONTENT_REWARD_PERCENT_HF16": 7500,
                                    "HIVE_CONTENT_REWARD_PERCENT_HF21": 6500,
                                    "HIVE_CONVERSION_DELAY": "302400000000",
                                    "HIVE_CONVERSION_DELAY_PRE_HF_16": "604800000000",
                                    "HIVE_CREATE_ACCOUNT_DELEGATION_RATIO": 5,
                                    "HIVE_CREATE_ACCOUNT_DELEGATION_TIME": "2592000000000",
                                    "HIVE_CREATE_ACCOUNT_WITH_HIVE_MODIFIER": 30,
                                    "HIVE_CURATE_APR_PERCENT": 3875,
                                    "HIVE_CUSTOM_OP_DATA_MAX_LENGTH": 8192,
                                    "HIVE_CUSTOM_OP_ID_MAX_LENGTH": 32,
                                    "HIVE_DEFAULT_HBD_INTEREST_RATE": 1000,
                                    "HIVE_DOWNVOTE_POOL_PERCENT_HF21": 2500,
                                    "HIVE_EQUIHASH_K": 6,
                                    "HIVE_EQUIHASH_N": 140,
                                    "HIVE_FEED_HISTORY_WINDOW": 84,
                                    "HIVE_FEED_HISTORY_WINDOW_PRE_HF_16": 168,
                                    "HIVE_FEED_INTERVAL_BLOCKS": 1200,
                                    "HIVE_GENESIS_TIME": "2016-01-01T00:00:00",
                                    "HIVE_HARDFORK_REQUIRED_WITNESSES": 17,
                                    "HIVE_HF21_CONVERGENT_LINEAR_RECENT_CLAIMS": "503600561838938636",
                                    "HIVE_INFLATION_NARROWING_PERIOD": 250000,
                                    "HIVE_INFLATION_RATE_START_PERCENT": 978,
                                    "HIVE_INFLATION_RATE_STOP_PERCENT": 95,
                                    "HIVE_INIT_MINER_NAME": "initminer",
                                    "HIVE_INIT_PUBLIC_KEY_STR": "TST6LLegbAgLAy28EHrffBVuANFWcFgmqRMW13wBmTExqFE9SCkg4",
                                    "HIVE_INIT_SUPPLY": "250000000000",
                                    "HIVE_HBD_INIT_SUPPLY": "7000000000",
                                    "HIVE_INIT_TIME": "1970-01-01T00:00:00",
                                    "HIVE_IRREVERSIBLE_THRESHOLD": 7500,
                                    "HIVE_LIQUIDITY_APR_PERCENT": 750,
                                    "HIVE_LIQUIDITY_REWARD_BLOCKS": 1200,
                                    "HIVE_LIQUIDITY_REWARD_PERIOD_SEC": 3600,
                                    "HIVE_LIQUIDITY_TIMEOUT_SEC": "604800000000",
                                    "HIVE_MAX_ACCOUNT_CREATION_FEE": 1000000000,
                                    "HIVE_MAX_ACCOUNT_NAME_LENGTH": 16,
                                    "HIVE_MAX_ACCOUNT_WITNESS_VOTES": 30,
                                    "HIVE_MAX_ASSET_WHITELIST_AUTHORITIES": 10,
                                    "HIVE_MAX_AUTHORITY_MEMBERSHIP": 40,
                                    "HIVE_MAX_BLOCK_SIZE": 393216000,
                                    "HIVE_SOFT_MAX_BLOCK_SIZE": 2097152,
                                    "HIVE_MAX_CASHOUT_WINDOW_SECONDS": 86400,
                                    "HIVE_MAX_COMMENT_DEPTH": 65535,
                                    "HIVE_MAX_COMMENT_DEPTH_PRE_HF17": 6,
                                    "HIVE_MAX_FEED_AGE_SECONDS": 604800,
                                    "HIVE_MAX_INSTANCE_ID": "281474976710655",
                                    "HIVE_MAX_MEMO_SIZE": 2048,
                                    "HIVE_MAX_WITNESSES": 21,
                                    "HIVE_MAX_MINER_WITNESSES_HF0": 1,
                                    "HIVE_MAX_MINER_WITNESSES_HF17": 0,
                                    "HIVE_MAX_PERMLINK_LENGTH": 256,
                                    "HIVE_MAX_PROXY_RECURSION_DEPTH": 4,
                                    "HIVE_MAX_RATION_DECAY_RATE": 1000000,
                                    "HIVE_MAX_RESERVE_RATIO": 20000,
                                    "HIVE_MAX_RUNNER_WITNESSES_HF0": 1,
                                    "HIVE_MAX_RUNNER_WITNESSES_HF17": 1,
                                    "HIVE_MAX_SATOSHIS": "4611686018427387903",
                                    "HIVE_MAX_SHARE_SUPPLY": "1000000000000000",
                                    "HIVE_MAX_SIG_CHECK_DEPTH": 2,
                                    "HIVE_MAX_SIG_CHECK_ACCOUNTS": 125,
                                    "HIVE_MAX_TIME_UNTIL_EXPIRATION": 3600,
                                    "HIVE_MAX_TRANSACTION_SIZE": 65536,
                                    "HIVE_MAX_UNDO_HISTORY": 10000,
                                    "HIVE_MAX_URL_LENGTH": 127,
                                    "HIVE_MAX_VOTE_CHANGES": 5,
                                    "HIVE_MAX_VOTED_WITNESSES_HF0": 19,
                                    "HIVE_MAX_VOTED_WITNESSES_HF17": 20,
                                    "HIVE_MAX_WITHDRAW_ROUTES": 10,
                                    "HIVE_MAX_WITNESS_URL_LENGTH": 2048,
                                    "HIVE_MIN_ACCOUNT_CREATION_FEE": 0,
                                    "HIVE_MIN_ACCOUNT_NAME_LENGTH": 3,
                                    "HIVE_MIN_BLOCK_SIZE_LIMIT": 65536,
                                    "HIVE_MIN_BLOCK_SIZE": 115,
                                    "HIVE_MIN_CONTENT_REWARD": {
                                        "amount": "1000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MIN_CURATE_REWARD": {
                                        "amount": "1000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MIN_PERMLINK_LENGTH": 0,
                                    "HIVE_MIN_REPLY_INTERVAL": 20000000,
                                    "HIVE_MIN_REPLY_INTERVAL_HF20": 3000000,
                                    "HIVE_MIN_ROOT_COMMENT_INTERVAL": 300000000,
                                    "HIVE_MIN_COMMENT_EDIT_INTERVAL": 3000000,
                                    "HIVE_MIN_VOTE_INTERVAL_SEC": 3,
                                    "HIVE_MINER_ACCOUNT": "miners",
                                    "HIVE_MINER_PAY_PERCENT": 100,
                                    "HIVE_MIN_FEEDS": 7,
                                    "HIVE_MINING_REWARD": {
                                        "amount": "1000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MINING_TIME": "2016-01-01T00:00:00",
                                    "HIVE_MIN_LIQUIDITY_REWARD": {
                                        "amount": "1200000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MIN_LIQUIDITY_REWARD_PERIOD_SEC": 60000000,
                                    "HIVE_MIN_PAYOUT_HBD": {
                                        "amount": "20",
                                        "precision": 3,
                                        "nai": "@@000000013"
                                    },
                                    "HIVE_MIN_POW_REWARD": {
                                        "amount": "1000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MIN_PRODUCER_REWARD": {
                                        "amount": "1000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_MIN_TRANSACTION_EXPIRATION_LIMIT": 15,
                                    "HIVE_MIN_TRANSACTION_SIZE_LIMIT": 1024,
                                    "HIVE_MIN_UNDO_HISTORY": 10,
                                    "HIVE_NULL_ACCOUNT": "null",
                                    "HIVE_NUM_INIT_MINERS": 1,
                                    "HIVE_OWNER_AUTH_HISTORY_TRACKING_START_BLOCK_NUM": 1,
                                    "HIVE_OWNER_AUTH_RECOVERY_PERIOD": 60000000,
                                    "HIVE_OWNER_CHALLENGE_COOLDOWN": "86400000000",
                                    "HIVE_OWNER_CHALLENGE_FEE": {
                                        "amount": "30000",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    },
                                    "HIVE_OWNER_UPDATE_LIMIT": 0,
                                    "HIVE_POST_AVERAGE_WINDOW": 86400,
                                    "HIVE_POST_REWARD_FUND_NAME": "post",
                                    "HIVE_POST_WEIGHT_CONSTANT": 1600000000,
                                    "HIVE_POW_APR_PERCENT": 750,
                                    "HIVE_PRODUCER_APR_PERCENT": 750,
                                    "HIVE_PROXY_TO_SELF_ACCOUNT": "",
                                    "HIVE_HBD_INTEREST_COMPOUND_INTERVAL_SEC": 2592000,
                                    "HIVE_SECONDS_PER_YEAR": 31536000,
                                    "HIVE_PROPOSAL_FUND_PERCENT_HF0": 0,
                                    "HIVE_PROPOSAL_FUND_PERCENT_HF21": 1000,
                                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF19": "1296000000000",
                                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF17": "2592000000000",
                                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF6": 1800,
                                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF20": 900,
                                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF21": 300,
                                    "HIVE_ROOT_POST_PARENT": "",
                                    "HIVE_SAVINGS_WITHDRAW_REQUEST_LIMIT": 100,
                                    "HIVE_SAVINGS_WITHDRAW_TIME": "259200000000",
                                    "HIVE_HBD_START_PERCENT_HF14": 200,
                                    "HIVE_HBD_START_PERCENT_HF20": 900,
                                    "HIVE_HBD_STOP_PERCENT_HF14": 500,
                                    "HIVE_HBD_STOP_PERCENT_HF20": 1000,
                                    "HIVE_SECOND_CASHOUT_WINDOW": 259200,
                                    "HIVE_SOFT_MAX_COMMENT_DEPTH": 255,
                                    "HIVE_START_MINER_VOTING_BLOCK": 864000,
                                    "HIVE_START_VESTING_BLOCK": 201600,
                                    "HIVE_TEMP_ACCOUNT": "temp",
                                    "HIVE_UPVOTE_LOCKOUT_HF7": 60000000,
                                    "HIVE_UPVOTE_LOCKOUT_HF17": 300000000,
                                    "HIVE_UPVOTE_LOCKOUT_SECONDS": 300,
                                    "HIVE_VESTING_FUND_PERCENT_HF16": 1500,
                                    "HIVE_VESTING_WITHDRAW_INTERVALS": 13,
                                    "HIVE_VESTING_WITHDRAW_INTERVALS_PRE_HF_16": 104,
                                    "HIVE_VESTING_WITHDRAW_INTERVAL_SECONDS": 604800,
                                    "HIVE_VOTE_DUST_THRESHOLD": 50000000,
                                    "HIVE_VOTING_MANA_REGENERATION_SECONDS": 432000,
                                    "HIVE_SYMBOL": {
                                        "nai": "@@000000021",
                                        "decimals": 3
                                    },
                                    "VESTS_SYMBOL": {
                                        "nai": "@@000000037",
                                        "decimals": 6
                                    },
                                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH": "18446744073709551615",
                                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH2": "340282366920938463463374607431768211455",
                                    "HIVE_VOTES_PER_PERIOD_SMT_HF": 50,
                                    "HIVE_MAX_LIMIT_ORDER_EXPIRATION": 2419200,
                                    "HIVE_DELEGATION_RETURN_PERIOD_HF0": 3600,
                                    "HIVE_DELEGATION_RETURN_PERIOD_HF20": 432000,
                                    "HIVE_RD_MIN_DECAY_BITS": 6,
                                    "HIVE_RD_MAX_DECAY_BITS": 32,
                                    "HIVE_RD_DECAY_DENOM_SHIFT": 36,
                                    "HIVE_RD_MAX_POOL_BITS": 64,
                                    "HIVE_RD_MAX_BUDGET_1": "17179869183",
                                    "HIVE_RD_MAX_BUDGET_2": 268435455,
                                    "HIVE_RD_MAX_BUDGET_3": 2147483647,
                                    "HIVE_RD_MAX_BUDGET": 268435455,
                                    "HIVE_RD_MIN_DECAY": 64,
                                    "HIVE_RD_MIN_BUDGET": 1,
                                    "HIVE_RD_MAX_DECAY": 4294967295,
                                    "HIVE_ACCOUNT_SUBSIDY_PRECISION": 10000,
                                    "HIVE_WITNESS_SUBSIDY_BUDGET_PERCENT": 12500,
                                    "HIVE_WITNESS_SUBSIDY_DECAY_PERCENT": 210000,
                                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_DECAY": 347321,
                                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_BUDGET": 797,
                                    "HIVE_DECAY_BACKSTOP_PERCENT": 9000,
                                    "HIVE_BLOCK_GENERATION_POSTPONED_TX_LIMIT": 5,
                                    "HIVE_PENDING_TRANSACTION_EXECUTION_LIMIT": 200000,
                                    "HIVE_TREASURY_ACCOUNT": "hive.fund",
                                    "HIVE_TREASURY_FEE": 10000,
                                    "HIVE_PROPOSAL_MAINTENANCE_PERIOD": 3600,
                                    "HIVE_PROPOSAL_MAINTENANCE_CLEANUP": 86400,
                                    "HIVE_PROPOSAL_SUBJECT_MAX_LENGTH": 80,
                                    "HIVE_PROPOSAL_MAX_IDS_NUMBER": 5,
                                    "HIVE_NETWORK_TYPE": "testnet",
                                    "HIVE_DB_FORMAT_VERSION": "1"
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_current_price_feed": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the current price feed.",
                "operationId": "get_current_price_feed",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_current_price_feed_response"
                                },
                                "example": {
                                    "base": {
                                        "amount": "1",
                                        "precision": 3,
                                        "nai": "@@000000013"
                                    },
                                    "quote": {
                                        "amount": "1",
                                        "precision": 3,
                                        "nai": "@@000000021"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_dynamic_global_properties": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the current dynamic global properties.",
                "description": "Dynamic Global Properties represents a set of values that are calculated during normal chain operations and reflect the current values of global blockchain properties.\n",
                "operationId": "get_dynamic_global_properties",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_dynamic_global_properties_response"
                                },
                                "example": {
                                    "available_account_subsidies": 15302864,
                                    "content_reward_percent": 6500,
                                    "current_aslot": 95900868,
                                    "current_hbd_supply": {
                                        "amount": "34414606785",
                                        "nai": "@@000000013",
                                        "precision": 3
                                    },
                                    "current_remove_threshold": 200,
                                    "current_supply": {
                                        "amount": "475506210761",
                                        "nai": "@@000000021",
                                        "precision": 3
                                    },
                                    "current_witness": "guiltyparties",
                                    "delegation_return_period": 432000,
                                    "dhf_interval_ledger": {
                                        "amount": "79305",
                                        "nai": "@@000000013",
                                        "precision": 3
                                    },
                                    "downvote_pool_percent": 2500,
                                    "early_voting_seconds": 86400,
                                    "hbd_interest_rate": 1500,
                                    "hbd_print_rate": 10000,
                                    "hbd_start_percent": 2000,
                                    "hbd_stop_percent": 2000,
                                    "head_block_id": "05b38dd884fe0fd7fc4a35ad7c17c36a532d4228",
                                    "head_block_number": 95653336,
                                    "id": 0,
                                    "init_hbd_supply": {
                                        "amount": "0",
                                        "nai": "@@000000013",
                                        "precision": 3
                                    },
                                    "last_budget_time": "2025-05-06T12:36:45",
                                    "last_irreversible_block_num": 95653336,
                                    "max_consecutive_recurrent_transfer_failures": 10,
                                    "max_open_recurrent_transfers": 255,
                                    "max_recurrent_transfer_end_date": 730,
                                    "maximum_block_size": 65536,
                                    "mid_voting_seconds": 172800,
                                    "min_recurrent_transfers_recurrence": 24,
                                    "next_daily_maintenance_time": "2025-05-06T19:31:33",
                                    "next_maintenance_time": "2025-05-06T13:36:45",
                                    "num_pow_witnesses": 172,
                                    "participation_count": 128,
                                    "pending_rewarded_vesting_hive": {
                                        "amount": "562020060",
                                        "nai": "@@000000021",
                                        "precision": 3
                                    },
                                    "pending_rewarded_vesting_shares": {
                                        "amount": "1033334375779499",
                                        "nai": "@@000000037",
                                        "precision": 6
                                    },
                                    "proposal_fund_percent": 1000,
                                    "recent_slots_filled": "340282366920938463463374607431768211455",
                                    "reverse_auction_seconds": 0,
                                    "time": "2025-05-06T13:23:24",
                                    "total_pow": 514415,
                                    "total_reward_fund_hive": {
                                        "amount": "0",
                                        "nai": "@@000000021",
                                        "precision": 3
                                    },
                                    "total_reward_shares2": "0",
                                    "total_vesting_fund_hive": {
                                        "amount": "183947751106",
                                        "nai": "@@000000021",
                                        "precision": 3
                                    },
                                    "total_vesting_shares": {
                                        "amount": "308205423661993210",
                                        "nai": "@@000000037",
                                        "precision": 6
                                    },
                                    "vesting_reward_percent": 1500,
                                    "virtual_supply": {
                                        "amount": "615973993556",
                                        "nai": "@@000000021",
                                        "precision": 3
                                    },
                                    "vote_power_reserve_rate": 10
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_feed_history": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the history of price feed values.",
                "operationId": "get_feed_history",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_feed_history_response"
                                },
                                "example": {
                                    "current_max_history": {
                                        "base": {
                                            "amount": "269",
                                            "nai": "@@000000013",
                                            "precision": 3
                                        },
                                        "quote": {
                                            "amount": "1000",
                                            "nai": "@@000000021",
                                            "precision": 3
                                        }
                                    },
                                    "current_median_history": {
                                        "base": {
                                            "amount": "258",
                                            "nai": "@@000000013",
                                            "precision": 3
                                        },
                                        "quote": {
                                            "amount": "1000",
                                            "nai": "@@000000021",
                                            "precision": 3
                                        }
                                    },
                                    "current_min_history": {
                                        "base": {
                                            "amount": "248",
                                            "nai": "@@000000013",
                                            "precision": 3
                                        },
                                        "quote": {
                                            "amount": "1000",
                                            "nai": "@@000000021",
                                            "precision": 3
                                        }
                                    },
                                    "id": 0,
                                    "market_median_history": {
                                        "base": {
                                            "amount": "258",
                                            "nai": "@@000000013",
                                            "precision": 3
                                        },
                                        "quote": {
                                            "amount": "1000",
                                            "nai": "@@000000021",
                                            "precision": 3
                                        }
                                    },
                                    "price_history": [
                                        {
                                            "base": {
                                                "amount": "263",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "quote": {
                                                "amount": "1000",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_hardfork_properties": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the current properties about the blockchain’s hardforks.",
                "operationId": "get_hardfork_properties",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_hardfork_properties_response"
                                },
                                "example": {
                                    "current_hardfork_version": "1.27.0",
                                    "id": 0,
                                    "last_hardfork": 27,
                                    "next_hardfork": "1.27.0",
                                    "next_hardfork_time": "2022-10-24T12:00:00",
                                    "processed_hardforks": [
                                        "2016-03-24T16:00:00",
                                        "2016-04-25T17:30:00",
                                        "2016-04-26T18:00:00",
                                        "2016-04-27T13:00:00",
                                        "2016-04-30T15:00:00",
                                        "2016-05-31T17:00:00",
                                        "2016-06-30T14:00:00",
                                        "2016-07-04T00:00:00",
                                        "2016-07-04T01:00:00",
                                        "2016-07-14T00:00:00",
                                        "2016-07-15T12:00:00",
                                        "2016-07-17T15:00:00",
                                        "2016-07-26T15:00:00",
                                        "2016-08-15T14:00:00",
                                        "2016-09-20T15:00:00",
                                        "2016-11-08T16:00:00",
                                        "2016-12-06T16:00:00",
                                        "2017-03-30T15:00:00",
                                        "2017-03-30T15:00:00",
                                        "2017-06-20T15:00:00",
                                        "2018-09-25T15:00:00",
                                        "2019-08-27T15:00:00",
                                        "2019-08-29T15:00:00",
                                        "2020-03-20T14:00:00",
                                        "2020-10-06T14:00:00",
                                        "2021-06-30T14:00:00",
                                        "2022-10-11T12:00:00",
                                        "2022-10-24T12:00:00"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_order_book": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the order book.",
                "operationId": "get_order_book",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_order_book"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_order_book_response"
                                },
                                "example": {
                                    "asks": [
                                        {
                                            "created": "2025-05-22T11:17:24",
                                            "hbd": 26344,
                                            "hive": 97538,
                                            "order_price": {
                                                "base": {
                                                    "amount": "100000",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "quote": {
                                                    "amount": "27009",
                                                    "nai": "@@000000013",
                                                    "precision": 3
                                                }
                                            },
                                            "real_price": "0.00000000000000000"
                                        }
                                    ],
                                    "bids": [
                                        {
                                            "created": "2025-05-22T11:14:18",
                                            "hbd": 245,
                                            "hive": 907,
                                            "order_price": {
                                                "base": {
                                                    "amount": "2000",
                                                    "nai": "@@000000013",
                                                    "precision": 3
                                                },
                                                "quote": {
                                                    "amount": "7410",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                }
                                            },
                                            "real_price": "0.00000000000000000"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_potential_signatures": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "This method will return the set of all public keys that could possibly sign for a given transaction.",
                "description": "This call can be used by wallets to filter their set of public keys to just the relevant subset prior to calling get_required_signatures to get the minimum subset.\n",
                "operationId": "get_potential_signatures",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_potential_signatures"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_potential_signatures_response"
                                },
                                "example": {
                                    "keys": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_required_signatures": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Return the minimal subset of public keys that should add signatures to the transaction.",
                "description": "This API will take a partially signed transaction and a set of public keys that the owner has the ability to sign for and return the minimal subset of public keys that should add signatures to the transaction.\n",
                "operationId": "get_required_signatures",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_required_signatures"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_potential_signatures_response"
                                },
                                "example": {
                                    "keys": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_reward_funds": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns information about the current reward funds.",
                "operationId": "get_reward_funds",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_reward_funds_response"
                                },
                                "example": {
                                    "funds": [
                                        {
                                            "author_reward_curve": "linear",
                                            "content_constant": "2000000000000",
                                            "curation_reward_curve": "linear",
                                            "id": 0,
                                            "last_update": "2025-05-22T12:59:21",
                                            "name": "post",
                                            "percent_content_rewards": 10000,
                                            "percent_curation_rewards": 5000,
                                            "recent_claims": "711345102753889024",
                                            "reward_balance": {
                                                "amount": "969716237",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_transaction_hex": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a hexdump of the serialized binary form of a transaction.",
                "operationId": "get_transaction_hex",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/get_transaction_hex"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_transaction_hex_response"
                                },
                                "example": {
                                    "hex": "00000000000000000000000000"
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_version": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the compile time versions of blockchain, hived, FC.",
                "description": "Also returns the boot time version of the chain id (may be different from compile time value only when looking at a testnet)\n",
                "operationId": "get_version",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_version_response"
                                },
                                "example": {
                                    "blockchain_version": "1.27.11",
                                    "chain_id": "beeab0de00000000000000000000000000000000000000000000000000000000",
                                    "fc_revision": "db292750555320d8495fda8f86ac5f8715038184",
                                    "haf_revision": "0e2bd7c69cc26928665281435165fd3288940db9",
                                    "hive_revision": "db292750555320d8495fda8f86ac5f8715038184",
                                    "node_type": "mainnet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.get_witness_schedule": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the current witness schedule.",
                "operationId": "get_witness_schedule",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/get_witness_schedule_response"
                                },
                                "example": {
                                    "account_subsidy_rd": {
                                        "budget_per_time_unit": 797,
                                        "decay_params": {
                                            "decay_per_time_unit": 347321,
                                            "decay_per_time_unit_denom_shift": 36
                                        },
                                        "max_pool_size": 157691079,
                                        "min_decay": 0,
                                        "pool_eq": 157691079,
                                        "resource_unit": 10000
                                    },
                                    "account_subsidy_witness_rd": {
                                        "budget_per_time_unit": 996,
                                        "decay_params": {
                                            "decay_per_time_unit": 7293741,
                                            "decay_per_time_unit_denom_shift": 36
                                        },
                                        "max_pool_size": 9384019,
                                        "min_decay": 179,
                                        "pool_eq": 9384019,
                                        "resource_unit": 10000
                                    },
                                    "current_shuffled_witnesses": [
                                        "threespeak",
                                        "mahdiyari",
                                        "yabapmatt",
                                        "quochuy",
                                        "themarkymark",
                                        "guiltyparties",
                                        "pharesim",
                                        "arcange",
                                        "smooth.witness",
                                        "ausbitbank",
                                        "abit",
                                        "ocd-witness",
                                        "roelandp",
                                        "therealwolf",
                                        "deathwing",
                                        "stoodkev",
                                        "blocktrades",
                                        "gtg",
                                        "emrebeyler",
                                        "steempeak",
                                        "good-karma"
                                    ],
                                    "current_virtual_time": "965626696637118176548648739",
                                    "elected_weight": 1,
                                    "hardfork_required_witnesses": 17,
                                    "id": 0,
                                    "majority_version": "1.27.3",
                                    "max_miner_witnesses": 0,
                                    "max_runner_witnesses": 1,
                                    "max_voted_witnesses": 20,
                                    "median_props": {
                                        "account_creation_fee": {
                                            "amount": "3000",
                                            "nai": "@@000000021",
                                            "precision": 3
                                        },
                                        "account_subsidy_budget": 797,
                                        "account_subsidy_decay": 347321,
                                        "hbd_interest_rate": 1500,
                                        "maximum_block_size": 65536
                                    },
                                    "min_witness_account_subsidy_decay": 0,
                                    "miner_weight": 1,
                                    "next_shuffle_block_num": 96113997,
                                    "num_scheduled_witnesses": 21,
                                    "timeshare_weight": 5,
                                    "witness_pay_normalization_factor": 25
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.is_known_transaction": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Only return true if the transaction has not expired or been invalidated.",
                "description": "If this method is called with a VERY old transaction we will return false, use account_history_api.get_transaction.\n",
                "operationId": "is_known_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/is_known_transaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/is_known_transaction_response"
                                },
                                "example": {
                                    "is_known": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_account_recovery_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of account recovery requests.",
                "description": "Parameters:\n\n- `start`: A string indicating the starting point for the query (optional).\n\n- `limit`: An integer specifying the maximum number of recovery requests to return; up to 1000.\n\n- `order`: A string determining how results are ordered. Possible values:\n  - `by_account` — order by account name\n  - `by_expiration` — order by expiration date\n\nExamples:\n\n- `start = \"hiveio\"`, `limit = 10`, `order = \"by_account\"` — queries recovery requests for account \"hiveio\", ordered by account name.\n\n- `start = [\"1960-01-01T00:00:00\"]`, `limit = 10`, `order = \"by_expiration\"` — queries recovery requests from the specified date, ordered by expiration.\n",
                "operationId": "list_account_recovery_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_account_recovery_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_account_recovery_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_accounts": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "List accounts ordered by specified key.",
                "description": "Parameters:\n\n- `start`: An object indicating the starting point for listing accounts.\n\n- `limit`: An integer specifying the maximum number of accounts to return; default is 1000.\n\n- `order`: A string defining the sorting order. Possible values:\n  - `by_name` — order by account name\n  - `by_proxy` — order by proxy\n  - `by_next_vesting_withdrawal` — order by next vesting withdrawal\n\n- `delayed_votes_active`: A boolean indicating whether to filter for active delayed votes. Defaults to true (optional).\n",
                "operationId": "list_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_accounts_response"
                                },
                                "example": {
                                    "accounts": [
                                        {
                                            "active": {
                                                "account_auths": [
                                                    [
                                                        "pettycash",
                                                        1
                                                    ]
                                                ],
                                                "key_auths": [
                                                    [
                                                        "STM69zfrFGnZtU3gWFWpQJ6GhND1nz7TJsKBTjcWfebS1JzBEweQy",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "balance": {
                                                "amount": "743431",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "can_vote": true,
                                            "comment_count": 0,
                                            "created": "2020-03-06T12:22:51",
                                            "curation_rewards": 20,
                                            "delayed_votes": [],
                                            "delegated_vesting_shares": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "downvote_manabar": {
                                                "current_mana": 5831078449,
                                                "last_update_time": 1735711413
                                            },
                                            "governance_vote_expiration_ts": "2026-05-11T00:45:09",
                                            "hbd_balance": {
                                                "amount": "0",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "hbd_last_interest_payment": "2020-10-21T02:45:12",
                                            "hbd_seconds": "0",
                                            "hbd_seconds_last_update": "2020-10-21T02:45:12",
                                            "id": 1370484,
                                            "is_smt": false,
                                            "json_metadata": "",
                                            "last_account_recovery": "1970-01-01T00:00:00",
                                            "last_account_update": "2021-11-09T21:56:27",
                                            "last_owner_update": "1970-01-01T00:00:00",
                                            "last_post": "2025-03-20T16:39:33",
                                            "last_post_edit": "2025-03-20T16:39:33",
                                            "last_root_post": "2025-03-20T16:39:33",
                                            "last_vote_time": "2025-01-01T06:03:33",
                                            "lifetime_vote_count": 0,
                                            "memo_key": "STM7wrsg1BZogeK7X3eG4ivxmLaH69FomR8rLkBbepb3z3hm5SbXu",
                                            "mined": false,
                                            "name": "hiveio",
                                            "next_vesting_withdrawal": "1969-12-31T23:59:59",
                                            "open_recurrent_transfers": 0,
                                            "owner": {
                                                "account_auths": [],
                                                "key_auths": [
                                                    [
                                                        "STM65PUAPA4yC4RgPtGgsPupxT6yJtMhmT5JHFdsT3uoCbR8WJ25s",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "pending_claimed_accounts": 0,
                                            "pending_transfers": 0,
                                            "post_bandwidth": 0,
                                            "post_count": 80,
                                            "post_voting_power": {
                                                "amount": "23324313796",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "posting": {
                                                "account_auths": [
                                                    [
                                                        "threespeak",
                                                        1
                                                    ],
                                                    [
                                                        "vimm.app",
                                                        1
                                                    ]
                                                ],
                                                "key_auths": [
                                                    [
                                                        "STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9",
                                                        1
                                                    ]
                                                ],
                                                "weight_threshold": 1
                                            },
                                            "posting_json_metadata": "{\"profile\":{\"pinned\":\"none\",\"version\":2,\"website\":\"hive.io\",\"profile_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Jp2YHc6Q-hive-logo.png\",\"cover_image\":\"https://files.peakd.com/file/peakd-hive/hiveio/Xe1TcEBi-hive-banner.png\"}}",
                                            "posting_rewards": 1919844,
                                            "previous_owner_update": "1970-01-01T00:00:00",
                                            "proxied_vsf_votes": [
                                                0,
                                                0,
                                                0,
                                                0
                                            ],
                                            "proxy": "",
                                            "received_vesting_shares": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "recovery_account": "steempeak",
                                            "reset_account": "null",
                                            "reward_hbd_balance": {
                                                "amount": "50418",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "reward_hive_balance": {
                                                "amount": "0",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "reward_vesting_balance": {
                                                "amount": "291242001054",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "reward_vesting_hive": {
                                                "amount": "171636",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "savings_balance": {
                                                "amount": "0",
                                                "nai": "@@000000021",
                                                "precision": 3
                                            },
                                            "savings_hbd_balance": {
                                                "amount": "0",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "savings_hbd_last_interest_payment": "1970-01-01T00:00:00",
                                            "savings_hbd_seconds": "0",
                                            "savings_hbd_seconds_last_update": "1970-01-01T00:00:00",
                                            "savings_withdraw_requests": 0,
                                            "to_withdraw": 0,
                                            "vesting_shares": {
                                                "amount": "23324313796",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "vesting_withdraw_rate": {
                                                "amount": "0",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            },
                                            "voting_manabar": {
                                                "current_mana": 22857989494,
                                                "last_update_time": 1735711413
                                            },
                                            "withdraw_routes": 0,
                                            "withdrawn": 0,
                                            "witnesses_voted_for": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_change_recovery_account_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of recovery account change requests.",
                "description": "Parameters:\n\n- `start`: An object whose structure depends on the `order` parameter.\n  - If `order` is `by_account`, `start` is a string representing the account name.\n  - If `order` is `by_effective_date`, `start` is an array with two values: a timestamp and an account string.\n\n- `limit`: An integer specifying the maximum number of requests to return; up to 1000.\n\n- `order`: A string indicating the sorting method. Possible values:\n  - `by_account` — sort by account; `start` is a string of account name.\n  - `by_effective_date` — sort by effective date; `start` is an array: [timestamp, account].\n\nExamples:\n\n- `start = \"\"`, `limit = 10`, `order = \"by_account\"` — queries the first 10 requests sorted by account.\n\n- `start = [\"1960-01-01T00:00:00\", \"\"]`, `limit = 10`, `order = \"by_effective_date\"` — queries the first 10 requests sorted by effective date.\n",
                "operationId": "list_change_recovery_account_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_change_recovery_account_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_change_recovery_account_requests_response"
                                },
                                "example": {
                                    "requests": [
                                        {
                                            "id": 99,
                                            "account_to_recover": "alice",
                                            "recovery_account": "bob",
                                            "effective_on": "1960-01-01T00:00:00"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_collateralized_conversion_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns objects corresponding with collateralized_convert operations.",
                "operationId": "list_collateralized_conversion_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_collateralized_conversion_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_collateralized_conversion_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_decline_voting_rights_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of decline voting rights requests.",
                "description": "Parameters:\n\n- `start`: An object whose structure depends on the `order` parameter.\n  - If `order` is `by_account`, `start` is a string representing the account name.\n  - If `order` is `by_effective_date`, `start` is an array with two values: a timestamp and an account string.\n\n- `limit`: An integer specifying the maximum number of requests to return; up to 1000.\n\n- `order`: A string indicating the sorting method. Possible values:\n  - `by_account` — sort by account; `start` is a string of account name.\n  - `by_effective_date` — sort by effective date; `start` is an array: [timestamp, account].\n\nExamples:\n\n- `start = \"\"`, `limit = 10`, `order = \"by_account\"` — queries the first 10 requests sorted by account.\n\n- `start = [\"1960-01-01T00:00:00\", \"\"]`, `limit = 10`, `order = \"by_effective_date\"` — queries the first 10 requests sorted by effective date.\n",
                "operationId": "list_decline_voting_rights_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_decline_voting_rights_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_decline_voting_rights_requests_response"
                                },
                                "example": {
                                    "requests": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_escrows": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of escrows.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_from_id`: `start` is an array of two values: `[account, escrow_id]`.\n  - For `by_ratification_deadline`: `start` is an array of three values: `[is_approved, timestamp, escrow_id]`.\n\n- `limit`: An integer specifying the maximum number of requests to return; up to 1000.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_from_id` — sort by ID.\n  - `by_ratification_deadline` — sort by ratification deadline.\n\nExamples:\n\n- `start = [\"alice\", 99]`, `limit = 10`, `order = \"by_from_id\"` — queries the first 10 requests, sorted by ID.\n\n- `start = [true, \"1960-01-01T00:00:00\", 99]`, `limit = 10`, `order = \"by_ratification_deadline\"` — queries the first 10 requests, sorted by ratification deadline.\n",
                "operationId": "list_escrows",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_escrows"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_escrows_response"
                                },
                                "example": {
                                    "escrows": [
                                        {
                                            "id": 158,
                                            "escrow_id": 1,
                                            "from": "addicttolife",
                                            "to": "fundition.help",
                                            "agent": "ongame",
                                            "ratification_deadline": "2018-11-23T17:31:26",
                                            "escrow_expiration": "2018-11-24T17:31:26",
                                            "hbd_balance": {
                                                "amount": "0",
                                                "precision": 3,
                                                "nai": "@@000000013"
                                            },
                                            "hive_balance": {
                                                "amount": "4832",
                                                "precision": 3,
                                                "nai": "@@000000021"
                                            },
                                            "pending_fee": {
                                                "amount": "0",
                                                "precision": 3,
                                                "nai": "@@000000021"
                                            },
                                            "to_approved": true,
                                            "agent_approved": true,
                                            "disputed": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_hbd_conversion_requests": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of HBD conversion requests for an account.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_account`: `start` is an array of two values: `[account, request_id]`.\n  - For `by_conversion_date`: `start` is an array of two values: `[timestamp, request_id]`.\n\n- `limit`: An integer specifying the maximum number of results to return; up to 1000.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_account` — order by account name.\n  - `by_conversion_date` — order by conversion date.\n\nExamples:\n\n- `start = [\"hiveio\", 0]`, `limit = 10`, `order = \"by_account\"` — queries a conversion request for \"hiveio\", limited to 10 results, ordered by account name.\n\n- `start = [\"2018-12-07T16:54:03\", 0]`, `limit = 10`, `order = \"by_conversion_date\"` — queries a conversion request from the specified date, limited to 10 results, ordered by conversion date.\n",
                "operationId": "list_hbd_conversion_requests",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_hbd_conversion_requests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_hbd_conversion_requests_response"
                                },
                                "example": {
                                    "requests": [
                                        {
                                            "id": 75677,
                                            "owner": "adenijiadeshina",
                                            "requestid": 3,
                                            "amount": {
                                                "amount": "311",
                                                "precision": 3,
                                                "nai": "@@000000013"
                                            },
                                            "conversion_date": "2018-12-06T20:42:42"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_limit_orders": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of limit orders.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_price`: `start` is an array of two values: `[price, order_type]`.\n  - For `by_account`: `start` is an array of two values: `[account, order_id]`.\n\n- `limit`: An integer specifying the maximum number of results to return; up to 1000.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_price` — order by price.\n  - `by_account` — order by account.\n\nExamples:\n\n- `start = [{\"base\": {\"amount\": \"85405\", \"precision\": 3, \"nai\": \"@@000000021\"}, \"quote\": {\"amount\": \"17192\", \"precision\": 3, \"nai\": \"@@000000013\"}}, 0]`, `limit = 10`, `order = \"by_price\"` — queries the first 10 requests, sorted by price.\n\n- `start = [\"alice\", 0]`, `limit = 10`, `order = \"by_account\"` — queries the first 10 requests, sorted by account.\n",
                "operationId": "list_limit_orders",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_limit_orders"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_limit_orders_response"
                                },
                                "example": {
                                    "orders": [
                                        {
                                            "id": 3155591,
                                            "created": "2018-12-05T06:34:21",
                                            "expiration": "2018-12-15T06:34:20",
                                            "seller": "teamsmooth-mm",
                                            "orderid": 2000,
                                            "for_sale": 197714,
                                            "sell_price": {
                                                "base": {
                                                    "amount": "198513",
                                                    "precision": 3,
                                                    "nai": "@@000000021"
                                                },
                                                "quote": {
                                                    "amount": "80000",
                                                    "precision": 3,
                                                    "nai": "@@000000013"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_owner_histories": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of limit orders.",
                "description": "Parameters:\n\n- `start`: An array of two values.\n  - Example: `[\"hiveio\", \"1970-01-01T00:00:00\"]` — starts from account \"hiveio\" on the date \"1970-01-01T00:00:00\".\n  - Example: `[\"alice\", \"1970-01-01T00:00:00\"]` — starts from account \"alice\" on the same date.\n\n- `limit`: An integer specifying the maximum number of results to return; e.g., 10.\n",
                "operationId": "list_owner_histories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_owner_histories"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_owner_histories_response"
                                },
                                "example": {
                                    "owner_auths": [
                                        {
                                            "id": 129742,
                                            "account": "a-m",
                                            "previous_owner_authority": {
                                                "weight_threshold": 1,
                                                "account_auths": [],
                                                "key_auths": [
                                                    [
                                                        "STM7J6gXoztfTscNzmzL11DFtTPCFCTeZzsFtFxsQrQw91KnN1YxQ",
                                                        1
                                                    ]
                                                ]
                                            },
                                            "last_valid_time": "2018-11-24T02:35:27"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_proposal_votes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns all proposal votes, starting with the specified voter or proposal.id.",
                "description": "Parameters:\n\n- `start`: An array whose content depends on the `order` parameter.\n  - If `order` is `by_voter_proposal`: `start` is an array with one element: voter account name string (e.g., `[\"alice\"]`).\n  - If `order` is `by_proposal_voter`: `start` is an array with one element: proposal id (integer) (e.g., `[10]`).\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string indicating the sorting order. Possible values:\n  - `by_voter_proposal` — order by voter for each proposal.\n  - `by_proposal_voter` — order by proposal id.\n\n- `order_direction`: A string determining the sort direction:\n  - `ascending`\n  - `descending`\n\n- `status`: A string filter for proposal status:\n  - `all`\n  - `inactive`\n  - `active`\n  - `expired`\n  - `votable`\n\nExamples:\n\n- `start = [\"alice\"]`, `limit = 10`, `order = \"by_voter_proposal\"`, `order_direction = \"ascending\"`, `status = \"active\"` — list 10 proposals with active status, ordered by voter ascending.\n\n- `start = [10]`, `limit = 1000`, `order = \"by_proposal_voter\"`, `order_direction = \"ascending\"`, `status = \"votable\"` — list 1000 votes on proposal 10, ordered by proposal id ascending.\n",
                "operationId": "list_proposal_votes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_proposal_votes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_proposal_votes_response"
                                },
                                "example": {
                                    "proposal_votes": [
                                        {
                                            "id": 186432,
                                            "proposal": {
                                                "creator": "leofinance",
                                                "daily_pay": {
                                                    "amount": "695000",
                                                    "nai": "@@000000013",
                                                    "precision": 3
                                                },
                                                "end_date": "2025-12-31T00:00:00",
                                                "id": 332,
                                                "permlink": "proposal-to-grow-hive-through-strategic-partnerships-with-the-largest-crypto-ecosystems-g9v",
                                                "proposal_id": 332,
                                                "receiver": "leofinance",
                                                "start_date": "2025-01-15T00:00:00",
                                                "status": "active",
                                                "subject": "Open Source INLEO Technology and Grow Hive Through Strategic Partnerships",
                                                "total_votes": "49974944128860204"
                                            },
                                            "voter": "a-frobenius"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_proposals": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns all proposals, starting with the specified creator or start date.",
                "description": "Parameters:\n\n- `start`: An array whose content depends on the `order` parameter.\n  - For `by_creator`: `start` is an array with one element: creator account name string (e.g., `[\"\"]`).\n  - For `by_start_date`: `start` is an array with one element: start date string (e.g., `[\"2019-08-07T16:54:03\"]`).\n  - For `by_end_date`: `start` is an array with one element: end date string.\n  - For `by_total_votes`: `start` is an array with one element: total votes (integer).\n\n- `limit`: An integer up to 1000, specifying the maximum number of proposals to return.\n\n- `order`: A string indicating the ordering criterion. Possible values:\n  - `by_creator` — order by proposal creator.\n  - `by_start_date` — order by proposal start date.\n  - `by_end_date` — order by proposal end date.\n  - `by_total_votes` — order by total votes.\n\n- `order_direction`: A string, either `ascending` or `descending`.\n\n- `status`: A string filter for proposal status:\n  - `all`\n  - `inactive`\n  - `active`\n  - `expired`\n  - `votable`\n\n- `last_id` (optional): The ID of the last object from the previous page, used to paginate the next set of results.\n\nExamples:\n\n- `start = [\"\"]`, `limit = 10`, `order = \"by_creator\"`, `order_direction = \"ascending\"`, `status = \"active\"` — list 10 active proposals ordered by creator.\n\n- `start = [\"2019-08-07T16:54:03\"]`, `limit = 1000`, `order = \"by_start_date\"`, `order_direction = \"ascending\"`, `status = \"inactive\"` — list 1000 proposals starting from the specified date, ordered by start date.\n\n- `start = [\"a\"]`, `limit = 1`, `order = \"by_creator\"`, `order_direction = \"ascending\"`, `status = \"expired\"` — list 1 expired proposal with creator starting with \"a\".\n\n- `start = [\"alice\"]`, `limit = 10`, `order = \"by_creator\"`, `order_direction = \"ascending\"`, `status = \"all\"` — list 10 proposals with any status, ordered by creator.\n\n- `start = [10]`, `limit = 1000`, `order = \"by_total_votes\"`, `order_direction = \"ascending\"`, `status = \"votable\"` — list 1000 votable proposals with at least 10 votes, ordered by total votes.\n",
                "operationId": "list_proposals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_proposals"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_proposals_response"
                                },
                                "example": {
                                    "proposals": [
                                        {
                                            "id": 0,
                                            "proposal_id": "1103806595072",
                                            "creator": "alice",
                                            "receiver": "bob",
                                            "start_date": "2019-07-01T00:00:00",
                                            "end_date": "2019-08-01T23:59:59",
                                            "daily_pay": {
                                                "amount": "4800000",
                                                "precision": 3,
                                                "nai": "@@000000013"
                                            },
                                            "subject": "My Proposal",
                                            "permlink": "creator-proposal-permlink",
                                            "total_votes": "77351826710",
                                            "status": "active"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_savings_withdrawals": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of savings withdrawls.",
                "description": "Parameters:\n\n- `start`: An object whose structure depends on the `order` parameter.\n  - For `by_from_id`: `start` is an array with two values: `[account, request_id]`.\n  - For `by_complete_from_id`: `start` is an array with three values: `[timestamp, account, request_id]`.\n  - For `by_to_complete`: `start` is an array with three values: `[account, timestamp, order_id]`.\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_from_id` — order by request ID.\n  - `by_complete_from_id` — order by completed request ID.\n  - `by_to_complete` — order by completed request.\n\nExamples:\n\n- `start = [0]`, `limit = 10`, `order = \"by_from_id\"` — queries savings withdrawal by request ID, limited to 10 results.\n\n- `start = [\"2018-12-07T16:54:03\", \"hiveio\", 0]`, `limit = 10`, `order = \"by_complete_from_id\"` — queries completed requests by ID, starting from specified timestamp and account.\n\n- `start = [\"\", \"1970-01-01T00:00:00\", 0]`, `limit = 10`, `order = \"by_to_complete\"` — queries completed savings withdrawals starting from the specified account and date.\n",
                "operationId": "list_savings_withdrawals",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_savings_withdrawals"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_savings_withdrawals_response"
                                },
                                "example": {
                                    "withdrawals": [
                                        {
                                            "amount": {
                                                "amount": "300000",
                                                "nai": "@@000000013",
                                                "precision": 3
                                            },
                                            "complete": "2025-05-25T09:04:00",
                                            "from": "abundancelife",
                                            "id": 248773,
                                            "memo": "",
                                            "request_id": 4147917123,
                                            "to": "abundancelife"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_vesting_delegation_expirations": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of vesting delegation expirations.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_expiration`: `start` is an array with two values: `[timestamp, expiration_id]`.\n  - For `by_account_expiration`: `start` is an array with three values: `[account, timestamp, expiration_id]`.\n\n- `limit`: An integer up to 1000; specifies the maximum number of results to return.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_expiration` — order by expiration.\n  - `by_account_expiration` — order by account expiration.\n\nExamples:\n\n- `start = [\"1970-01-01T00:00:00\", 0]`, `limit = 10`, `order = \"by_expiration\"` — queries delegations, limited to 10, ordered by expiration.\n\n- `start = [\"alice\", \"1970-01-01T00:00:00\", 0]`, `limit = 10`, `order = \"by_account_expiration\"` — queries delegations from this date, limited to 10, ordered by account expiration.\n",
                "operationId": "list_vesting_delegation_expirations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_vesting_delegation_expirations"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_vesting_delegation_expirations_response"
                                },
                                "example": {
                                    "delegations": [
                                        {
                                            "delegator": "jacobtothe",
                                            "expiration": "2025-05-23T10:39:24",
                                            "id": 5952098,
                                            "vesting_shares": {
                                                "amount": "336289000182",
                                                "nai": "@@000000037",
                                                "precision": 6
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_vesting_delegations": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of vesting delegations.",
                "description": "Parameters:\n\n- `start`: An array with two values: `[delegator, delegatee]`.\n  - Example: `[\"\", \"\"]` — starts from the beginning for delegations between any delegator and delegatee.\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string with value `\"by_delegation\"`, indicating results are ordered by delegation.\n\nExample:\n\n- `start = [\"\", \"\"]`, `limit = 10`, `order = \"by_delegation\"` — queries delegations, limited to 10 results, ordered by delegation.\n",
                "operationId": "list_vesting_delegations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_vesting_delegations"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_vesting_delegations_response"
                                },
                                "example": {
                                    "delegations": [
                                        {
                                            "id": 554317,
                                            "delegator": "a-0-0-0",
                                            "delegatee": "a-0-0",
                                            "vesting_shares": {
                                                "amount": "6141067173",
                                                "precision": 6,
                                                "nai": "@@000000037"
                                            },
                                            "min_delegation_time": "2018-01-24T22:23:54"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_votes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns all votes, starting with the specified voter and/or author and permlink.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_comment_voter`: `start` can contain three optional values: `[author, permlink, voter]`. If one is blank, then all three must be blank.\n  - For `by_voter_comment`: `start` can contain three optional values: `[voter, author, permlink]`. If one is blank, then all three must be blank.\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string indicating the sorting method. Possible values:\n  - `by_comment_voter` — order by comment voter.\n  - `by_voter_comment` — order by voter comment.\n\nExamples:\n\n- `start = [\"\", \"\", \"\"]`, `limit = 10`, `order = \"by_comment_voter\"` — queries the first 10 votes, sorted by comment voter.\n\n- `start = [\"\", \"\", \"\"]`, `limit = 10`, `order = \"by_voter_comment\"` — queries the first 10 votes, sorted by voter comment.\n\n- `start = [\"xeroc\", \"vanteem-config\", \"\"]`, `limit = 10`, `order = \"by_comment_voter\"` — queries next 10 votes starting from the post @xeroc/vanteem-config, sorted by comment voter.\n\n- `start = [\"alice\", \"xeroc\", \"vanteem-config\"]`, `limit = 10`, `order = \"by_voter_comment\"` — queries next 10 votes starting at Alice on the post @xeroc/vanteem-config, sorted by voter comment.\n",
                "operationId": "list_votes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_votes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_votes_response"
                                },
                                "example": {
                                    "votes": [
                                        {
                                            "id": 9,
                                            "voter": "dantheman",
                                            "author": "hiveio",
                                            "permlink": "firstpost",
                                            "weight": "32866333630",
                                            "rshares": 375241,
                                            "vote_percent": 100,
                                            "last_update": "2016-04-07T19:15:36",
                                            "num_changes": -1
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_withdraw_vesting_routes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of vesting withdraw routes.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_withdraw_route`: `start` is an array of two values: `[from_account, to_account]`.\n  - For `by_destination`: `start` is an array of two values: `[to_account, route_id]`.\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_withdraw_route` — order by withdraw route.\n  - `by_destination` — order by destination.\n\nExamples:\n\n- `start = [\"temp\", \"\"]`, `limit = 10`, `order = \"by_withdraw_route\"` — queries the first 10 withdraw routes, sorted by withdraw route.\n\n- `start = [\"\", 0]`, `limit = 10`, `order = \"by_destination\"` — queries the first 10 routes, sorted by destination.\n",
                "operationId": "list_withdraw_vesting_routes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_withdraw_vesting_routes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_withdraw_vesting_routes_response"
                                },
                                "example": {
                                    "routes": [
                                        {
                                            "id": 39503,
                                            "from_account": "temperature",
                                            "to_account": "luckdiver",
                                            "percent": 10000,
                                            "auto_vest": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_witness_votes": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns a list of witness votes.",
                "description": "Parameters:\n\n- `start`: An array whose structure depends on the `order` parameter.\n  - For `by_account_witness`: `start` is an array of two values: `[account, witness]`.\n  - For `by_witness_account`: `start` is an array of two values: `[witness, account]`.\n\n- `limit`: An integer up to 1000, specifying the maximum number of results to return.\n\n- `order`: A string indicating the sorting criteria. Possible values:\n  - `by_account_witness` — order by account witness.\n  - `by_witness_account` — order by witness account.\n\nExamples:\n\n- `start = [\"\", \"\"]`, `limit = 10`, `order = \"by_account_witness\"` — queries first 10 votes, sorted by account witness.\n\n- `start = [\"\", \"\"]`, `limit = 10`, `order = \"by_witness_account\"` — queries first 10 votes, sorted by witness account.\n",
                "operationId": "list_witness_votes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_witness_votes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_witness_votes_response"
                                },
                                "example": {
                                    "votes": [
                                        {
                                            "id": 428961,
                                            "witness": "aggroed",
                                            "account": "a-0magic"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.list_witnesses": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns the list of witnesses.",
                "description": "Parameters:\n\n- `start`: An object whose structure depends on the `order` parameter.\n  - For `by_name`: `start` is an empty string or omitted.\n  - For `by_vote_name`: `start` is an array of two values: `[votes, account]`.\n  - For `by_schedule_time`: `start` is an array of two values: `[virtual_scheduled_time, account]`.\n\n- `limit`: An integer up to 1000, specifying the maximum number of witnesses to return.\n\n- `order`: A string indicating the sorting criterion. Possible values:\n  - `by_name` — order by account name.\n  - `by_vote_name` — order by vote count and name.\n  - `by_schedule_time` — order by schedule time.\n\nExamples:\n\n- `start = \"\"`, `limit = 10`, `order = \"by_name\"` — queries first 10 witnesses, sorted by account name.\n\n- `start = [0, \"\"]`, `limit = 10`, `order = \"by_vote_name\"` — queries first 10 witnesses, sorted by votes.\n\n- `start = [\"473718186844702107410533306\", \"alice\"]`, `limit = 10`, `order = \"by_schedule_time\"` — queries first 10 witnesses, sorted by schedule.\n",
                "operationId": "list_witnesses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/list_witnesses"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/list_witnesses_response"
                                },
                                "example": {
                                    "witnesses": [
                                        {
                                            "available_witness_account_subsidies": 0,
                                            "created": "2016-04-30T12:27:12",
                                            "hardfork_time_vote": "2016-03-24T16:00:00",
                                            "hardfork_version_vote": "0.0.0",
                                            "hbd_exchange_rate": {
                                                "base": {
                                                    "amount": "0",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "quote": {
                                                    "amount": "0",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                }
                                            },
                                            "id": 6950,
                                            "last_aslot": 1063323,
                                            "last_confirmed_block_num": 1040423,
                                            "last_hbd_exchange_update": "1970-01-01T00:00:00",
                                            "last_work": "000000127cb0e335667f30100bc1a061175c2d789f808e0e9ac82ee70fa8e604",
                                            "owner": "a-0",
                                            "pow_worker": 0,
                                            "props": {
                                                "account_creation_fee": {
                                                    "amount": "1",
                                                    "nai": "@@000000021",
                                                    "precision": 3
                                                },
                                                "account_subsidy_budget": 797,
                                                "account_subsidy_decay": 347321,
                                                "hbd_interest_rate": 1000,
                                                "maximum_block_size": 131072
                                            },
                                            "running_version": "0.0.0",
                                            "signing_key": "STM5RrTRNDhhrMaA24SzSeE5AvmUcutb1q1VZp1imnT8p871s3UjN",
                                            "total_missed": 0,
                                            "url": "",
                                            "virtual_last_update": "0",
                                            "virtual_position": "0",
                                            "virtual_scheduled_time": "340282366920938463463374607431768211455",
                                            "votes": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.verify_account_authority": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Returns true if the keys are valid for the specified account.",
                "operationId": "verify_account_authority",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/verify_account_authority"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verify_account_authority_response"
                                },
                                "example": {
                                    "valid": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.verify_authority": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "Verify transaction signatures.",
                "description": "Returns true if the transaction has all of the required signatures, otherwise throws an exception.\n",
                "operationId": "verify_authority",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/verify_authority"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verify_authority_response"
                                },
                                "example": {
                                    "valid": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "database_api.verify_signatures": {
            "post": {
                "tags": [
                    "database_api"
                ],
                "summary": "This method validates if transaction was signed by person listed in required_owner, required_active or required_posting parameter.",
                "description": "This method validates if transaction was signed by person listed in required_owner, required_active or required_posting parameter. \nHash is a mix of chain_id and transaction data.\n",
                "operationId": "verify_signatures",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/verify_signatures"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/verify_signatures_response"
                                },
                                "example": {
                                    "valid": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "network_broadcast_api.broadcast_transaction": {
            "post": {
                "tags": [
                    "network_broadcast_api"
                ],
                "summary": "Used to broadcast a transaction.",
                "description": "",
                "operationId": "broadcast_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/broadcast_transaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/broadcast_transaction_response"
                                },
                                "example": {}
                            }
                        }
                    }
                }
            }
        },
        "rc_api.find_rc_accounts": {
            "post": {
                "tags": [
                    "rc_api"
                ],
                "summary": "Returns the available resource credits of accounts.",
                "description": "Parameters:\n\n- `accounts`: An array of strings representing account names to query. Examples:\n  - `[\"hiveio\"]` — queries the available resource credits for the account named \"hiveio\".\n  - `[\"alice\",\"bob\"]` — queries the resource credits for the account named \"alice\" and \"bob\".\n",
                "operationId": "find_rc_accounts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/find_rc_accounts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/find_rc_accounts_response"
                                },
                                "example": {
                                    "rc_accounts": [
                                        {
                                            "account": "",
                                            "rc_manabar": {
                                                "current_mana": "0",
                                                "last_update_time": 0
                                            },
                                            "max_rc_creation_adjustment": {
                                                "amount": "0",
                                                "precision": 6,
                                                "nai": "@@000000037"
                                            },
                                            "max_rc": "0"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Account's identification number."
                    },
                    "name": {
                        "type": "string",
                        "description": "Account's name."
                    },
                    "owner": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Owner authority of the account."
                    },
                    "active": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Active authority of the account."
                    },
                    "posting": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Posting authority of the account."
                    },
                    "memo_key": {
                        "type": "string",
                        "description": "The public key used to encrypt the memo."
                    },
                    "json_metadata": {
                        "type": "string",
                        "description": "Parameter encompasses personalized profile information.  It is a JSON object that can contain any data."
                    },
                    "posting_json_metadata": {
                        "type": "string",
                        "description": "Parameter encompasses personalized profile information.  It is a JSON object that can contain any data."
                    },
                    "proxy": {
                        "type": "string",
                        "description": "An account to which the account has designated as its proxy.  The proxy can vote on behalf of the account."
                    },
                    "last_owner_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last owner update was performed. "
                    },
                    "last_account_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last account update was performed. "
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date of account creation. "
                    },
                    "mined": {
                        "type": "boolean",
                        "description": "Information whether made a prove of work.  It is true if the account was created by mining."
                    },
                    "recovery_account": {
                        "type": "string",
                        "description": "An account to which the account has designated as its recovery account.  The recovery account can help recover the account if it is lost."
                    },
                    "reset_account": {
                        "type": "string",
                        "description": "deprecated parameter"
                    },
                    "comment_count": {
                        "type": "integer",
                        "description": "The number of comments made by the account."
                    },
                    "lifetime_vote_count": {
                        "type": "integer",
                        "description": "The number of votes made by the account."
                    },
                    "can_vote": {
                        "type": "boolean",
                        "description": "Information whether the account can vote or not.  It is true if the account can vote."
                    },
                    "voting_manabar": {
                        "$ref": "#/components/schemas/voting_manabar",
                        "description": "The voting mana bar of the account.  It indicates the amount of voting power available to the account."
                    },
                    "downvote_manabar": {
                        "$ref": "#/components/schemas/voting_manabar",
                        "description": "The downvote mana bar of the account.  It indicates the amount of downvoting power available to the account."
                    },
                    "balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "savings_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The savings balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "hbd_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "hbd_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of seconds the HIVE backed dollar balance has been held."
                    },
                    "hbd_seconds_last_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the HIVE backed dollar seconds were last updated."
                    },
                    "hbd_last_interest_payment": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last interest payment was made on the HIVE backed dollar balance."
                    },
                    "savings_hbd_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The savings HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "savings_hbd_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of seconds the savings HIVE backed dollar balance has been held."
                    },
                    "savings_hbd_seconds_last_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the savings HIVE backed dollar seconds were last updated."
                    },
                    "savings_hbd_last_interest_payment": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last interest payment was made on the savings HIVE backed dollar balance"
                    },
                    "savings_withdraw_requests": {
                        "type": "integer",
                        "description": "The number of savings withdraw requests made by the account."
                    },
                    "reward_hbd_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The reward HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_hive_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The reward HIVE balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_vesting_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The reward vesting balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_vesting_hive": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The reward vesting HIVE balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "delegated_vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The delegated vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "received_vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The received vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "vesting_withdraw_rate": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The vesting withdraw rate of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "post_voting_power": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The post voting power of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "next_vesting_withdrawal": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the next vesting withdrawal."
                    },
                    "withdrawn": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The total vesting shares already withdrawn from active withdrawals."
                    },
                    "to_withdraw": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The remaining total vesting shares needed to complete withdrawals."
                    },
                    "withdraw_routes": {
                        "type": "integer",
                        "description": "The number of withdraw routes for the account."
                    },
                    "pending_transfers": {
                        "type": "integer",
                        "description": "The number of pending transfers for the account."
                    },
                    "pending_claimed_accounts": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of pending claimed accounts for the account."
                    },
                    "post_bandwidth": {
                        "type": "integer",
                        "description": "The post bandwidth of the account."
                    },
                    "post_count": {
                        "type": "integer",
                        "description": "The number of posts made by the account."
                    },
                    "last_post": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last post made by the account."
                    },
                    "last_root_post": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last root post made by the account."
                    },
                    "last_post_edit": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last post edit made by the account."
                    },
                    "last_vote_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last vote made by the account."
                    },
                    "last_account_recovery": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last account recovery made by the account."
                    },
                    "previous_owner_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the previous owner update made by the account."
                    },
                    "curation_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Total curation rewards accumulated by the account."
                    },
                    "delayed_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/delayed_votes"
                        },
                        "description": "Array of delayed votes."
                    },
                    "governance_vote_expiration_ts": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when governance votes expire."
                    },
                    "is_smt": {
                        "type": "boolean",
                        "description": "Indicates if the account is an SMT."
                    },
                    "open_recurrent_transfers": {
                        "type": "integer",
                        "description": "Number of open recurrent transfers."
                    },
                    "posting_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Total posting rewards accumulated by the account."
                    },
                    "proxied_vsf_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hive_int"
                        },
                        "description": "Proxy votes levels."
                    },
                    "witnesses_voted_for": {
                        "type": "integer",
                        "description": "Number of witnesses voted for by the account."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "owner",
                    "active",
                    "posting",
                    "memo_key",
                    "json_metadata",
                    "posting_json_metadata",
                    "proxy",
                    "last_owner_update",
                    "last_account_update",
                    "created",
                    "mined",
                    "recovery_account",
                    "reset_account",
                    "comment_count",
                    "lifetime_vote_count",
                    "can_vote",
                    "voting_manabar",
                    "downvote_manabar",
                    "balance",
                    "savings_balance",
                    "hbd_balance",
                    "hbd_seconds",
                    "hbd_seconds_last_update",
                    "hbd_last_interest_payment",
                    "savings_hbd_balance",
                    "savings_hbd_seconds",
                    "savings_hbd_seconds_last_update",
                    "savings_hbd_last_interest_payment",
                    "savings_withdraw_requests",
                    "reward_hbd_balance",
                    "reward_hive_balance",
                    "reward_vesting_balance",
                    "reward_vesting_hive",
                    "vesting_shares",
                    "delegated_vesting_shares",
                    "received_vesting_shares",
                    "vesting_withdraw_rate",
                    "post_voting_power",
                    "next_vesting_withdrawal",
                    "withdrawn",
                    "to_withdraw",
                    "withdraw_routes",
                    "pending_transfers",
                    "pending_claimed_accounts",
                    "post_bandwidth",
                    "post_count",
                    "last_post",
                    "last_root_post",
                    "last_post_edit",
                    "last_vote_time",
                    "last_account_recovery",
                    "previous_owner_update",
                    "curation_rewards",
                    "delayed_votes",
                    "governance_vote_expiration_ts",
                    "is_smt",
                    "open_recurrent_transfers",
                    "posting_rewards",
                    "proxied_vsf_votes",
                    "witnesses_voted_for"
                ]
            },
            "account_condenser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Account's identification number."
                    },
                    "name": {
                        "type": "string",
                        "description": "Account's name."
                    },
                    "owner": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Owner authority of the account."
                    },
                    "active": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Active authority of the account."
                    },
                    "posting": {
                        "$ref": "#/components/schemas/auths",
                        "description": "Posting authority of the account."
                    },
                    "memo_key": {
                        "type": "string",
                        "description": "The public key used to encrypt the memo."
                    },
                    "json_metadata": {
                        "type": "string",
                        "description": "Parameter encompasses personalized profile information.  It is a JSON object that can contain any data."
                    },
                    "posting_json_metadata": {
                        "type": "string",
                        "description": "Parameter encompasses personalized profile information.  It is a JSON object that can contain any data."
                    },
                    "proxy": {
                        "type": "string",
                        "description": "An account to which the account has designated as its proxy.  The proxy can vote on behalf of the account."
                    },
                    "last_owner_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last owner update was performed. "
                    },
                    "last_account_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last account update was performed. "
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date of account creation. "
                    },
                    "mined": {
                        "type": "boolean",
                        "description": "Information whether made a prove of work.  It is true if the account was created by mining."
                    },
                    "recovery_account": {
                        "type": "string",
                        "description": "An account to which the account has designated as its recovery account.  The recovery account can help recover the account if it is lost."
                    },
                    "reset_account": {
                        "type": "string",
                        "description": "deprecated parameter"
                    },
                    "comment_count": {
                        "type": "integer",
                        "description": "The number of comments made by the account."
                    },
                    "lifetime_vote_count": {
                        "type": "integer",
                        "description": "The number of votes made by the account."
                    },
                    "can_vote": {
                        "type": "boolean",
                        "description": "Information whether the account can vote or not.  It is true if the account can vote."
                    },
                    "voting_manabar": {
                        "$ref": "#/components/schemas/voting_manabar",
                        "description": "The voting mana bar of the account.  It indicates the amount of voting power available to the account."
                    },
                    "downvote_manabar": {
                        "$ref": "#/components/schemas/voting_manabar",
                        "description": "The downvote mana bar of the account.  It indicates the amount of downvoting power available to the account."
                    },
                    "balance": {
                        "type": "string",
                        "description": "The balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "savings_balance": {
                        "type": "string",
                        "description": "The savings balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "hbd_balance": {
                        "type": "string",
                        "description": "The HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "hbd_seconds": {
                        "type": "string",
                        "description": "The number of seconds the HIVE backed dollar balance has been held."
                    },
                    "hbd_seconds_last_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the HIVE backed dollar seconds were last updated."
                    },
                    "hbd_last_interest_payment": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last interest payment was made on the HIVE backed dollar balance."
                    },
                    "savings_hbd_balance": {
                        "type": "string",
                        "description": "The savings HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "savings_hbd_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of seconds the savings HIVE backed dollar balance has been held."
                    },
                    "savings_hbd_seconds_last_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the savings HIVE backed dollar seconds were last updated."
                    },
                    "savings_hbd_last_interest_payment": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last interest payment was made on the savings HIVE backed dollar balance"
                    },
                    "savings_withdraw_requests": {
                        "type": "integer",
                        "description": "The number of savings withdraw requests made by the account."
                    },
                    "reward_hbd_balance": {
                        "type": "string",
                        "description": "The reward HIVE backed dollar balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_hive_balance": {
                        "type": "string",
                        "description": "The reward HIVE balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_vesting_balance": {
                        "type": "string",
                        "description": "The reward vesting balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "reward_vesting_hive": {
                        "type": "string",
                        "description": "The reward vesting HIVE balance of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "vesting_shares": {
                        "type": "string",
                        "description": "The vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "delegated_vesting_shares": {
                        "type": "string",
                        "description": "The delegated vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "received_vesting_shares": {
                        "type": "string",
                        "description": "The received vesting shares of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "vesting_withdraw_rate": {
                        "type": "string",
                        "description": "The vesting withdraw rate of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "post_voting_power": {
                        "type": "string",
                        "description": "The post voting power of the account.  It is represented as an object with amount, nai, and precision."
                    },
                    "next_vesting_withdrawal": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the next vesting withdrawal."
                    },
                    "withdrawn": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The total vesting shares already withdrawn from active withdrawals."
                    },
                    "to_withdraw": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The remaining total vesting shares needed to complete withdrawals."
                    },
                    "withdraw_routes": {
                        "type": "integer",
                        "description": "The number of withdraw routes for the account."
                    },
                    "pending_transfers": {
                        "type": "integer",
                        "description": "The number of pending transfers for the account."
                    },
                    "pending_claimed_accounts": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of pending claimed accounts for the account."
                    },
                    "post_bandwidth": {
                        "type": "integer",
                        "description": "The post bandwidth of the account."
                    },
                    "post_count": {
                        "type": "integer",
                        "description": "The number of posts made by the account."
                    },
                    "last_post": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last post made by the account."
                    },
                    "last_root_post": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last root post made by the account."
                    },
                    "last_post_edit": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last post edit made by the account."
                    },
                    "last_vote_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last vote made by the account."
                    },
                    "last_account_recovery": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the last account recovery made by the account."
                    },
                    "previous_owner_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the previous owner update made by the account."
                    },
                    "curation_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Total curation rewards accumulated by the account."
                    },
                    "delayed_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/delayed_votes"
                        },
                        "description": "Array of delayed votes."
                    },
                    "governance_vote_expiration_ts": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when governance votes expire."
                    },
                    "is_smt": {
                        "type": "boolean",
                        "description": "Indicates if the account is an SMT."
                    },
                    "open_recurrent_transfers": {
                        "type": "integer",
                        "description": "Number of open recurrent transfers."
                    },
                    "posting_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Total posting rewards accumulated by the account."
                    },
                    "proxied_vsf_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hive_int"
                        },
                        "description": "Proxy votes levels."
                    },
                    "witnesses_voted_for": {
                        "type": "integer",
                        "description": "Number of witnesses voted for by the account."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "owner",
                    "active",
                    "posting",
                    "memo_key",
                    "json_metadata",
                    "posting_json_metadata",
                    "proxy",
                    "last_owner_update",
                    "last_account_update",
                    "created",
                    "mined",
                    "recovery_account",
                    "reset_account",
                    "comment_count",
                    "lifetime_vote_count",
                    "can_vote",
                    "voting_manabar",
                    "downvote_manabar",
                    "balance",
                    "savings_balance",
                    "hbd_balance",
                    "hbd_seconds",
                    "hbd_seconds_last_update",
                    "hbd_last_interest_payment",
                    "savings_hbd_balance",
                    "savings_hbd_seconds",
                    "savings_hbd_seconds_last_update",
                    "savings_hbd_last_interest_payment",
                    "savings_withdraw_requests",
                    "reward_hbd_balance",
                    "reward_hive_balance",
                    "reward_vesting_balance",
                    "reward_vesting_hive",
                    "vesting_shares",
                    "delegated_vesting_shares",
                    "received_vesting_shares",
                    "vesting_withdraw_rate",
                    "post_voting_power",
                    "next_vesting_withdrawal",
                    "withdrawn",
                    "to_withdraw",
                    "withdraw_routes",
                    "pending_transfers",
                    "pending_claimed_accounts",
                    "post_bandwidth",
                    "post_count",
                    "last_post",
                    "last_root_post",
                    "last_post_edit",
                    "last_vote_time",
                    "last_account_recovery",
                    "previous_owner_update",
                    "curation_rewards",
                    "delayed_votes",
                    "governance_vote_expiration_ts",
                    "is_smt",
                    "open_recurrent_transfers",
                    "posting_rewards",
                    "proxied_vsf_votes",
                    "witnesses_voted_for"
                ]
            },
            "account_history_array": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "$ref": "#/components/schemas/operation_object"
                        }
                    ]
                },
                "minItems": 2,
                "maxItems": 2
            },
            "account_history_array_condenser": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "$ref": "#/components/schemas/operation_object_condenser"
                        }
                    ]
                },
                "minItems": 2,
                "maxItems": 2
            },
            "account_notifications": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account to which the notification is sent."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "The maximum number of notifications to return."
                    }
                },
                "required": [
                    "account",
                    "limit"
                ]
            },
            "account_notifications_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/notification_object"
                }
            },
            "account_recovery": {
                "type": "object",
                "properties": {
                    "account_to_recover": {
                        "type": "string",
                        "example": "tulpa",
                        "description": "The name of the account to recover."
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-11-05T13:48:39",
                        "description": "The expiration time of the recovery request."
                    },
                    "id": {
                        "type": "integer",
                        "example": 9,
                        "description": "The ID of the recovery request."
                    },
                    "new_owner_authority": {
                        "$ref": "#/components/schemas/auths",
                        "description": "New owner authority of the account."
                    }
                },
                "required": [
                    "account_to_recover",
                    "expires",
                    "id",
                    "new_owner_authority"
                ]
            },
            "account_reputation": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio"
                    },
                    "reputation": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0
                    }
                },
                "required": [
                    "account",
                    "reputation"
                ]
            },
            "account_subsidy_rd": {
                "type": "object",
                "properties": {
                    "budget_per_time_unit": {
                        "type": "integer",
                        "example": 797
                    },
                    "decay_params": {
                        "type": "object",
                        "properties": {
                            "decay_per_time_unit": {
                                "type": "integer",
                                "example": 347321
                            },
                            "decay_per_time_unit_denom_shift": {
                                "type": "integer",
                                "example": 36
                            }
                        }
                    },
                    "max_pool_size": {
                        "type": "integer",
                        "example": 157691079
                    },
                    "min_decay": {
                        "type": "integer",
                        "example": 0
                    },
                    "pool_eq": {
                        "type": "integer",
                        "example": 157691079
                    },
                    "resource_unit": {
                        "type": "integer",
                        "example": 10000
                    }
                },
                "required": [
                    "budget_per_time_unit",
                    "decay_params",
                    "max_pool_size",
                    "min_decay",
                    "pool_eq",
                    "resource_unit"
                ]
            },
            "active_votes_object": {
                "type": "object",
                "properties": {
                    "rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of rshares associated with the vote."
                    },
                    "voter": {
                        "type": "string",
                        "description": "The name of the voter."
                    }
                },
                "required": [
                    "rshares",
                    "voter"
                ]
            },
            "active_votes_condenser": {
                "type": "object",
                "properties": {
                    "rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of rshares associated with the vote."
                    },
                    "voter": {
                        "type": "string",
                        "description": "The name of the voter."
                    },
                    "percent": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The percentage of the vote."
                    },
                    "reputation": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The reputation of the voter."
                    }
                },
                "required": [
                    "rshares",
                    "voter",
                    "percent",
                    "reputation"
                ]
            },
            "active_vote_condenser": {
                "type": "object",
                "properties": {
                    "percent": {
                        "type": "integer",
                        "description": "The percentage of the vote."
                    },
                    "reputation": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The reputation of the voter."
                    },
                    "rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of rshares associated with the vote."
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the vote was cast."
                    },
                    "voter": {
                        "type": "string",
                        "description": "The name of the voter."
                    },
                    "weight": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The weight of the vote."
                    }
                },
                "required": [
                    "percent",
                    "reputation",
                    "rshares",
                    "time",
                    "voter",
                    "weight"
                ]
            },
            "array_of_operations": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/operation_body"
                }
            },
            "auths": {
                "type": "object",
                "properties": {
                    "weight_threshold": {
                        "type": "integer"
                    },
                    "account_auths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/auth_with_weight"
                        }
                    },
                    "key_auths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/auth_with_weight"
                        }
                    }
                },
                "required": [
                    "weight_threshold",
                    "account_auths",
                    "key_auths"
                ]
            },
            "auth_with_weight": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "minItems": 2,
                "maxItems": 2
            },
            "balance": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "nai": {
                        "type": "string"
                    },
                    "precision": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "nai",
                    "precision"
                ]
            },
            "base_and_quote": {
                "type": "object",
                "properties": {
                    "base": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The base asset of the price."
                    },
                    "quote": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The quote asset of the price."
                    }
                },
                "required": [
                    "base",
                    "quote"
                ]
            },
            "beneficiaries": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "type": "string"
                        },
                        "weight": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "account",
                        "weight"
                    ]
                }
            },
            "bids_and_asks": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T11:17:24",
                        "description": "The date when the order was created."
                    },
                    "hbd": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 26344,
                        "description": "The amount of HBD in the order."
                    },
                    "hive": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 97538,
                        "description": "The amount of HIVE in the order."
                    },
                    "order_price": {
                        "$ref": "#/components/schemas/base_and_quote"
                    },
                    "real_price": {
                        "type": "string",
                        "example": "0.00000000000000000"
                    }
                },
                "required": [
                    "created",
                    "hbd",
                    "hive",
                    "order_price",
                    "real_price"
                ]
            },
            "block": {
                "type": "object",
                "properties": {
                    "previous": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "The previous block ID."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-03-24T16:05:00",
                        "description": "The timestamp of the block."
                    },
                    "witness": {
                        "type": "string",
                        "example": "",
                        "description": "The witness who produced the block."
                    },
                    "transaction_merkle_root": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "Single hash representing the combined hashes of all transactions in a block."
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/extensions",
                        "example": []
                    },
                    "witness_signature": {
                        "type": "string",
                        "example": "",
                        "description": "The signature of the witness who produced the block."
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/operation_body"
                        },
                        "example": [],
                        "description": "An array of transactions included in the block."
                    },
                    "block_id": {
                        "type": "string",
                        "example": "",
                        "description": "The ID of the block."
                    },
                    "signing_key": {
                        "type": "string",
                        "example": "",
                        "description": "The key used to sign the block."
                    },
                    "transaction_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of transaction IDs included in the block."
                    }
                },
                "required": [
                    "previous",
                    "timestamp",
                    "witness",
                    "transaction_merkle_root",
                    "extensions",
                    "witness_signature",
                    "transactions",
                    "block_id",
                    "signing_key",
                    "transaction_ids"
                ]
            },
            "block_condenser": {
                "type": "object",
                "properties": {
                    "previous": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "The previous block ID."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-03-24T16:05:00",
                        "description": "The timestamp of the block."
                    },
                    "witness": {
                        "type": "string",
                        "example": "",
                        "description": "The witness who produced the block."
                    },
                    "transaction_merkle_root": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "Single hash representing the combined hashes of all transactions in a block."
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/extensions",
                        "example": []
                    },
                    "witness_signature": {
                        "type": "string",
                        "example": "",
                        "description": "The signature of the witness who produced the block."
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/operation_body_condenser"
                        },
                        "example": [],
                        "description": "An array of transactions included in the block."
                    },
                    "block_id": {
                        "type": "string",
                        "example": "",
                        "description": "The ID of the block."
                    },
                    "signing_key": {
                        "type": "string",
                        "example": "",
                        "description": "The key used to sign the block."
                    },
                    "transaction_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of transaction IDs included in the block."
                    }
                },
                "required": [
                    "previous",
                    "timestamp",
                    "witness",
                    "transaction_merkle_root",
                    "extensions",
                    "witness_signature",
                    "transactions",
                    "block_id",
                    "signing_key",
                    "transaction_ids"
                ]
            },
            "block_header": {
                "type": "object",
                "properties": {
                    "previous": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "The previous block ID."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-03-24T16:05:00",
                        "description": "The timestamp of the block."
                    },
                    "witness": {
                        "type": "string",
                        "example": "",
                        "description": "The witness who produced the block."
                    },
                    "transaction_merkle_root": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000",
                        "description": "Single hash representing the combined hashes of all transactions in a block."
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/extensions",
                        "example": []
                    }
                },
                "required": [
                    "previous",
                    "timestamp",
                    "witness",
                    "transaction_merkle_root",
                    "extensions"
                ]
            },
            "blog_condenser": {
                "type": "object",
                "properties": {
                    "blog": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "Account name of an author"
                    },
                    "comment": {
                        "$ref": "#/components/schemas/post_condenser",
                        "description": "Comment object"
                    },
                    "entry_id": {
                        "type": "integer",
                        "example": 74,
                        "description": "The ID of the entry"
                    },
                    "reblogged_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01T00:00:00",
                        "description": "The date and time when the entry was reblogged"
                    }
                },
                "required": [
                    "blog",
                    "comment",
                    "entry_id",
                    "reblogged_on"
                ]
            },
            "blog_entries_object": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio"
                    },
                    "permlink": {
                        "type": "string",
                        "example": "permlink-12345"
                    },
                    "blog": {
                        "type": "string",
                        "example": "hiveio"
                    },
                    "reblog_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01T00:00:00",
                        "description": "The date and time when the entry was reblogged"
                    },
                    "entry_id": {
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "author",
                    "permlink",
                    "entry_id",
                    "reblog_on",
                    "blog"
                ]
            },
            "broadcast_transaction": {
                "type": "object",
                "properties": {
                    "trx": {
                        "$ref": "#/components/schemas/transaction"
                    },
                    "max_block_age": {
                        "type": "integer",
                        "example": -1
                    }
                },
                "required": [
                    "trx",
                    "max_block_age"
                ]
            },
            "broadcast_transaction_response": {
                "type": "object"
            },
            "cashout_info": {
                "type": "object",
                "properties": {
                    "total_vote_weight": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 22841196
                    },
                    "total_payout_value": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "curator_payout_value": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "max_accepted_payout": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "author_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0
                    },
                    "children_abs_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "606511906476641"
                    },
                    "net_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "571577939879762"
                    },
                    "abs_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "594467432989642"
                    },
                    "vote_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "583007369825359"
                    },
                    "net_votes": {
                        "type": "integer",
                        "example": 378
                    },
                    "active": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-04-06T15:29:03"
                    },
                    "last_payout": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01T00:00:00"
                    },
                    "cashout_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-04-12T02:07:00"
                    },
                    "max_cashout_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1969-12-31T23:59:59"
                    },
                    "percent_hbd": {
                        "type": "integer",
                        "example": 10000
                    },
                    "reward_weight": {
                        "type": "integer",
                        "example": 10000
                    },
                    "allow_replies": {
                        "type": "boolean",
                        "example": false
                    },
                    "allow_votes": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_curation_rewards": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "total_vote_weight",
                    "total_payout_value",
                    "curator_payout_value",
                    "max_accepted_payout",
                    "author_rewards",
                    "children_abs_rshares",
                    "net_rshares",
                    "abs_rshares",
                    "vote_rshares",
                    "net_votes",
                    "active",
                    "last_payout",
                    "cashout_time",
                    "max_cashout_time",
                    "percent_hbd",
                    "reward_weight",
                    "allow_replies",
                    "allow_votes",
                    "allow_curation_rewards"
                ]
            },
            "comment": {
                "type": "object",
                "properties": {
                    "abs_rshares": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "allow_curation_rewards": {
                        "type": "boolean"
                    },
                    "allow_replies": {
                        "type": "boolean"
                    },
                    "allow_votes": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "author_rewards": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "beneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/beneficiaries"
                        }
                    },
                    "body": {
                        "type": "string"
                    },
                    "cashout_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "category": {
                        "type": "string"
                    },
                    "children": {
                        "type": "integer"
                    },
                    "children_abs_rshares": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "curator_payout_value": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "depth": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "json_metadata": {
                        "type": "object"
                    },
                    "last_payout": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "max_accepted_payout": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "max_cashout_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "net_rshares": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "net_votes": {
                        "type": "integer"
                    },
                    "parent_author": {
                        "type": "string"
                    },
                    "parent_permlink": {
                        "type": "string"
                    },
                    "percent_hbd": {
                        "type": "integer"
                    },
                    "permlink": {
                        "type": "string"
                    },
                    "reward_weight": {
                        "type": "integer"
                    },
                    "root_author": {
                        "type": "string"
                    },
                    "root_permlink": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "total_payout_value": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "total_vote_weight": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "vote_rshares": {
                        "$ref": "#/components/schemas/hive_int"
                    }
                },
                "required": [
                    "abs_rshares",
                    "allow_curation_rewards",
                    "allow_replies",
                    "allow_votes",
                    "author",
                    "author_rewards",
                    "beneficiaries",
                    "body",
                    "cashout_time",
                    "category",
                    "children",
                    "children_abs_rshares",
                    "created",
                    "curator_payout_value",
                    "depth",
                    "id",
                    "json_metadata",
                    "last_payout",
                    "last_update",
                    "max_accepted_payout",
                    "max_cashout_time",
                    "net_rshares",
                    "net_votes",
                    "parent_author",
                    "parent_permlink",
                    "percent_hbd",
                    "permlink",
                    "reward_weight",
                    "root_author",
                    "root_permlink",
                    "title",
                    "total_payout_value",
                    "total_vote_weight",
                    "vote_rshares"
                ]
            },
            "comment_pending_payout": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "comment_pending_payout_type": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hbd.funder"
                    },
                    "permlink": {
                        "type": "string",
                        "example": "upvote-this-post-to-fund-hbdstabilizer-qr2j7n"
                    },
                    "cashout_info": {
                        "$ref": "#/components/schemas/cashout_info"
                    }
                },
                "required": [
                    "author",
                    "permlink"
                ]
            },
            "community_object": {
                "type": "object",
                "properties": {
                    "about": {
                        "type": "string",
                        "example": "HIVE Version of /r/wallstreetbets"
                    },
                    "admins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/avatar.jpg"
                    },
                    "context": {
                        "$ref": "#/components/schemas/context_object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-27T22:30:54Z"
                    },
                    "id": {
                        "type": "integer",
                        "example": 1432837
                    },
                    "is_nsfw": {
                        "type": "boolean",
                        "example": false
                    },
                    "lang": {
                        "type": "string",
                        "example": "en"
                    },
                    "name": {
                        "type": "string",
                        "example": "hive-108729"
                    },
                    "num_authors": {
                        "type": "integer",
                        "example": 0
                    },
                    "num_pending": {
                        "type": "integer",
                        "example": 0
                    },
                    "subscribers": {
                        "type": "integer",
                        "example": 42
                    },
                    "sum_pending": {
                        "type": "integer",
                        "example": 0
                    },
                    "title": {
                        "type": "string",
                        "example": "Wall Street Bets"
                    },
                    "type_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "condenser_broadcast_transaction": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/transaction"
                }
            },
            "condenser_broadcast_transaction_response": {
                "type": "object"
            },
            "condenser_broadcast_transaction_synchronous": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/transaction"
                }
            },
            "condenser_broadcast_transaction_synchronous_response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000"
                    },
                    "block_num": {
                        "type": "integer",
                        "example": 0
                    },
                    "trx_num": {
                        "type": "integer",
                        "example": 0
                    },
                    "expired": {
                        "type": "boolean",
                        "example": false
                    },
                    "rc_cost": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The resource credit cost of the transaction."
                    }
                },
                "required": [
                    "id",
                    "block_num",
                    "trx_num",
                    "expired"
                ]
            },
            "condenser_find_proposals": {
                "type": "array",
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "condenser_find_proposals_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/proposals_condenser"
                }
            },
            "condenser_find_rc_accounts": {
                "type": "array",
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "alice"
                    }
                }
            },
            "condenser_find_rc_accounts_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/rc_account_object_condenser"
                }
            },
            "condenser_find_recurrent_transfers": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "alice"
                }
            },
            "condenser_find_recurrent_transfers_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/recurrent_transfer_condenser"
                }
            },
            "condenser_get_account_count": {
                "type": "array",
                "example": []
            },
            "condenser_get_account_count_response": {
                "type": "integer",
                "example": 123456
            },
            "condenser_get_account_history": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "minItems": 3,
                "maxItems": 5,
                "example": [
                    "hiveio",
                    -1,
                    1000,
                    0,
                    1
                ]
            },
            "condenser_get_account_history_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/account_history_array_condenser"
                }
            },
            "condenser_get_account_reputations": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "minItems": 0,
                "maxItems": 2,
                "example": [
                    "hiveio",
                    10
                ]
            },
            "condenser_get_account_reputations_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/account_reputation"
                }
            },
            "condenser_get_accounts": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "alice"
                }
            },
            "condenser_get_accounts_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/account_condenser"
                }
            },
            "condenser_get_active_votes": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 2,
                "maxItems": 2,
                "example": [
                    "hiveio",
                    "around-the-hive-reflections"
                ]
            },
            "condenser_get_active_votes_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/active_vote_condenser"
                }
            },
            "condenser_get_active_witnesses": {
                "type": "array",
                "example": []
            },
            "condenser_get_active_witnesses_response": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "condenser_get_block": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "example": 1
                }
            },
            "condenser_get_block_response": {
                "$ref": "#/components/schemas/block_condenser"
            },
            "condenser_get_block_header": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "example": 1
                }
            },
            "condenser_get_block_header_response": {
                "$ref": "#/components/schemas/block_header"
            },
            "condenser_get_blog": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "minItems": 3,
                "maxItems": 3,
                "example": [
                    "hiveio",
                    0,
                    50
                ]
            },
            "condenser_get_blog_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/blog_condenser"
                }
            },
            "condenser_get_blog_entries": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ]
                },
                "minItems": 3,
                "maxItems": 3,
                "example": [
                    "hiveio",
                    0,
                    50
                ]
            },
            "condenser_get_blog_entries_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/blog_entries_object"
                }
            },
            "condenser_get_chain_properties": {
                "type": "array",
                "example": []
            },
            "condenser_get_chain_properties_response": {
                "type": "object",
                "properties": {
                    "account_creation_fee": {
                        "type": "string",
                        "example": "0.100 HIVE"
                    },
                    "maximum_block_size": {
                        "type": "integer",
                        "example": 131072
                    },
                    "hbd_interest_rate": {
                        "type": "integer",
                        "example": 1000
                    },
                    "account_subsidy_budget": {
                        "type": "integer",
                        "example": 0
                    },
                    "account_subsidy_decay": {
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "account_creation_fee",
                    "maximum_block_size",
                    "hbd_interest_rate",
                    "account_subsidy_budget",
                    "account_subsidy_decay"
                ]
            },
            "condenser_get_collateralized_conversion_requests": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "alice"
                }
            },
            "condenser_get_collateralized_conversion_requests_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/collateralized_conversion_requests_condenser"
                }
            },
            "context_object": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "example": "owner",
                        "description": "The role of the account in the context of the post."
                    },
                    "subscribed": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether the account is subscribed to the post."
                    },
                    "title": {
                        "type": "string",
                        "example": "Test Post",
                        "description": "The title of the post to get context for."
                    }
                }
            },
            "decline_voting_rights": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account to decline voting rights."
                    },
                    "effective_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-12-04T13:34:45",
                        "description": "The date when the voting rights will be declined."
                    },
                    "id": {
                        "type": "integer",
                        "example": 11,
                        "description": "The ID of the request."
                    }
                },
                "required": [
                    "account",
                    "effective_date",
                    "id"
                ]
            },
            "delayed_votes": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-02-24T05:08:21",
                        "description": "The time when the vote was delayed."
                    },
                    "val": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "11550765516955",
                        "description": "The value of the delayed vote, represented as a string."
                    }
                },
                "required": [
                    "time",
                    "val"
                ]
            },
            "does_user_follow_any_lists": {
                "type": "object",
                "properties": {
                    "observer": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the observer."
                    }
                },
                "required": [
                    "observer"
                ]
            },
            "does_user_follow_any_lists_response": {
                "type": "boolean",
                "description": "Indicates whether the user follows any lists."
            },
            "enum_virtual_ops": {
                "type": "object",
                "properties": {
                    "block_range_begin": {
                        "type": "integer",
                        "example": 1,
                        "description": "The first block number to include."
                    },
                    "block_range_end": {
                        "type": "integer",
                        "example": 2,
                        "description": "The last block number to include."
                    },
                    "include_reversible": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether to include reversible blocks."
                    },
                    "group_by_block": {
                        "type": "boolean",
                        "example": false,
                        "description": "Whether to group operations by block."
                    },
                    "operation_begin": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0,
                        "description": "The operation id to start from."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "The maximum number of records to return."
                    },
                    "filter": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 1,
                        "description": "The filter to apply to the operations."
                    }
                },
                "required": [
                    "block_range_begin",
                    "block_range_end"
                ]
            },
            "enum_virtual_ops_response": {
                "type": "object",
                "properties": {
                    "next_block_range_begin": {
                        "type": "integer",
                        "example": 90000000,
                        "description": "The next block range starting block."
                    },
                    "next_operation_begin": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The next operation id to query."
                    },
                    "ops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/operation_object"
                        }
                    },
                    "ops_by_block": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ops_by_block_object"
                        }
                    }
                },
                "required": [
                    "next_block_range_begin",
                    "next_operation_begin",
                    "ops",
                    "ops_by_block"
                ]
            },
            "escrow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 143,
                        "description": "The ID of the escrow."
                    },
                    "escrow_id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "from": {
                        "type": "string",
                        "example": "temp",
                        "description": "The account that created the escrow."
                    },
                    "to": {
                        "type": "string",
                        "example": "guest123",
                        "description": "The account that will receive the escrow."
                    },
                    "agent": {
                        "type": "string",
                        "example": "smitop",
                        "description": "The account that will act as the agent for the escrow."
                    },
                    "ratification_deadline": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2038-01-19T03:14:06",
                        "description": "The deadline for the ratification of the escrow."
                    },
                    "escrow_expiration": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2038-01-19T03:14:07",
                        "description": "The expiration time of the escrow."
                    },
                    "hbd_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The HBD balance of the escrow."
                    },
                    "hive_balance": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The HIVE balance of the escrow."
                    },
                    "pending_fee": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The pending fee of the escrow."
                    },
                    "to_approved": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates if the recipient has approved the escrow."
                    },
                    "agent_approved": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates if the agent has approved the escrow."
                    },
                    "disputed": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates if the escrow is disputed."
                    }
                },
                "required": [
                    "id",
                    "escrow_id",
                    "from",
                    "to",
                    "agent",
                    "ratification_deadline",
                    "escrow_expiration",
                    "hbd_balance",
                    "hive_balance",
                    "pending_fee",
                    "to_approved",
                    "agent_approved",
                    "disputed"
                ]
            },
            "extensions": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "type",
                        "value"
                    ]
                }
            },
            "find_accounts": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "hiveio"
                        ]
                    },
                    "delayed_votes_active": {
                        "type": "boolean",
                        "example": true,
                        "description": "Optional."
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "find_accounts_response": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/account"
                        }
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "find_account_recovery": {
                "type": "object",
                "properties": {
                    "account_to_recover": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to recover."
                    },
                    "effective_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-11-05T13:48:39",
                        "description": "Date when the recovery will be effective."
                    },
                    "id": {
                        "type": "integer",
                        "example": 9,
                        "description": "The ID of the recovery request."
                    },
                    "recovery_account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account that will be used to recover the account."
                    }
                },
                "required": [
                    "account_to_recover",
                    "effective_on",
                    "id",
                    "recovery_account"
                ]
            },
            "find_account_recovery_requests": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "hiveio"
                        ]
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "find_account_recovery_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/account_recovery"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "find_change_recovery_account_requests": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "hiveio"
                        ]
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "find_change_recovery_account_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/find_account_recovery"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "collateralized_conversion_requests": {
                "type": "object",
                "properties": {
                    "collateral_amount": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "conversion_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T03:29:51",
                        "description": "The date when the conversion will take place."
                    },
                    "converted_amount": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "id": {
                        "type": "integer",
                        "example": 40790
                    },
                    "owner": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that owns the request."
                    },
                    "requestid": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the request."
                    }
                },
                "required": [
                    "collateral_amount",
                    "conversion_date",
                    "converted_amount",
                    "id",
                    "owner",
                    "requestid"
                ]
            },
            "collateralized_conversion_requests_condenser": {
                "type": "object",
                "properties": {
                    "collateral_amount": {
                        "type": "string",
                        "example": "100.000 HIVE",
                        "description": "The amount of collateral provided for the conversion."
                    },
                    "conversion_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T03:29:51",
                        "description": "The date when the conversion will take place."
                    },
                    "converted_amount": {
                        "type": "string",
                        "example": "100.000 HIVE",
                        "description": "The amount of HIVE that will be converted."
                    },
                    "id": {
                        "type": "integer",
                        "example": 40790
                    },
                    "owner": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that owns the request."
                    },
                    "requestid": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the request."
                    }
                },
                "required": [
                    "collateral_amount",
                    "conversion_date",
                    "converted_amount",
                    "id",
                    "owner",
                    "requestid"
                ]
            },
            "find_collateralized_conversion_requests": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_collateralized_conversion_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/collateralized_conversion_requests"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "find_comments": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "author",
                                "permlink"
                            ],
                            "description": "An array of strings representing the author and permlink of the comment to query.",
                            "minItems": 2,
                            "maxItems": 2
                        }
                    }
                }
            },
            "find_comments_response": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comment"
                        }
                    }
                },
                "required": [
                    "comments"
                ]
            },
            "find_decline_voting_rights_requests": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "hiveio"
                        ]
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "find_decline_voting_rights_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline_voting_rights"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "find_escrows": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "from"
                ]
            },
            "find_escrows_response": {
                "type": "object",
                "properties": {
                    "escrows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/escrow"
                        }
                    }
                },
                "required": [
                    "escrows"
                ]
            },
            "find_hbd_conversion_requests": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_hbd_conversion_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hbd_conversion"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "find_limit_orders": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_limit_orders_response": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/orders"
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            },
            "find_owner_histories": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "owner"
                ]
            },
            "find_owner_histories_response": {
                "type": "object",
                "properties": {
                    "owner_auths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/owner_auth_history"
                        }
                    }
                },
                "required": [
                    "owner_auths"
                ]
            },
            "find_proposals": {
                "type": "object",
                "properties": {
                    "proposal_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hive_int"
                        },
                        "example": [
                            0
                        ],
                        "description": "An array of int representing id of proposals."
                    }
                },
                "required": [
                    "proposal_ids"
                ]
            },
            "find_proposals_response": {
                "type": "object",
                "properties": {
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/proposals"
                        }
                    }
                },
                "required": [
                    "proposals"
                ]
            },
            "find_rc_accounts": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "hiveio"
                        ],
                        "description": "An array of strings representing accounts to query. "
                    }
                },
                "required": [
                    "keys"
                ]
            },
            "find_rc_accounts_response": {
                "type": "object",
                "properties": {
                    "rc_accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rc_account_object"
                        }
                    }
                },
                "required": [
                    "rc_accounts"
                ]
            },
            "find_recurrent_transfers": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "from"
                ]
            },
            "find_recurrent_transfers_response": {
                "type": "object",
                "properties": {
                    "recurrent_transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recurrent_transfer"
                        }
                    }
                },
                "required": [
                    "recurrent_transfers"
                ]
            },
            "find_savings_withdrawals": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_savings_withdrawals_response": {
                "type": "object",
                "properties": {
                    "withdrawals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/savings_withdrawal"
                        }
                    }
                },
                "required": [
                    "withdrawals"
                ]
            },
            "find_vesting_delegation_expirations": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_vesting_delegation_expirations_response": {
                "type": "object",
                "properties": {
                    "delegations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vesting_delegation_expirations"
                        }
                    }
                },
                "required": [
                    "delegations"
                ]
            },
            "find_vesting_delegations": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "",
                        "description": "The name of the account to query."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "find_vesting_delegations_response": {
                "type": "object",
                "properties": {
                    "delegations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vesting_delegation"
                        }
                    }
                },
                "required": [
                    "delegations"
                ]
            },
            "find_votes": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The author of the post to query."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "announcing-the-launch-of-hive-blockchain",
                        "description": "The permlink of the post to query."
                    }
                },
                "required": [
                    "author",
                    "permlink"
                ]
            },
            "find_votes_response": {
                "type": "object",
                "properties": {
                    "votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vote"
                        }
                    }
                },
                "required": [
                    "votes"
                ]
            },
            "find_withdraw_vesting_routes": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "ecency",
                        "description": "The name of the account to query."
                    },
                    "order": {
                        "type": "string",
                        "example": "by_destination",
                        "description": "The order in which to return the results."
                    }
                },
                "required": [
                    "account",
                    "order"
                ]
            },
            "find_withdraw_vesting_routes_response": {
                "type": "object",
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/withdraw_vesting_routes"
                        }
                    }
                },
                "required": [
                    "routes"
                ]
            },
            "find_witnesses": {
                "type": "object",
                "properties": {
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "initminer"
                        ],
                        "description": "An array of strings representing account names to query."
                    }
                },
                "required": [
                    "owners"
                ]
            },
            "find_witnesses_response": {
                "type": "object",
                "properties": {
                    "witnesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "required": [
                    "witnesses"
                ]
            },
            "get_block": {
                "type": "object",
                "properties": {
                    "block_num": {
                        "type": "integer",
                        "example": 0,
                        "description": "An integer representing the block number to query."
                    }
                },
                "required": [
                    "block_num"
                ]
            },
            "get_block_header_response": {
                "type": "object",
                "properties": {
                    "block": {
                        "$ref": "#/components/schemas/block_header"
                    }
                },
                "required": [
                    "block"
                ]
            },
            "get_block_range": {
                "type": "object",
                "properties": {
                    "starting_block_num": {
                        "type": "integer",
                        "example": 0,
                        "description": "Height of the first block to be returned."
                    },
                    "count": {
                        "type": "integer",
                        "example": 0,
                        "description": "The maximum number of blocks to return."
                    }
                },
                "required": [
                    "starting_block_num",
                    "count"
                ]
            },
            "get_block_range_response": {
                "type": "object",
                "properties": {
                    "blocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/block"
                        }
                    }
                },
                "required": [
                    "blocks"
                ]
            },
            "get_block_response": {
                "type": "object",
                "properties": {
                    "header": {
                        "$ref": "#/components/schemas/block"
                    }
                },
                "required": [
                    "header"
                ]
            },
            "get_comment_pending_payouts": {
                "type": "object",
                "properties": {
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comment_pending_payout"
                        },
                        "example": [
                            [
                                "hbd.funder",
                                "upvote-this-post-to-fund-hbdstabilizer-qr2j7n"
                            ]
                        ]
                    }
                },
                "required": [
                    "comments"
                ]
            },
            "get_comment_pending_payouts_response": {
                "type": "object",
                "properties": {
                    "cashout_infos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comment_pending_payout_type"
                        }
                    }
                },
                "required": [
                    "cashout_infos"
                ]
            },
            "get_account_history": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account to query."
                    },
                    "start": {
                        "type": "integer",
                        "example": "-1",
                        "description": "The starting point for the history query, -1 for reverse history or any positive numeric."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 1000,
                        "description": "The maximum number of operations to return."
                    },
                    "include_reversible": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether to include reversible operations in the response."
                    },
                    "operation_filter_low": {
                        "type": "integer",
                        "example": 4294967295,
                        "description": "The lower bound for filtering operations by type."
                    },
                    "operation_filter_high": {
                        "type": "integer",
                        "example": 4294968295,
                        "description": "The upper bound for filtering operations by type."
                    }
                },
                "required": [
                    "account",
                    "start",
                    "limit"
                ]
            },
            "get_account_history_response": {
                "type": "object",
                "properties": {
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/account_history_array"
                        }
                    }
                },
                "required": [
                    "history"
                ]
            },
            "get_account_posts": {
                "type": "object",
                "properties": {
                    "sort": {
                        "type": "string",
                        "example": "blog",
                        "description": "The sorting method for the posts, e.g., \"blog\", \"feed\", \"posts\"."
                    },
                    "account": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account to query."
                    },
                    "start_author": {
                        "type": "string",
                        "example": "",
                        "description": "The author to start from, used for pagination."
                    },
                    "start_permlink": {
                        "type": "string",
                        "example": "",
                        "description": "The permlink to start from, used for pagination."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "The maximum number of posts to return."
                    },
                    "observer": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The observer account to use for the query."
                    }
                },
                "required": [
                    "sort",
                    "account"
                ]
            },
            "get_account_posts_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/post_object"
                }
            },
            "get_active_witnesses_response": {
                "type": "object",
                "properties": {
                    "witnesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "witness1",
                            "witness2"
                        ],
                        "description": "An array of strings representing the active witnesses."
                    }
                },
                "required": [
                    "witnesses"
                ]
            },
            "get_community": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "hive-123456",
                        "description": "The name of the community to query."
                    },
                    "observer": {
                        "type": "string",
                        "example": "alice",
                        "description": "The observer account to use for the query."
                    }
                },
                "required": [
                    "name",
                    "observer"
                ]
            },
            "get_community_response": {
                "type": "object",
                "properties": {
                    "about": {
                        "type": "string",
                        "description": "A brief description of the community."
                    },
                    "avatar_url": {
                        "type": "string",
                        "description": "The URL of the community's avatar image."
                    },
                    "context": {
                        "$ref": "#/components/schemas/context_object",
                        "description": "The context of the community, including role and subscription status."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the community was created."
                    },
                    "description": {
                        "type": "string",
                        "description": "A detailed description of the community."
                    },
                    "flag_text": {
                        "type": "string",
                        "description": "Text to display when the community is flagged."
                    },
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the community."
                    },
                    "is_nsfw": {
                        "type": "boolean",
                        "description": "Indicates if the community is marked as NSFW (Not Safe For Work)."
                    },
                    "lang": {
                        "type": "string",
                        "description": "The language code of the community, e.g., \"en\" for English."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the community."
                    },
                    "num_authors": {
                        "type": "integer",
                        "description": "The number of authors in the community."
                    },
                    "num_pending": {
                        "type": "integer",
                        "description": "The number of pending members in the community."
                    },
                    "settings": {
                        "type": "object",
                        "description": "The settings of the community, including moderation and posting rules."
                    },
                    "subscribers": {
                        "type": "integer",
                        "description": "The number of subscribers to the community."
                    },
                    "sum_pending": {
                        "type": "integer",
                        "description": "The total pending amount in the community."
                    },
                    "team": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/team_array"
                        }
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the community."
                    },
                    "type_id": {
                        "type": "integer",
                        "description": "The type ID of the community, indicating its category or classification."
                    }
                },
                "required": [
                    "about",
                    "avatar_url",
                    "context",
                    "created_at",
                    "description",
                    "flag_text",
                    "id",
                    "is_nsfw",
                    "lang",
                    "name",
                    "num_authors",
                    "num_pending",
                    "settings",
                    "subscribers",
                    "sum_pending",
                    "team",
                    "title",
                    "type_id"
                ]
            },
            "get_community_context": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "hive-123456",
                        "description": "The name of the community to get context for."
                    },
                    "account": {
                        "type": "string",
                        "example": "alice",
                        "description": "The account to use for the query."
                    }
                },
                "required": [
                    "name",
                    "account"
                ]
            },
            "get_community_context_response": {
                "$ref": "#/components/schemas/context_object"
            },
            "get_config_response": {
                "type": "object",
                "properties": {
                    "IS_TEST_NET": {
                        "type": "boolean",
                        "description": "Indicates if the node is running on a testnet."
                    },
                    "TESTNET_BLOCK_LIMIT": {
                        "type": "integer",
                        "description": "Maximum block number for testnet."
                    },
                    "SMT_MAX_VOTABLE_ASSETS": {
                        "type": "integer",
                        "description": "Max SMT assets that can be voted per post."
                    },
                    "SMT_VESTING_WITHDRAW_INTERVAL_SECONDS": {
                        "type": "integer",
                        "description": "SMT vesting withdrawal interval in seconds."
                    },
                    "SMT_UPVOTE_LOCKOUT": {
                        "type": "integer",
                        "description": "Lockout period for SMT upvotes in seconds."
                    },
                    "SMT_EMISSION_MIN_INTERVAL_SECONDS": {
                        "type": "integer",
                        "description": "Minimum interval between SMT emissions."
                    },
                    "SMT_EMIT_INDEFINITELY": {
                        "type": "integer",
                        "description": "Value for indefinite SMT emission."
                    },
                    "SMT_MAX_NOMINAL_VOTES_PER_DAY": {
                        "type": "integer",
                        "description": "Max nominal SMT votes per day."
                    },
                    "SMT_MAX_VOTES_PER_REGENERATION": {
                        "type": "integer",
                        "description": "Max SMT votes per regeneration period."
                    },
                    "SMT_DEFAULT_VOTES_PER_REGEN_PERIOD": {
                        "type": "integer",
                        "description": "Default SMT votes per regeneration period."
                    },
                    "SMT_DEFAULT_PERCENT_CURATION_REWARDS": {
                        "type": "integer",
                        "description": "Default curation rewards percent for SMT."
                    },
                    "SMT_INITIAL_VESTING_PER_UNIT": {
                        "type": "integer",
                        "description": "Initial vesting per unit for SMT."
                    },
                    "SMT_BALLAST_SUPPLY_PERCENT": {
                        "type": "integer",
                        "description": "Ballast supply percent for SMT."
                    },
                    "SMT_MAX_ICO_TIERS": {
                        "type": "integer",
                        "description": "Max ICO tiers for SMT."
                    },
                    "HBD_SYMBOL": {
                        "$ref": "#/components/schemas/nai_decimal",
                        "description": "HBD asset symbol and precision."
                    },
                    "HIVE_INITIAL_VOTE_POWER_RATE": {
                        "type": "integer",
                        "description": "Initial vote power regeneration rate."
                    },
                    "HIVE_REDUCED_VOTE_POWER_RATE": {
                        "type": "integer",
                        "description": "Reduced vote power regeneration rate."
                    },
                    "HIVE_100_PERCENT": {
                        "type": "integer",
                        "description": "Constant for 100 percent (basis points)."
                    },
                    "HIVE_1_PERCENT": {
                        "type": "integer",
                        "description": "Constant for 1 percent (basis points)."
                    },
                    "HIVE_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD": {
                        "type": "integer",
                        "description": "Expiration period for account recovery requests."
                    },
                    "HIVE_ACTIVE_CHALLENGE_COOLDOWN": {
                        "type": "string",
                        "description": "Cooldown period for active authority challenge (in microseconds)."
                    },
                    "HIVE_ACTIVE_CHALLENGE_FEE": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Fee for challenging active authority."
                    },
                    "HIVE_ADDRESS_PREFIX": {
                        "type": "string",
                        "description": "Address prefix for public keys."
                    },
                    "HIVE_APR_PERCENT_MULTIPLY_PER_BLOCK": {
                        "type": "string",
                        "description": "APR multiplier per block."
                    },
                    "HIVE_APR_PERCENT_MULTIPLY_PER_HOUR": {
                        "type": "string",
                        "description": "APR multiplier per hour."
                    },
                    "HIVE_APR_PERCENT_MULTIPLY_PER_ROUND": {
                        "type": "string",
                        "description": "APR multiplier per round."
                    },
                    "HIVE_APR_PERCENT_SHIFT_PER_BLOCK": {
                        "type": "integer",
                        "description": "APR shift per block."
                    },
                    "HIVE_APR_PERCENT_SHIFT_PER_HOUR": {
                        "type": "integer",
                        "description": "APR shift per hour."
                    },
                    "HIVE_APR_PERCENT_SHIFT_PER_ROUND": {
                        "type": "integer",
                        "description": "APR shift per round."
                    },
                    "HIVE_BANDWIDTH_AVERAGE_WINDOW_SECONDS": {
                        "type": "integer",
                        "description": "Bandwidth averaging window in seconds."
                    },
                    "HIVE_BANDWIDTH_PRECISION": {
                        "type": "integer",
                        "description": "Bandwidth precision constant."
                    },
                    "HIVE_BENEFICIARY_LIMIT": {
                        "type": "integer",
                        "description": "Max number of beneficiaries per post."
                    },
                    "HIVE_BLOCKCHAIN_PRECISION": {
                        "type": "integer",
                        "description": "Blockchain asset precision."
                    },
                    "HIVE_BLOCKCHAIN_PRECISION_DIGITS": {
                        "type": "integer",
                        "description": "Number of precision digits for assets."
                    },
                    "HIVE_BLOCKCHAIN_HARDFORK_VERSION": {
                        "type": "string",
                        "description": "Current hardfork version."
                    },
                    "HIVE_BLOCKCHAIN_VERSION": {
                        "type": "string",
                        "description": "Current blockchain version."
                    },
                    "HIVE_BLOCK_INTERVAL": {
                        "type": "integer",
                        "description": "Block interval in seconds."
                    },
                    "HIVE_BLOCKS_PER_DAY": {
                        "type": "integer",
                        "description": "Number of blocks per day."
                    },
                    "HIVE_BLOCKS_PER_HOUR": {
                        "type": "integer",
                        "description": "Number of blocks per hour."
                    },
                    "HIVE_BLOCKS_PER_YEAR": {
                        "type": "integer",
                        "description": "Number of blocks per year."
                    },
                    "HIVE_CASHOUT_WINDOW_SECONDS": {
                        "type": "integer",
                        "description": "Cashout window for posts in seconds."
                    },
                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF12": {
                        "type": "integer",
                        "description": "Pre-HF12 cashout window in seconds."
                    },
                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF17": {
                        "type": "integer",
                        "description": "Pre-HF17 cashout window in seconds."
                    },
                    "HIVE_CHAIN_ID": {
                        "type": "string",
                        "description": "Unique chain identifier."
                    },
                    "HIVE_COMMENT_REWARD_FUND_NAME": {
                        "type": "string",
                        "description": "Name of the comment reward fund."
                    },
                    "HIVE_COMMENT_TITLE_LIMIT": {
                        "type": "integer",
                        "description": "Max length of comment title."
                    },
                    "HIVE_CONTENT_APR_PERCENT": {
                        "type": "integer",
                        "description": "Content reward APR percent."
                    },
                    "HIVE_CONTENT_CONSTANT_HF0": {
                        "type": "string",
                        "description": "Content constant for HF0."
                    },
                    "HIVE_CONTENT_CONSTANT_HF21": {
                        "type": "string",
                        "description": "Content constant for HF21."
                    },
                    "HIVE_CONTENT_REWARD_PERCENT_HF16": {
                        "type": "integer",
                        "description": "Content reward percent for HF16."
                    },
                    "HIVE_CONTENT_REWARD_PERCENT_HF21": {
                        "type": "integer",
                        "description": "Content reward percent for HF21."
                    },
                    "HIVE_CONVERSION_DELAY": {
                        "type": "string",
                        "description": "Conversion delay for HBD to HIVE (in microseconds)."
                    },
                    "HIVE_CONVERSION_DELAY_PRE_HF_16": {
                        "type": "string",
                        "description": "Pre-HF16 conversion delay (in microseconds)."
                    },
                    "HIVE_CREATE_ACCOUNT_DELEGATION_RATIO": {
                        "type": "integer",
                        "description": "Ratio for account creation delegation."
                    },
                    "HIVE_CREATE_ACCOUNT_DELEGATION_TIME": {
                        "type": "string",
                        "description": "Delegation time for account creation (in microseconds)."
                    },
                    "HIVE_CREATE_ACCOUNT_WITH_HIVE_MODIFIER": {
                        "type": "integer",
                        "description": "Modifier for creating account with HIVE."
                    },
                    "HIVE_CURATE_APR_PERCENT": {
                        "type": "integer",
                        "description": "Curation reward APR percent."
                    },
                    "HIVE_CUSTOM_OP_DATA_MAX_LENGTH": {
                        "type": "integer",
                        "description": "Max length for custom operation data."
                    },
                    "HIVE_CUSTOM_OP_ID_MAX_LENGTH": {
                        "type": "integer",
                        "description": "Max length for custom operation ID."
                    },
                    "HIVE_DEFAULT_HBD_INTEREST_RATE": {
                        "type": "integer",
                        "description": "Default HBD interest rate (basis points)."
                    },
                    "HIVE_DOWNVOTE_POOL_PERCENT_HF21": {
                        "type": "integer",
                        "description": "Downvote pool percent for HF21."
                    },
                    "HIVE_EQUIHASH_K": {
                        "type": "integer",
                        "description": "Equihash parameter K (PoW)."
                    },
                    "HIVE_EQUIHASH_N": {
                        "type": "integer",
                        "description": "Equihash parameter N (PoW)."
                    },
                    "HIVE_FEED_HISTORY_WINDOW": {
                        "type": "integer",
                        "description": "Feed history window size."
                    },
                    "HIVE_FEED_HISTORY_WINDOW_PRE_HF_16": {
                        "type": "integer",
                        "description": "Pre-HF16 feed history window size."
                    },
                    "HIVE_FEED_INTERVAL_BLOCKS": {
                        "type": "integer",
                        "description": "Number of blocks between feed updates."
                    },
                    "HIVE_GENESIS_TIME": {
                        "type": "string",
                        "description": "Genesis time of the blockchain."
                    },
                    "HIVE_HARDFORK_REQUIRED_WITNESSES": {
                        "type": "integer",
                        "description": "Number of witnesses required for hardfork."
                    },
                    "HIVE_HF21_CONVERGENT_LINEAR_RECENT_CLAIMS": {
                        "type": "string",
                        "description": "Recent claims constant for HF21."
                    },
                    "HIVE_INFLATION_NARROWING_PERIOD": {
                        "type": "integer",
                        "description": "Period for narrowing inflation."
                    },
                    "HIVE_INFLATION_RATE_START_PERCENT": {
                        "type": "integer",
                        "description": "Starting inflation rate percent."
                    },
                    "HIVE_INFLATION_RATE_STOP_PERCENT": {
                        "type": "integer",
                        "description": "Stopping inflation rate percent."
                    },
                    "HIVE_INIT_MINER_NAME": {
                        "type": "string",
                        "description": "Name of the initial miner."
                    },
                    "HIVE_INIT_PUBLIC_KEY_STR": {
                        "type": "string",
                        "description": "Initial public key string."
                    },
                    "HIVE_INIT_SUPPLY": {
                        "type": "string",
                        "description": "Initial HIVE supply."
                    },
                    "HIVE_HBD_INIT_SUPPLY": {
                        "type": "string",
                        "description": "Initial HBD supply."
                    },
                    "HIVE_INIT_TIME": {
                        "type": "string",
                        "description": "Blockchain initial time."
                    },
                    "HIVE_IRREVERSIBLE_THRESHOLD": {
                        "type": "integer",
                        "description": "Threshold for irreversible blocks (basis points)."
                    },
                    "HIVE_LIQUIDITY_APR_PERCENT": {
                        "type": "integer",
                        "description": "Liquidity reward APR percent."
                    },
                    "HIVE_LIQUIDITY_REWARD_BLOCKS": {
                        "type": "integer",
                        "description": "Blocks between liquidity rewards."
                    },
                    "HIVE_LIQUIDITY_REWARD_PERIOD_SEC": {
                        "type": "integer",
                        "description": "Liquidity reward period in seconds."
                    },
                    "HIVE_LIQUIDITY_TIMEOUT_SEC": {
                        "type": "string",
                        "description": "Liquidity timeout in microseconds."
                    },
                    "HIVE_MAX_ACCOUNT_CREATION_FEE": {
                        "type": "integer",
                        "description": "Max account creation fee."
                    },
                    "HIVE_MAX_ACCOUNT_NAME_LENGTH": {
                        "type": "integer",
                        "description": "Max account name length."
                    },
                    "HIVE_MAX_ACCOUNT_WITNESS_VOTES": {
                        "type": "integer",
                        "description": "Max witness votes per account."
                    },
                    "HIVE_MAX_ASSET_WHITELIST_AUTHORITIES": {
                        "type": "integer",
                        "description": "Max asset whitelist authorities."
                    },
                    "HIVE_MAX_AUTHORITY_MEMBERSHIP": {
                        "type": "integer",
                        "description": "Max authority membership."
                    },
                    "HIVE_MAX_BLOCK_SIZE": {
                        "type": "integer",
                        "description": "Maximum block size in bytes."
                    },
                    "HIVE_SOFT_MAX_BLOCK_SIZE": {
                        "type": "integer",
                        "description": "Soft maximum block size in bytes."
                    },
                    "HIVE_MAX_CASHOUT_WINDOW_SECONDS": {
                        "type": "integer",
                        "description": "Max cashout window in seconds."
                    },
                    "HIVE_MAX_COMMENT_DEPTH": {
                        "type": "integer",
                        "description": "Max comment depth."
                    },
                    "HIVE_MAX_COMMENT_DEPTH_PRE_HF17": {
                        "type": "integer",
                        "description": "Pre-HF17 max comment depth."
                    },
                    "HIVE_MAX_FEED_AGE_SECONDS": {
                        "type": "integer",
                        "description": "Max feed age in seconds."
                    },
                    "HIVE_MAX_INSTANCE_ID": {
                        "type": "string",
                        "description": "Max instance ID."
                    },
                    "HIVE_MAX_MEMO_SIZE": {
                        "type": "integer",
                        "description": "Max memo size in bytes."
                    },
                    "HIVE_MAX_WITNESSES": {
                        "type": "integer",
                        "description": "Max number of witnesses."
                    },
                    "HIVE_MAX_MINER_WITNESSES_HF0": {
                        "type": "integer",
                        "description": "Max miner witnesses for HF0."
                    },
                    "HIVE_MAX_MINER_WITNESSES_HF17": {
                        "type": "integer",
                        "description": "Max miner witnesses for HF17."
                    },
                    "HIVE_MAX_PERMLINK_LENGTH": {
                        "type": "integer",
                        "description": "Max permlink length."
                    },
                    "HIVE_MAX_PROXY_RECURSION_DEPTH": {
                        "type": "integer",
                        "description": "Max proxy recursion depth."
                    },
                    "HIVE_MAX_RATION_DECAY_RATE": {
                        "type": "integer",
                        "description": "Max ration decay rate."
                    },
                    "HIVE_MAX_RESERVE_RATIO": {
                        "type": "integer",
                        "description": "Max reserve ratio."
                    },
                    "HIVE_MAX_RUNNER_WITNESSES_HF0": {
                        "type": "integer",
                        "description": "Max runner witnesses for HF0."
                    },
                    "HIVE_MAX_RUNNER_WITNESSES_HF17": {
                        "type": "integer",
                        "description": "Max runner witnesses for HF17."
                    },
                    "HIVE_MAX_SATOSHIS": {
                        "type": "string",
                        "description": "Max satoshis (smallest divisible unit)."
                    },
                    "HIVE_MAX_SHARE_SUPPLY": {
                        "type": "string",
                        "description": "Max share supply."
                    },
                    "HIVE_MAX_SIG_CHECK_DEPTH": {
                        "type": "integer",
                        "description": "Max signature check depth."
                    },
                    "HIVE_MAX_SIG_CHECK_ACCOUNTS": {
                        "type": "integer",
                        "description": "Max signature check accounts."
                    },
                    "HIVE_MAX_TIME_UNTIL_EXPIRATION": {
                        "type": "integer",
                        "description": "Max time until transaction expiration (seconds)."
                    },
                    "HIVE_MAX_TRANSACTION_SIZE": {
                        "type": "integer",
                        "description": "Max transaction size in bytes."
                    },
                    "HIVE_MAX_UNDO_HISTORY": {
                        "type": "integer",
                        "description": "Max undo history length."
                    },
                    "HIVE_MAX_URL_LENGTH": {
                        "type": "integer",
                        "description": "Max URL length."
                    },
                    "HIVE_MAX_VOTE_CHANGES": {
                        "type": "integer",
                        "description": "Max vote changes allowed."
                    },
                    "HIVE_MAX_VOTED_WITNESSES_HF0": {
                        "type": "integer",
                        "description": "Max voted witnesses for HF0."
                    },
                    "HIVE_MAX_VOTED_WITNESSES_HF17": {
                        "type": "integer",
                        "description": "Max voted witnesses for HF17."
                    },
                    "HIVE_MAX_WITHDRAW_ROUTES": {
                        "type": "integer",
                        "description": "Max withdraw vesting routes."
                    },
                    "HIVE_MAX_WITNESS_URL_LENGTH": {
                        "type": "integer",
                        "description": "Max witness URL length."
                    },
                    "HIVE_MIN_ACCOUNT_CREATION_FEE": {
                        "type": "integer",
                        "description": "Minimum account creation fee."
                    },
                    "HIVE_MIN_ACCOUNT_NAME_LENGTH": {
                        "type": "integer",
                        "description": "Minimum account name length."
                    },
                    "HIVE_MIN_BLOCK_SIZE_LIMIT": {
                        "type": "integer",
                        "description": "Minimum block size limit."
                    },
                    "HIVE_MIN_BLOCK_SIZE": {
                        "type": "integer",
                        "description": "Minimum block size."
                    },
                    "HIVE_MIN_CONTENT_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum content reward."
                    },
                    "HIVE_MIN_CURATE_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum curation reward."
                    },
                    "HIVE_MIN_PERMLINK_LENGTH": {
                        "type": "integer",
                        "description": "Minimum permlink length."
                    },
                    "HIVE_MIN_REPLY_INTERVAL": {
                        "type": "integer",
                        "description": "Minimum reply interval (microseconds)."
                    },
                    "HIVE_MIN_REPLY_INTERVAL_HF20": {
                        "type": "integer",
                        "description": "Minimum reply interval for HF20 (microseconds)."
                    },
                    "HIVE_MIN_ROOT_COMMENT_INTERVAL": {
                        "type": "integer",
                        "description": "Minimum root comment interval (microseconds)."
                    },
                    "HIVE_MIN_COMMENT_EDIT_INTERVAL": {
                        "type": "integer",
                        "description": "Minimum comment edit interval (microseconds)."
                    },
                    "HIVE_MIN_VOTE_INTERVAL_SEC": {
                        "type": "integer",
                        "description": "Minimum vote interval in seconds."
                    },
                    "HIVE_MINER_ACCOUNT": {
                        "type": "string",
                        "description": "Name of the miner account."
                    },
                    "HIVE_MINER_PAY_PERCENT": {
                        "type": "integer",
                        "description": "Miner pay percent."
                    },
                    "HIVE_MIN_FEEDS": {
                        "type": "integer",
                        "description": "Minimum number of feeds."
                    },
                    "HIVE_MINING_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum mining reward."
                    },
                    "HIVE_MINING_TIME": {
                        "type": "string",
                        "description": "Mining start time."
                    },
                    "HIVE_MIN_LIQUIDITY_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum liquidity reward."
                    },
                    "HIVE_MIN_LIQUIDITY_REWARD_PERIOD_SEC": {
                        "type": "integer",
                        "description": "Minimum liquidity reward period (microseconds)."
                    },
                    "HIVE_MIN_PAYOUT_HBD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum HBD payout."
                    },
                    "HIVE_MIN_POW_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum proof-of-work reward."
                    },
                    "HIVE_MIN_PRODUCER_REWARD": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Minimum producer reward."
                    },
                    "HIVE_MIN_TRANSACTION_EXPIRATION_LIMIT": {
                        "type": "integer",
                        "description": "Minimum transaction expiration limit (seconds)."
                    },
                    "HIVE_MIN_TRANSACTION_SIZE_LIMIT": {
                        "type": "integer",
                        "description": "Minimum transaction size limit (bytes)."
                    },
                    "HIVE_MIN_UNDO_HISTORY": {
                        "type": "integer",
                        "description": "Minimum undo history length."
                    },
                    "HIVE_NULL_ACCOUNT": {
                        "type": "string",
                        "description": "Null account name."
                    },
                    "HIVE_NUM_INIT_MINERS": {
                        "type": "integer",
                        "description": "Number of initial miners."
                    },
                    "HIVE_OWNER_AUTH_HISTORY_TRACKING_START_BLOCK_NUM": {
                        "type": "integer",
                        "description": "Block number when owner auth history tracking starts."
                    },
                    "HIVE_OWNER_AUTH_RECOVERY_PERIOD": {
                        "type": "integer",
                        "description": "Owner auth recovery period (microseconds)."
                    },
                    "HIVE_OWNER_CHALLENGE_COOLDOWN": {
                        "type": "string",
                        "description": "Owner challenge cooldown (microseconds)."
                    },
                    "HIVE_OWNER_CHALLENGE_FEE": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Owner challenge fee."
                    },
                    "HIVE_OWNER_UPDATE_LIMIT": {
                        "type": "integer",
                        "description": "Owner update limit."
                    },
                    "HIVE_POST_AVERAGE_WINDOW": {
                        "type": "integer",
                        "description": "Post average window (seconds)."
                    },
                    "HIVE_POST_REWARD_FUND_NAME": {
                        "type": "string",
                        "description": "Name of the post reward fund."
                    },
                    "HIVE_POST_WEIGHT_CONSTANT": {
                        "type": "integer",
                        "description": "Post weight constant."
                    },
                    "HIVE_POW_APR_PERCENT": {
                        "type": "integer",
                        "description": "Proof-of-work APR percent."
                    },
                    "HIVE_PRODUCER_APR_PERCENT": {
                        "type": "integer",
                        "description": "Producer APR percent."
                    },
                    "HIVE_PROXY_TO_SELF_ACCOUNT": {
                        "type": "string",
                        "description": "Proxy to self account name."
                    },
                    "HIVE_HBD_INTEREST_COMPOUND_INTERVAL_SEC": {
                        "type": "integer",
                        "description": "HBD interest compound interval (seconds)."
                    },
                    "HIVE_SECONDS_PER_YEAR": {
                        "type": "integer",
                        "description": "Number of seconds per year."
                    },
                    "HIVE_PROPOSAL_FUND_PERCENT_HF0": {
                        "type": "integer",
                        "description": "Proposal fund percent for HF0."
                    },
                    "HIVE_PROPOSAL_FUND_PERCENT_HF21": {
                        "type": "integer",
                        "description": "Proposal fund percent for HF21."
                    },
                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF19": {
                        "type": "string",
                        "description": "Recent rshares decay time for HF19 (microseconds)."
                    },
                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF17": {
                        "type": "string",
                        "description": "Recent rshares decay time for HF17 (microseconds)."
                    },
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF6": {
                        "type": "integer",
                        "description": "Reverse auction window for HF6 (seconds)."
                    },
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF20": {
                        "type": "integer",
                        "description": "Reverse auction window for HF20 (seconds)."
                    },
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF21": {
                        "type": "integer",
                        "description": "Reverse auction window for HF21 (seconds)."
                    },
                    "HIVE_ROOT_POST_PARENT": {
                        "type": "string",
                        "description": "Root post parent account."
                    },
                    "HIVE_SAVINGS_WITHDRAW_REQUEST_LIMIT": {
                        "type": "integer",
                        "description": "Savings withdraw request limit."
                    },
                    "HIVE_SAVINGS_WITHDRAW_TIME": {
                        "type": "string",
                        "description": "Savings withdraw time (microseconds)."
                    },
                    "HIVE_HBD_START_PERCENT_HF14": {
                        "type": "integer",
                        "description": "HBD start percent for HF14."
                    },
                    "HIVE_HBD_START_PERCENT_HF20": {
                        "type": "integer",
                        "description": "HBD start percent for HF20."
                    },
                    "HIVE_HBD_STOP_PERCENT_HF14": {
                        "type": "integer",
                        "description": "HBD stop percent for HF14."
                    },
                    "HIVE_HBD_STOP_PERCENT_HF20": {
                        "type": "integer",
                        "description": "HBD stop percent for HF20."
                    },
                    "HIVE_SECOND_CASHOUT_WINDOW": {
                        "type": "integer",
                        "description": "Second cashout window (seconds)."
                    },
                    "HIVE_SOFT_MAX_COMMENT_DEPTH": {
                        "type": "integer",
                        "description": "Soft max comment depth."
                    },
                    "HIVE_START_MINER_VOTING_BLOCK": {
                        "type": "integer",
                        "description": "Block number when miner voting starts."
                    },
                    "HIVE_START_VESTING_BLOCK": {
                        "type": "integer",
                        "description": "Block number when vesting starts."
                    },
                    "HIVE_TEMP_ACCOUNT": {
                        "type": "string",
                        "description": "Temporary account name."
                    },
                    "HIVE_UPVOTE_LOCKOUT_HF7": {
                        "type": "integer",
                        "description": "Upvote lockout for HF7 (microseconds)."
                    },
                    "HIVE_UPVOTE_LOCKOUT_HF17": {
                        "type": "integer",
                        "description": "Upvote lockout for HF17 (microseconds)."
                    },
                    "HIVE_UPVOTE_LOCKOUT_SECONDS": {
                        "type": "integer",
                        "description": "Upvote lockout in seconds."
                    },
                    "HIVE_VESTING_FUND_PERCENT_HF16": {
                        "type": "integer",
                        "description": "Vesting fund percent for HF16."
                    },
                    "HIVE_VESTING_WITHDRAW_INTERVALS": {
                        "type": "integer",
                        "description": "Vesting withdraw intervals."
                    },
                    "HIVE_VESTING_WITHDRAW_INTERVALS_PRE_HF_16": {
                        "type": "integer",
                        "description": "Vesting withdraw intervals pre HF16."
                    },
                    "HIVE_VESTING_WITHDRAW_INTERVAL_SECONDS": {
                        "type": "integer",
                        "description": "Vesting withdraw interval in seconds."
                    },
                    "HIVE_VOTE_DUST_THRESHOLD": {
                        "type": "integer",
                        "description": "Vote dust threshold."
                    },
                    "HIVE_VOTING_MANA_REGENERATION_SECONDS": {
                        "type": "integer",
                        "description": "Voting mana regeneration in seconds."
                    },
                    "HIVE_SYMBOL": {
                        "$ref": "#/components/schemas/nai_decimal",
                        "description": "HIVE asset symbol and precision."
                    },
                    "VESTS_SYMBOL": {
                        "$ref": "#/components/schemas/nai_decimal",
                        "description": "VESTS asset symbol and precision."
                    },
                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH": {
                        "type": "string",
                        "description": "Virtual schedule lap length."
                    },
                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH2": {
                        "type": "string",
                        "description": "Virtual schedule lap length 2."
                    },
                    "HIVE_VOTES_PER_PERIOD_SMT_HF": {
                        "type": "integer",
                        "description": "Votes per period for SMT HF."
                    },
                    "HIVE_MAX_LIMIT_ORDER_EXPIRATION": {
                        "type": "integer",
                        "description": "Max limit order expiration (seconds)."
                    },
                    "HIVE_DELEGATION_RETURN_PERIOD_HF0": {
                        "type": "integer",
                        "description": "Delegation return period for HF0 (seconds)."
                    },
                    "HIVE_DELEGATION_RETURN_PERIOD_HF20": {
                        "type": "integer",
                        "description": "Delegation return period for HF20 (seconds)."
                    },
                    "HIVE_RD_MIN_DECAY_BITS": {
                        "type": "integer",
                        "description": "Resource dynamics min decay bits."
                    },
                    "HIVE_RD_MAX_DECAY_BITS": {
                        "type": "integer",
                        "description": "Resource dynamics max decay bits."
                    },
                    "HIVE_RD_DECAY_DENOM_SHIFT": {
                        "type": "integer",
                        "description": "Resource dynamics decay denom shift."
                    },
                    "HIVE_RD_MAX_POOL_BITS": {
                        "type": "integer",
                        "description": "Resource dynamics max pool bits."
                    },
                    "HIVE_RD_MAX_BUDGET_1": {
                        "type": "string",
                        "description": "Resource dynamics max budget 1."
                    },
                    "HIVE_RD_MAX_BUDGET_2": {
                        "type": "integer",
                        "description": "Resource dynamics max budget 2."
                    },
                    "HIVE_RD_MAX_BUDGET_3": {
                        "type": "integer",
                        "description": "Resource dynamics max budget 3."
                    },
                    "HIVE_RD_MAX_BUDGET": {
                        "type": "integer",
                        "description": "Resource dynamics max budget."
                    },
                    "HIVE_RD_MIN_DECAY": {
                        "type": "integer",
                        "description": "Resource dynamics min decay."
                    },
                    "HIVE_RD_MIN_BUDGET": {
                        "type": "integer",
                        "description": "Resource dynamics min budget."
                    },
                    "HIVE_RD_MAX_DECAY": {
                        "type": "integer",
                        "description": "Resource dynamics max decay."
                    },
                    "HIVE_ACCOUNT_SUBSIDY_PRECISION": {
                        "type": "integer",
                        "description": "Account subsidy precision."
                    },
                    "HIVE_WITNESS_SUBSIDY_BUDGET_PERCENT": {
                        "type": "integer",
                        "description": "Witness subsidy budget percent."
                    },
                    "HIVE_WITNESS_SUBSIDY_DECAY_PERCENT": {
                        "type": "integer",
                        "description": "Witness subsidy decay percent."
                    },
                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_DECAY": {
                        "type": "integer",
                        "description": "Default account subsidy decay."
                    },
                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_BUDGET": {
                        "type": "integer",
                        "description": "Default account subsidy budget."
                    },
                    "HIVE_DECAY_BACKSTOP_PERCENT": {
                        "type": "integer",
                        "description": "Decay backstop percent."
                    },
                    "HIVE_BLOCK_GENERATION_POSTPONED_TX_LIMIT": {
                        "type": "integer",
                        "description": "Block generation postponed transaction limit."
                    },
                    "HIVE_PENDING_TRANSACTION_EXECUTION_LIMIT": {
                        "type": "integer",
                        "description": "Pending transaction execution limit."
                    },
                    "HIVE_TREASURY_ACCOUNT": {
                        "type": "string",
                        "description": "Treasury account name."
                    },
                    "HIVE_TREASURY_FEE": {
                        "type": "integer",
                        "description": "Treasury fee."
                    },
                    "HIVE_PROPOSAL_MAINTENANCE_PERIOD": {
                        "type": "integer",
                        "description": "Proposal maintenance period (seconds)."
                    },
                    "HIVE_PROPOSAL_MAINTENANCE_CLEANUP": {
                        "type": "integer",
                        "description": "Proposal maintenance cleanup (seconds)."
                    },
                    "HIVE_PROPOSAL_SUBJECT_MAX_LENGTH": {
                        "type": "integer",
                        "description": "Proposal subject max length."
                    },
                    "HIVE_PROPOSAL_MAX_IDS_NUMBER": {
                        "type": "integer",
                        "description": "Proposal max IDs number."
                    },
                    "HIVE_NETWORK_TYPE": {
                        "type": "string",
                        "description": "Network type (mainnet, testnet, etc)."
                    },
                    "HIVE_DB_FORMAT_VERSION": {
                        "type": "string",
                        "description": "Database format version."
                    },
                    "HIVE_1_BASIS_POINT": {
                        "type": "integer",
                        "description": "One basis point in HIVE."
                    },
                    "HIVE_COLLATERALIZED_CONVERSION_DELAY": {
                        "type": "integer",
                        "description": "Delay for collateralized conversion (in microseconds)."
                    },
                    "HIVE_COLLATERALIZED_CONVERSION_FEE": {
                        "type": "integer",
                        "description": "Fee for collateralized conversion (in basis points)."
                    },
                    "HIVE_CONVERSION_COLLATERAL_RATIO": {
                        "type": "integer",
                        "description": "Collateral ratio for conversion."
                    },
                    "HIVE_DAILY_PROPOSAL_MAINTENANCE_PERIOD": {
                        "type": "integer",
                        "description": "Daily proposal maintenance period (seconds)."
                    },
                    "HIVE_DEFAULT_HF_9_COMPROMISED_ACCOUNTS_PUBLIC_KEY_STR": {
                        "type": "string",
                        "description": "Default public key string for HF9 compromised accounts."
                    },
                    "HIVE_DELAYED_VOTING_INTERVAL_SECONDS": {
                        "type": "integer",
                        "description": "Delayed voting interval in seconds."
                    },
                    "HIVE_DELAYED_VOTING_TOTAL_INTERVAL_SECONDS": {
                        "type": "integer",
                        "description": "Total delayed voting interval in seconds."
                    },
                    "HIVE_EARLY_VOTING_SECONDS_HF25": {
                        "type": "integer",
                        "description": "Early voting period for HF25 in seconds."
                    },
                    "HIVE_ENABLE_SMT": {
                        "type": "boolean",
                        "description": "Flag to enable SMT (Simple Mining Token)."
                    },
                    "HIVE_GLOBAL_REMOVE_THRESHOLD": {
                        "type": "integer",
                        "description": "Global threshold for account removal (basis points)."
                    },
                    "HIVE_GOVERNANCE_VOTE_EXPIRATION_PERIOD": {
                        "type": "integer",
                        "description": "Governance vote expiration period (in microseconds)."
                    },
                    "HIVE_HBD_HARD_LIMIT": {
                        "type": "integer",
                        "description": "Hard limit for HBD supply."
                    },
                    "HIVE_HBD_HARD_LIMIT_PRE_HF26": {
                        "type": "integer",
                        "description": "Pre-HF26 hard limit for HBD supply."
                    },
                    "HIVE_HBD_START_PERCENT_HF26": {
                        "type": "integer",
                        "description": "HBD start percent for HF26."
                    },
                    "HIVE_HBD_STOP_PERCENT_HF26": {
                        "type": "integer",
                        "description": "HBD stop percent for HF26."
                    },
                    "HIVE_HF_9_COMPROMISED_ACCOUNTS_PUBLIC_KEY_STR": {
                        "type": "string",
                        "description": "Public key string for HF9 compromised accounts."
                    },
                    "HIVE_INIT_PUBLIC_KEY": {
                        "type": "string",
                        "description": "Public key for the initial account."
                    },
                    "HIVE_MAX_COMMENT_BENEFICIARIES": {
                        "type": "integer",
                        "description": "Maximum number of beneficiaries for a comment."
                    },
                    "HIVE_MAX_CONSECUTIVE_RECURRENT_TRANSFER_FAILURES": {
                        "type": "integer",
                        "description": "Maximum consecutive failures for recurrent transfers."
                    },
                    "HIVE_MAX_OPEN_RECURRENT_TRANSFERS": {
                        "type": "integer",
                        "description": "Maximum number of open recurrent transfers."
                    },
                    "HIVE_MAX_PENDING_TRANSFERS": {
                        "type": "integer",
                        "description": "Maximum number of pending transfers."
                    },
                    "HIVE_MAX_RECURRENT_TRANSFERS_PER_BLOCK": {
                        "type": "integer",
                        "description": "Maximum number of recurrent transfers allowed per block."
                    },
                    "HIVE_MAX_RECURRENT_TRANSFER_END_DATE": {
                        "type": "integer",
                        "description": "Maximum end date for recurrent transfers in days."
                    },
                    "HIVE_MAX_TIME_UNTIL_SIGNATURE_EXPIRATION": {
                        "type": "integer",
                        "description": "Maximum time until signature expiration in seconds."
                    },
                    "HIVE_MID_VOTING_SECONDS_HF25": {
                        "type": "integer",
                        "description": "Mid-voting period for HF25 in seconds."
                    },
                    "HIVE_MIN_RECURRENT_TRANSFERS_RECURRENCE": {
                        "type": "integer",
                        "description": "Minimum recurrence period for recurrent transfers in hours."
                    },
                    "HIVE_ONE_DAY_SECONDS": {
                        "type": "integer",
                        "description": "Number of seconds in one day."
                    },
                    "HIVE_PROPOSAL_CONVERSION_RATE": {
                        "type": "integer",
                        "description": "Conversion rate for proposals."
                    },
                    "HIVE_PROPOSAL_FEE_INCREASE_AMOUNT": {
                        "type": "integer",
                        "description": "Amount by which proposal fees increase."
                    },
                    "HIVE_PROPOSAL_FEE_INCREASE_DAYS": {
                        "type": "integer",
                        "description": "Number of days over which proposal fees increase."
                    },
                    "HIVE_PROPOSAL_FEE_INCREASE_DAYS_SEC": {
                        "type": "integer",
                        "description": "Number of seconds for proposal fee increase period."
                    },
                    "HIVE_RC_BUCKET_TIME_LENGTH": {
                        "type": "integer",
                        "description": "Length of the resource credit bucket time in seconds."
                    },
                    "HIVE_RC_HISTORICAL_ACCOUNT_CREATION_ADJUSTMENT": {
                        "type": "integer",
                        "description": "Historical adjustment for account creation in resource credits."
                    },
                    "HIVE_RC_MAX_ACCOUNTS_PER_DELEGATION_OP": {
                        "type": "integer",
                        "description": "Maximum number of accounts per delegation operation."
                    },
                    "HIVE_RC_REGEN_TIME": {
                        "type": "integer",
                        "description": "Resource credit regeneration time in seconds."
                    },
                    "HIVE_RC_STATS_REPORT_FREQUENCY": {
                        "type": "integer",
                        "description": "Frequency of resource credit stats reports in seconds."
                    },
                    "HIVE_RC_WINDOW_BUCKET_COUNT": {
                        "type": "integer",
                        "description": "Number of buckets in the resource credit window."
                    },
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF25": {
                        "type": "integer",
                        "description": "Reverse auction window for HF25 in seconds."
                    },
                    "HIVE_UP_TO_DATE_MARGIN__BLOCK_STATS": {
                        "type": "integer",
                        "description": "Margin for block stats to be considered up-to-date."
                    },
                    "HIVE_UP_TO_DATE_MARGIN__FAST_CONFIRM": {
                        "type": "integer",
                        "description": "Margin for fast confirmation to be considered up-to-date."
                    },
                    "HIVE_UP_TO_DATE_MARGIN__PENDING_TXS": {
                        "type": "integer",
                        "description": "Margin for pending transactions to be considered up-to-date."
                    },
                    "HIVE_WITNESS_SHUTDOWN_THRESHOLD": {
                        "type": "integer",
                        "description": "Threshold for witness shutdown in seconds."
                    },
                    "NEW_HIVE_TREASURY_ACCOUNT": {
                        "type": "string",
                        "description": "New treasury account name."
                    },
                    "OBSOLETE_TREASURY_ACCOUNT": {
                        "type": "string",
                        "description": "Obsolete treasury account name."
                    },
                    "OLD_CHAIN_ID": {
                        "type": "string",
                        "description": "Old chain ID for compatibility."
                    }
                },
                "required": [
                    "IS_TEST_NET",
                    "TESTNET_BLOCK_LIMIT",
                    "SMT_MAX_VOTABLE_ASSETS",
                    "SMT_VESTING_WITHDRAW_INTERVAL_SECONDS",
                    "SMT_UPVOTE_LOCKOUT",
                    "SMT_EMISSION_MIN_INTERVAL_SECONDS",
                    "SMT_EMIT_INDEFINITELY",
                    "SMT_MAX_NOMINAL_VOTES_PER_DAY",
                    "SMT_MAX_VOTES_PER_REGENERATION",
                    "SMT_DEFAULT_VOTES_PER_REGEN_PERIOD",
                    "SMT_DEFAULT_PERCENT_CURATION_REWARDS",
                    "SMT_INITIAL_VESTING_PER_UNIT",
                    "SMT_BALLAST_SUPPLY_PERCENT",
                    "SMT_MAX_ICO_TIERS",
                    "HBD_SYMBOL",
                    "HIVE_INITIAL_VOTE_POWER_RATE",
                    "HIVE_REDUCED_VOTE_POWER_RATE",
                    "HIVE_100_PERCENT",
                    "HIVE_1_PERCENT",
                    "HIVE_ACCOUNT_RECOVERY_REQUEST_EXPIRATION_PERIOD",
                    "HIVE_ACTIVE_CHALLENGE_COOLDOWN",
                    "HIVE_ACTIVE_CHALLENGE_FEE",
                    "HIVE_ADDRESS_PREFIX",
                    "HIVE_APR_PERCENT_MULTIPLY_PER_BLOCK",
                    "HIVE_APR_PERCENT_MULTIPLY_PER_HOUR",
                    "HIVE_APR_PERCENT_MULTIPLY_PER_ROUND",
                    "HIVE_APR_PERCENT_SHIFT_PER_BLOCK",
                    "HIVE_APR_PERCENT_SHIFT_PER_HOUR",
                    "HIVE_APR_PERCENT_SHIFT_PER_ROUND",
                    "HIVE_BANDWIDTH_AVERAGE_WINDOW_SECONDS",
                    "HIVE_BANDWIDTH_PRECISION",
                    "HIVE_BENEFICIARY_LIMIT",
                    "HIVE_BLOCKCHAIN_PRECISION",
                    "HIVE_BLOCKCHAIN_PRECISION_DIGITS",
                    "HIVE_BLOCKCHAIN_HARDFORK_VERSION",
                    "HIVE_BLOCKCHAIN_VERSION",
                    "HIVE_BLOCK_INTERVAL",
                    "HIVE_BLOCKS_PER_DAY",
                    "HIVE_BLOCKS_PER_HOUR",
                    "HIVE_BLOCKS_PER_YEAR",
                    "HIVE_CASHOUT_WINDOW_SECONDS",
                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF12",
                    "HIVE_CASHOUT_WINDOW_SECONDS_PRE_HF17",
                    "HIVE_CHAIN_ID",
                    "HIVE_COMMENT_REWARD_FUND_NAME",
                    "HIVE_COMMENT_TITLE_LIMIT",
                    "HIVE_CONTENT_APR_PERCENT",
                    "HIVE_CONTENT_CONSTANT_HF0",
                    "HIVE_CONTENT_CONSTANT_HF21",
                    "HIVE_CONTENT_REWARD_PERCENT_HF16",
                    "HIVE_CONTENT_REWARD_PERCENT_HF21",
                    "HIVE_CONVERSION_DELAY",
                    "HIVE_CONVERSION_DELAY_PRE_HF_16",
                    "HIVE_CREATE_ACCOUNT_DELEGATION_RATIO",
                    "HIVE_CREATE_ACCOUNT_DELEGATION_TIME",
                    "HIVE_CREATE_ACCOUNT_WITH_HIVE_MODIFIER",
                    "HIVE_CURATE_APR_PERCENT",
                    "HIVE_CUSTOM_OP_DATA_MAX_LENGTH",
                    "HIVE_CUSTOM_OP_ID_MAX_LENGTH",
                    "HIVE_DEFAULT_HBD_INTEREST_RATE",
                    "HIVE_DOWNVOTE_POOL_PERCENT_HF21",
                    "HIVE_EQUIHASH_K",
                    "HIVE_EQUIHASH_N",
                    "HIVE_FEED_HISTORY_WINDOW",
                    "HIVE_FEED_HISTORY_WINDOW_PRE_HF_16",
                    "HIVE_FEED_INTERVAL_BLOCKS",
                    "HIVE_GENESIS_TIME",
                    "HIVE_HARDFORK_REQUIRED_WITNESSES",
                    "HIVE_HF21_CONVERGENT_LINEAR_RECENT_CLAIMS",
                    "HIVE_INFLATION_NARROWING_PERIOD",
                    "HIVE_INFLATION_RATE_START_PERCENT",
                    "HIVE_INFLATION_RATE_STOP_PERCENT",
                    "HIVE_INIT_MINER_NAME",
                    "HIVE_INIT_PUBLIC_KEY_STR",
                    "HIVE_INIT_SUPPLY",
                    "HIVE_HBD_INIT_SUPPLY",
                    "HIVE_INIT_TIME",
                    "HIVE_IRREVERSIBLE_THRESHOLD",
                    "HIVE_LIQUIDITY_APR_PERCENT",
                    "HIVE_LIQUIDITY_REWARD_BLOCKS",
                    "HIVE_LIQUIDITY_REWARD_PERIOD_SEC",
                    "HIVE_LIQUIDITY_TIMEOUT_SEC",
                    "HIVE_MAX_ACCOUNT_CREATION_FEE",
                    "HIVE_MAX_ACCOUNT_NAME_LENGTH",
                    "HIVE_MAX_ACCOUNT_WITNESS_VOTES",
                    "HIVE_MAX_ASSET_WHITELIST_AUTHORITIES",
                    "HIVE_MAX_AUTHORITY_MEMBERSHIP",
                    "HIVE_MAX_BLOCK_SIZE",
                    "HIVE_SOFT_MAX_BLOCK_SIZE",
                    "HIVE_MAX_CASHOUT_WINDOW_SECONDS",
                    "HIVE_MAX_COMMENT_DEPTH",
                    "HIVE_MAX_COMMENT_DEPTH_PRE_HF17",
                    "HIVE_MAX_FEED_AGE_SECONDS",
                    "HIVE_MAX_INSTANCE_ID",
                    "HIVE_MAX_MEMO_SIZE",
                    "HIVE_MAX_WITNESSES",
                    "HIVE_MAX_MINER_WITNESSES_HF0",
                    "HIVE_MAX_MINER_WITNESSES_HF17",
                    "HIVE_MAX_PERMLINK_LENGTH",
                    "HIVE_MAX_PROXY_RECURSION_DEPTH",
                    "HIVE_MAX_RATION_DECAY_RATE",
                    "HIVE_MAX_RESERVE_RATIO",
                    "HIVE_MAX_RUNNER_WITNESSES_HF0",
                    "HIVE_MAX_RUNNER_WITNESSES_HF17",
                    "HIVE_MAX_SATOSHIS",
                    "HIVE_MAX_SHARE_SUPPLY",
                    "HIVE_MAX_SIG_CHECK_DEPTH",
                    "HIVE_MAX_SIG_CHECK_ACCOUNTS",
                    "HIVE_MAX_TIME_UNTIL_EXPIRATION",
                    "HIVE_MAX_TRANSACTION_SIZE",
                    "HIVE_MAX_UNDO_HISTORY",
                    "HIVE_MAX_URL_LENGTH",
                    "HIVE_MAX_VOTE_CHANGES",
                    "HIVE_MAX_VOTED_WITNESSES_HF0",
                    "HIVE_MAX_VOTED_WITNESSES_HF17",
                    "HIVE_MAX_WITHDRAW_ROUTES",
                    "HIVE_MAX_WITNESS_URL_LENGTH",
                    "HIVE_MIN_ACCOUNT_CREATION_FEE",
                    "HIVE_MIN_ACCOUNT_NAME_LENGTH",
                    "HIVE_MIN_BLOCK_SIZE_LIMIT",
                    "HIVE_MIN_BLOCK_SIZE",
                    "HIVE_MIN_CONTENT_REWARD",
                    "HIVE_MIN_CURATE_REWARD",
                    "HIVE_MIN_PERMLINK_LENGTH",
                    "HIVE_MIN_REPLY_INTERVAL",
                    "HIVE_MIN_REPLY_INTERVAL_HF20",
                    "HIVE_MIN_ROOT_COMMENT_INTERVAL",
                    "HIVE_MIN_COMMENT_EDIT_INTERVAL",
                    "HIVE_MIN_VOTE_INTERVAL_SEC",
                    "HIVE_MINER_ACCOUNT",
                    "HIVE_MINER_PAY_PERCENT",
                    "HIVE_MIN_FEEDS",
                    "HIVE_MINING_REWARD",
                    "HIVE_MINING_TIME",
                    "HIVE_MIN_LIQUIDITY_REWARD",
                    "HIVE_MIN_LIQUIDITY_REWARD_PERIOD_SEC",
                    "HIVE_MIN_PAYOUT_HBD",
                    "HIVE_MIN_POW_REWARD",
                    "HIVE_MIN_PRODUCER_REWARD",
                    "HIVE_MIN_TRANSACTION_EXPIRATION_LIMIT",
                    "HIVE_MIN_TRANSACTION_SIZE_LIMIT",
                    "HIVE_MIN_UNDO_HISTORY",
                    "HIVE_NULL_ACCOUNT",
                    "HIVE_NUM_INIT_MINERS",
                    "HIVE_OWNER_AUTH_HISTORY_TRACKING_START_BLOCK_NUM",
                    "HIVE_OWNER_AUTH_RECOVERY_PERIOD",
                    "HIVE_OWNER_CHALLENGE_COOLDOWN",
                    "HIVE_OWNER_CHALLENGE_FEE",
                    "HIVE_OWNER_UPDATE_LIMIT",
                    "HIVE_POST_AVERAGE_WINDOW",
                    "HIVE_POST_REWARD_FUND_NAME",
                    "HIVE_POST_WEIGHT_CONSTANT",
                    "HIVE_POW_APR_PERCENT",
                    "HIVE_PRODUCER_APR_PERCENT",
                    "HIVE_PROXY_TO_SELF_ACCOUNT",
                    "HIVE_HBD_INTEREST_COMPOUND_INTERVAL_SEC",
                    "HIVE_SECONDS_PER_YEAR",
                    "HIVE_PROPOSAL_FUND_PERCENT_HF0",
                    "HIVE_PROPOSAL_FUND_PERCENT_HF21",
                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF19",
                    "HIVE_RECENT_RSHARES_DECAY_TIME_HF17",
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF6",
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF20",
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF21",
                    "HIVE_ROOT_POST_PARENT",
                    "HIVE_SAVINGS_WITHDRAW_REQUEST_LIMIT",
                    "HIVE_SAVINGS_WITHDRAW_TIME",
                    "HIVE_HBD_START_PERCENT_HF14",
                    "HIVE_HBD_START_PERCENT_HF20",
                    "HIVE_HBD_STOP_PERCENT_HF14",
                    "HIVE_HBD_STOP_PERCENT_HF20",
                    "HIVE_SECOND_CASHOUT_WINDOW",
                    "HIVE_SOFT_MAX_COMMENT_DEPTH",
                    "HIVE_START_MINER_VOTING_BLOCK",
                    "HIVE_START_VESTING_BLOCK",
                    "HIVE_TEMP_ACCOUNT",
                    "HIVE_UPVOTE_LOCKOUT_HF7",
                    "HIVE_UPVOTE_LOCKOUT_HF17",
                    "HIVE_UPVOTE_LOCKOUT_SECONDS",
                    "HIVE_VESTING_FUND_PERCENT_HF16",
                    "HIVE_VESTING_WITHDRAW_INTERVALS",
                    "HIVE_VESTING_WITHDRAW_INTERVALS_PRE_HF_16",
                    "HIVE_VESTING_WITHDRAW_INTERVAL_SECONDS",
                    "HIVE_VOTE_DUST_THRESHOLD",
                    "HIVE_VOTING_MANA_REGENERATION_SECONDS",
                    "HIVE_SYMBOL",
                    "VESTS_SYMBOL",
                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH",
                    "HIVE_VIRTUAL_SCHEDULE_LAP_LENGTH2",
                    "HIVE_VOTES_PER_PERIOD_SMT_HF",
                    "HIVE_MAX_LIMIT_ORDER_EXPIRATION",
                    "HIVE_DELEGATION_RETURN_PERIOD_HF0",
                    "HIVE_DELEGATION_RETURN_PERIOD_HF20",
                    "HIVE_RD_MIN_DECAY_BITS",
                    "HIVE_RD_MAX_DECAY_BITS",
                    "HIVE_RD_DECAY_DENOM_SHIFT",
                    "HIVE_RD_MAX_POOL_BITS",
                    "HIVE_RD_MAX_BUDGET_1",
                    "HIVE_RD_MAX_BUDGET_2",
                    "HIVE_RD_MAX_BUDGET_3",
                    "HIVE_RD_MAX_BUDGET",
                    "HIVE_RD_MIN_DECAY",
                    "HIVE_RD_MIN_BUDGET",
                    "HIVE_RD_MAX_DECAY",
                    "HIVE_ACCOUNT_SUBSIDY_PRECISION",
                    "HIVE_WITNESS_SUBSIDY_BUDGET_PERCENT",
                    "HIVE_WITNESS_SUBSIDY_DECAY_PERCENT",
                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_DECAY",
                    "HIVE_DEFAULT_ACCOUNT_SUBSIDY_BUDGET",
                    "HIVE_DECAY_BACKSTOP_PERCENT",
                    "HIVE_BLOCK_GENERATION_POSTPONED_TX_LIMIT",
                    "HIVE_PENDING_TRANSACTION_EXECUTION_LIMIT",
                    "HIVE_TREASURY_ACCOUNT",
                    "HIVE_TREASURY_FEE",
                    "HIVE_PROPOSAL_MAINTENANCE_PERIOD",
                    "HIVE_PROPOSAL_MAINTENANCE_CLEANUP",
                    "HIVE_PROPOSAL_SUBJECT_MAX_LENGTH",
                    "HIVE_PROPOSAL_MAX_IDS_NUMBER",
                    "HIVE_NETWORK_TYPE",
                    "HIVE_DB_FORMAT_VERSION",
                    "HIVE_1_BASIS_POINT",
                    "HIVE_COLLATERALIZED_CONVERSION_DELAY",
                    "HIVE_COLLATERALIZED_CONVERSION_FEE",
                    "HIVE_CONVERSION_COLLATERAL_RATIO",
                    "HIVE_DAILY_PROPOSAL_MAINTENANCE_PERIOD",
                    "HIVE_DEFAULT_HF_9_COMPROMISED_ACCOUNTS_PUBLIC_KEY_STR",
                    "HIVE_DELAYED_VOTING_INTERVAL_SECONDS",
                    "HIVE_DELAYED_VOTING_TOTAL_INTERVAL_SECONDS",
                    "HIVE_EARLY_VOTING_SECONDS_HF25",
                    "HIVE_ENABLE_SMT",
                    "HIVE_GLOBAL_REMOVE_THRESHOLD",
                    "HIVE_GOVERNANCE_VOTE_EXPIRATION_PERIOD",
                    "HIVE_HBD_HARD_LIMIT",
                    "HIVE_HBD_HARD_LIMIT_PRE_HF26",
                    "HIVE_HBD_START_PERCENT_HF26",
                    "HIVE_HBD_STOP_PERCENT_HF26",
                    "HIVE_HF_9_COMPROMISED_ACCOUNTS_PUBLIC_KEY_STR",
                    "HIVE_INIT_PUBLIC_KEY",
                    "HIVE_MAX_COMMENT_BENEFICIARIES",
                    "HIVE_MAX_CONSECUTIVE_RECURRENT_TRANSFER_FAILURES",
                    "HIVE_MAX_OPEN_RECURRENT_TRANSFERS",
                    "HIVE_MAX_PENDING_TRANSFERS",
                    "HIVE_MAX_RECURRENT_TRANSFERS_PER_BLOCK",
                    "HIVE_MAX_RECURRENT_TRANSFER_END_DATE",
                    "HIVE_MAX_TIME_UNTIL_SIGNATURE_EXPIRATION",
                    "HIVE_MID_VOTING_SECONDS_HF25",
                    "HIVE_MIN_RECURRENT_TRANSFERS_RECURRENCE",
                    "HIVE_ONE_DAY_SECONDS",
                    "HIVE_PROPOSAL_CONVERSION_RATE",
                    "HIVE_PROPOSAL_FEE_INCREASE_AMOUNT",
                    "HIVE_PROPOSAL_FEE_INCREASE_DAYS",
                    "HIVE_PROPOSAL_FEE_INCREASE_DAYS_SEC",
                    "HIVE_RC_BUCKET_TIME_LENGTH",
                    "HIVE_RC_HISTORICAL_ACCOUNT_CREATION_ADJUSTMENT",
                    "HIVE_RC_MAX_ACCOUNTS_PER_DELEGATION_OP",
                    "HIVE_RC_REGEN_TIME",
                    "HIVE_RC_STATS_REPORT_FREQUENCY",
                    "HIVE_RC_WINDOW_BUCKET_COUNT",
                    "HIVE_REVERSE_AUCTION_WINDOW_SECONDS_HF25",
                    "HIVE_UP_TO_DATE_MARGIN__BLOCK_STATS",
                    "HIVE_UP_TO_DATE_MARGIN__FAST_CONFIRM",
                    "HIVE_UP_TO_DATE_MARGIN__PENDING_TXS",
                    "HIVE_WITNESS_SHUTDOWN_THRESHOLD",
                    "NEW_HIVE_TREASURY_ACCOUNT",
                    "OBSOLETE_TREASURY_ACCOUNT",
                    "OLD_CHAIN_ID"
                ]
            },
            "get_current_price_feed_response": {
                "type": "object",
                "properties": {
                    "base": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "quote": {
                        "$ref": "#/components/schemas/balance"
                    }
                },
                "required": [
                    "base",
                    "quote"
                ]
            },
            "get_discussion": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "description": "The author of the discussion."
                    },
                    "permlink": {
                        "type": "string",
                        "description": "The unique identifier for the discussion, typically a permalink."
                    },
                    "observer": {
                        "type": "string",
                        "description": "The observer's account name, used to track who is viewing the discussion."
                    }
                },
                "required": [
                    "author",
                    "permlink",
                    "observer"
                ]
            },
            "get_discussion_response": {
                "type": "object"
            },
            "get_dynamic_global_properties_response": {
                "type": "object",
                "properties": {
                    "available_account_subsidies": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Number of available account creation subsidies, representing how many new accounts can be created with existing budget."
                    },
                    "content_reward_percent": {
                        "type": "integer",
                        "description": "Percentage of the total reward pool allocated to content creators based on voting."
                    },
                    "current_aslot": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The current \"average slot\" number, an indicator of the current position in the consensus schedule."
                    },
                    "current_hbd_supply": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The current total supply of Hive-backed dollars (HBD) in circulation."
                    },
                    "current_remove_threshold": {
                        "type": "integer",
                        "description": "The current threshold (in basis points) for account removal or vesting actions."
                    },
                    "current_supply": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The total supply of HIVE tokens currently in circulation."
                    },
                    "current_witness": {
                        "type": "string",
                        "description": "Name of the witness currently producing the block."
                    },
                    "delegation_return_period": {
                        "type": "integer",
                        "description": "The period (in seconds) after which delegated vesting shares are returned."
                    },
                    "dhf_interval_ledger": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The balance-adjusted ledger amount associated with the Dynamic Hosting Fund (DHF) interval."
                    },
                    "downvote_pool_percent": {
                        "type": "integer",
                        "description": "The percentage (basis points) of the total voting power allocated to the downvote pool."
                    },
                    "early_voting_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Duration in seconds during which early votes are accepted before the official voting period."
                    },
                    "hbd_interest_rate": {
                        "type": "integer",
                        "description": "Annual interest rate (in basis points) paid on HBD savings or deposits."
                    },
                    "hbd_print_rate": {
                        "type": "integer",
                        "description": "Rate (basis points) determining how much HBD is printed or issued based on economic conditions."
                    },
                    "hbd_start_percent": {
                        "type": "integer",
                        "description": "The minimum percentage at which HBD creation process begins under peg stability mechanisms."
                    },
                    "hbd_stop_percent": {
                        "type": "integer",
                        "description": "The maximum percentage at which HBD creation halts during the peg stabilization process."
                    },
                    "head_block_id": {
                        "type": "string",
                        "description": "The block ID of the latest block in the chain."
                    },
                    "head_block_number": {
                        "type": "integer",
                        "description": "The number (height) of the latest block."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique ID for the global properties object."
                    },
                    "init_hbd_supply": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The initial amount of HBD supply at network launch or reset."
                    },
                    "last_budget_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the last budget allocation cycle."
                    },
                    "last_irreversible_block_num": {
                        "type": "integer",
                        "description": "Block number of the last irreversible block (finalized confirmed block)."
                    },
                    "max_consecutive_recurrent_transfer_failures": {
                        "type": "integer",
                        "description": "Maximum allowed consecutive failures for scheduled recurrent transfers before cancellation."
                    },
                    "max_open_recurrent_transfers": {
                        "type": "integer",
                        "description": "Maximum number of concurrently active recurrent transfer schedules."
                    },
                    "max_recurrent_transfer_end_date": {
                        "type": "integer",
                        "description": "The maximum allowed end date (timestamp in days) for recurrent transfer schedules."
                    },
                    "maximum_block_size": {
                        "type": "integer",
                        "description": "The maximum size (in bytes) allowed for a single block."
                    },
                    "mid_voting_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Duration (in seconds) of mid-phase voting window for proposals."
                    },
                    "min_recurrent_transfers_recurrence": {
                        "type": "integer",
                        "description": "Minimum recurrence interval (in hours) for scheduled recurrent transfers."
                    },
                    "next_daily_maintenance_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Scheduled time for the next daily blockchain maintenance."
                    },
                    "next_maintenance_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Scheduled time for the overall next blockchain maintenance."
                    },
                    "num_pow_witnesses": {
                        "type": "integer",
                        "description": "Count of proof-of-work (PoW) witnesses active in the network."
                    },
                    "participation_count": {
                        "type": "integer",
                        "description": "Number of active participants/stakeholders currently participating in governance or voting processes."
                    },
                    "pending_rewarded_vesting_hive": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of HIVE tokens pending as vested rewards that will be converted into vesting shares."
                    },
                    "pending_rewarded_vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of vesting shares slated to be awarded as part of pending rewards."
                    },
                    "proposal_fund_percent": {
                        "type": "integer",
                        "description": "Percentage of the total reward fund allocated for governance proposals, incentive programs, or development funding."
                    },
                    "recent_slots_filled": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "String representing the high-water mark of recent slots filled, typically a large number indicating network activity."
                    },
                    "reverse_auction_seconds": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Duration in seconds allocated to reverse auction procedures, possibly for resource allocation."
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The current blockchain timestamp."
                    },
                    "total_pow": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "Total accumulated proof-of-work, which is usually zero or not applicable in pure proof-of-stake systems like HIVE unless PoW is used temporarily."
                    },
                    "total_reward_fund_hive": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The total reward fund HIVE."
                    },
                    "total_reward_shares2": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "String representing reward shares (possibly an internal accounting value)."
                    },
                    "total_vesting_fund_hive": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Total HIVE allocated to vesting (vesting fund) — funds set aside for vesting."
                    },
                    "total_vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "Total vesting shares issued."
                    },
                    "vesting_reward_percent": {
                        "type": "integer",
                        "description": "Percentage (basis points) of reward allocated to vesting."
                    },
                    "virtual_supply": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The blockchain's \"virtual\" supply, an internal accounting measure that may slightly differ from actual circulating tokens."
                    },
                    "vote_power_reserve_rate": {
                        "type": "integer",
                        "description": "The rate at which vote power reserves are maintained or replenished."
                    }
                },
                "required": [
                    "available_account_subsidies",
                    "content_reward_percent",
                    "current_aslot",
                    "current_hbd_supply",
                    "current_remove_threshold",
                    "current_supply",
                    "current_witness",
                    "delegation_return_period",
                    "dhf_interval_ledger",
                    "downvote_pool_percent",
                    "early_voting_seconds",
                    "hbd_interest_rate",
                    "hbd_print_rate",
                    "hbd_start_percent",
                    "hbd_stop_percent",
                    "head_block_id",
                    "head_block_number",
                    "id",
                    "init_hbd_supply",
                    "last_budget_time",
                    "last_irreversible_block_num",
                    "max_consecutive_recurrent_transfer_failures",
                    "max_open_recurrent_transfers",
                    "max_recurrent_transfer_end_date",
                    "maximum_block_size",
                    "mid_voting_seconds",
                    "min_recurrent_transfers_recurrence",
                    "next_daily_maintenance_time",
                    "next_maintenance_time",
                    "num_pow_witnesses",
                    "participation_count",
                    "pending_rewarded_vesting_hive",
                    "pending_rewarded_vesting_shares",
                    "proposal_fund_percent",
                    "recent_slots_filled",
                    "reverse_auction_seconds",
                    "time",
                    "total_pow",
                    "total_reward_fund_hive",
                    "total_reward_shares2",
                    "total_vesting_fund_hive",
                    "total_vesting_shares",
                    "vesting_reward_percent",
                    "virtual_supply",
                    "vote_power_reserve_rate"
                ]
            },
            "get_feed_history_response": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 0,
                        "description": "The ID of the feed history."
                    },
                    "current_max_history": {
                        "$ref": "#/components/schemas/base_and_quote",
                        "description": "The current maximum history of the feed."
                    },
                    "current_median_history": {
                        "$ref": "#/components/schemas/base_and_quote",
                        "description": "The current median history of the feed."
                    },
                    "current_min_history": {
                        "$ref": "#/components/schemas/base_and_quote",
                        "description": "The current minimum history of the feed."
                    },
                    "market_median_history": {
                        "$ref": "#/components/schemas/base_and_quote",
                        "description": "The market median history of the feed."
                    },
                    "price_history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/base_and_quote"
                        },
                        "description": "An array of price history objects."
                    }
                },
                "required": [
                    "id",
                    "current_max_history",
                    "current_median_history",
                    "current_min_history",
                    "market_median_history",
                    "price_history"
                ]
            },
            "get_follow_list": {
                "type": "object",
                "properties": {
                    "observer": {
                        "type": "string",
                        "description": "The account observing the follow list."
                    },
                    "follow_type": {
                        "type": "string",
                        "description": "The type of follow list to retrieve."
                    }
                },
                "required": [
                    "observer",
                    "follow_type"
                ]
            },
            "get_follow_list_response": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the account being followed."
                        },
                        "blacklist_description": {
                            "type": "string",
                            "description": "Description of the blacklist, if applicable."
                        },
                        "muted_list_description": {
                            "type": "string",
                            "description": "Description of the muted list, if applicable."
                        }
                    },
                    "required": [
                        "name",
                        "blacklist_description",
                        "muted_list_description"
                    ]
                }
            },
            "get_hardfork_properties_response": {
                "type": "object",
                "properties": {
                    "current_hardfork_version": {
                        "type": "string",
                        "description": "The version of the hardfork."
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of the hardfork."
                    },
                    "last_hardfork": {
                        "type": "integer",
                        "description": "The last hardfork number."
                    },
                    "next_hardfork": {
                        "type": "string",
                        "description": "The next hardfork version."
                    },
                    "next_hardfork_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the next hardfork."
                    },
                    "processed_hardforks": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "An array of strings representing the processed hardforks."
                    }
                },
                "required": [
                    "current_hardfork_version",
                    "id",
                    "last_hardfork",
                    "next_hardfork",
                    "next_hardfork_time",
                    "processed_hardforks"
                ]
            },
            "get_key_references": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "STM6vJmrwaX5TjgTS9dPH8KsArso5m91fVodJvv91j7G765wqcNM9"
                        ],
                        "description": "An array of strings representing keys to query."
                    }
                },
                "required": [
                    "keys"
                ]
            },
            "get_key_references_response": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "get_ops_in_block": {
                "type": "object",
                "properties": {
                    "block_num": {
                        "type": "integer",
                        "example": 0,
                        "description": "The block number to retrieve operations from."
                    },
                    "only_virtual": {
                        "type": "boolean",
                        "example": false,
                        "description": "If true, only virtual operations will be returned."
                    },
                    "include_reversible": {
                        "type": "boolean",
                        "example": true,
                        "description": "If true, reversible operations will be included in the response."
                    }
                },
                "required": [
                    "block_num",
                    "only_virtual"
                ]
            },
            "get_ops_in_block_response": {
                "type": "object",
                "properties": {
                    "ops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/operation_object"
                        }
                    }
                },
                "required": [
                    "ops"
                ]
            },
            "get_order_book": {
                "type": "object",
                "properties": {
                    "base": {
                        "$ref": "#/components/schemas/balance",
                        "example": {
                            "amount": "1000",
                            "precision": 3,
                            "nai": "@@000000021"
                        }
                    },
                    "quote": {
                        "$ref": "#/components/schemas/balance",
                        "example": {
                            "amount": "1000",
                            "precision": 3,
                            "nai": "@@000000013"
                        }
                    },
                    "limit": {
                        "type": "integer",
                        "example": 0
                    }
                },
                "required": [
                    "base",
                    "quote",
                    "limit"
                ]
            },
            "get_order_book_response": {
                "type": "object",
                "properties": {
                    "asks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bids_and_asks"
                        }
                    },
                    "bids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bids_and_asks"
                        }
                    }
                },
                "required": [
                    "asks",
                    "bids"
                ]
            },
            "get_payout_stats": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "example": 250,
                        "description": "The maximum number of payout stats to return."
                    }
                }
            },
            "get_payout_stats_response": {
                "type": "object",
                "properties": {
                    "blogs": {
                        "type": "number",
                        "format": "double",
                        "example": 31613.378
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "example": 91599.777
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/items_array"
                        }
                    }
                },
                "required": [
                    "blogs",
                    "total",
                    "items"
                ]
            },
            "get_post": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The author of the post."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "hive-12345",
                        "description": "The unique identifier for the post."
                    },
                    "observer": {
                        "type": "string",
                        "example": "gtg",
                        "description": "The observer of the post."
                    }
                },
                "required": [
                    "author",
                    "permlink"
                ]
            },
            "get_post_response": {
                "$ref": "#/components/schemas/post_object"
            },
            "get_post_header": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The author of the post."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "hive-12345",
                        "description": "The unique identifier for the post."
                    }
                },
                "required": [
                    "author",
                    "permlink"
                ]
            },
            "get_post_header_response": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The author of the post."
                    },
                    "category": {
                        "type": "string",
                        "example": "hiveecosystem",
                        "description": "The unique identifier for the post."
                    },
                    "depth": {
                        "type": "integer",
                        "example": 0,
                        "description": "The depth of the post in the discussion thread."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "hive-12345",
                        "description": "The unique identifier for the post."
                    }
                },
                "required": [
                    "author",
                    "category",
                    "depth",
                    "permlink"
                ]
            },
            "get_potential_signatures": {
                "type": "object",
                "properties": {
                    "trx": {
                        "$ref": "#/components/schemas/transaction"
                    }
                },
                "required": [
                    "trx"
                ]
            },
            "get_potential_signatures_response": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/auths"
                        }
                    }
                },
                "required": [
                    "keys"
                ]
            },
            "get_profile": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account."
                    },
                    "observer": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the observer."
                    }
                },
                "required": [
                    "account",
                    "observer"
                ]
            },
            "get_profile_response": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-04-29T22:28:00",
                        "description": "The author's last active time."
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "blacklist1",
                            "blacklist2"
                        ],
                        "description": "An array of blacklists associated with the post, indicating accounts that have blacklisted it."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-03-25T15:09:27",
                        "description": "The author's account creation time."
                    },
                    "id": {
                        "type": "integer",
                        "example": 241,
                        "description": "The unique identifier for the author."
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the author."
                    },
                    "post_count": {
                        "type": "integer",
                        "example": 0,
                        "description": "The total number of posts made by the author."
                    },
                    "reputation": {
                        "type": "number",
                        "format": "double",
                        "example": 25.75,
                        "description": "The reputation score of the author."
                    },
                    "stats": {
                        "type": "object",
                        "properties": {
                            "followers": {
                                "type": "integer",
                                "example": 431,
                                "description": "The number of followers the author has."
                            },
                            "following": {
                                "type": "integer",
                                "example": 0,
                                "description": "The number of accounts the author is following."
                            },
                            "rank": {
                                "type": "integer",
                                "example": 0,
                                "description": "The author's rank."
                            }
                        },
                        "required": [
                            "followers",
                            "following",
                            "rank"
                        ]
                    },
                    "context": {
                        "type": "object",
                        "properties": {
                            "followed": {
                                "type": "boolean",
                                "example": false,
                                "description": "Indicates if the author is followed."
                            },
                            "muted": {
                                "type": "boolean",
                                "example": false,
                                "description": "Indicates if the author is muted."
                            }
                        }
                    }
                },
                "required": [
                    "active",
                    "blacklists",
                    "created",
                    "id",
                    "metadata",
                    "name",
                    "post_count",
                    "reputation",
                    "stats"
                ]
            },
            "get_ranked_posts": {
                "type": "object",
                "properties": {
                    "sort": {
                        "type": "string",
                        "example": "trending",
                        "description": "The sorting method for the posts (e.g., trending, hot, new)."
                    },
                    "tag": {
                        "type": "string",
                        "example": "hive",
                        "description": "The tag to filter posts by."
                    },
                    "observer": {
                        "type": "string",
                        "example": "user123",
                        "description": "The user observing the posts."
                    }
                },
                "required": [
                    "sort",
                    "tag",
                    "observer"
                ]
            },
            "get_ranked_posts_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/post_object"
                }
            },
            "get_relationship_between_accounts": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "example": [
                    "alice",
                    "bob"
                ]
            },
            "get_relationship_between_accounts_response": {
                "type": "object",
                "properties": {
                    "blacklists": {
                        "type": "boolean",
                        "example": false
                    },
                    "follows": {
                        "type": "boolean",
                        "example": false
                    },
                    "follows_blacklists": {
                        "type": "boolean",
                        "example": false
                    },
                    "follows_muted": {
                        "type": "boolean",
                        "example": false
                    },
                    "ignores": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "blacklists",
                    "follows",
                    "follows_blacklists",
                    "follows_muted",
                    "ignores"
                ]
            },
            "get_required_signatures": {
                "type": "object",
                "properties": {
                    "trx": {
                        "$ref": "#/components/schemas/transaction"
                    }
                },
                "required": [
                    "trx"
                ]
            },
            "get_reward_funds_response": {
                "type": "object",
                "properties": {
                    "funds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/reward_funds"
                        }
                    }
                },
                "required": [
                    "funds"
                ]
            },
            "get_transaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "6fde0190a97835ea6d9e651293e90c89911f933c",
                        "description": "The ID of the transaction to retrieve."
                    },
                    "include_reversible": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether to include reversible blocks."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "get_transaction_response": {
                "$ref": "#/components/schemas/transaction_account_history"
            },
            "get_transaction_hex": {
                "type": "object",
                "properties": {
                    "trx": {
                        "$ref": "#/components/schemas/transaction"
                    }
                },
                "required": [
                    "trx"
                ]
            },
            "get_transaction_hex_response": {
                "type": "object",
                "properties": {
                    "hex": {
                        "type": "string",
                        "example": "00000000000000000000000000"
                    }
                },
                "required": [
                    "hex"
                ]
            },
            "get_version_response": {
                "type": "object",
                "properties": {
                    "blockchain_version": {
                        "type": "string",
                        "example": "0.23.0",
                        "description": "The version of the blockchain."
                    },
                    "hive_revision": {
                        "type": "string",
                        "example": "5cda10a488cf77f68549ec6d3a6be9af2ea9351b",
                        "description": "The revision of the Hive codebase."
                    },
                    "fc_revision": {
                        "type": "string",
                        "example": "5cda10a488cf77f68549ec6d3a6be9af2ea9351b",
                        "description": "The revision of the fc codebase."
                    },
                    "chain_id": {
                        "type": "string",
                        "example": "beeab0de00000000000000000000000000000000000000000000000000000000"
                    },
                    "haf_revision": {
                        "type": "string",
                        "example": "0e2bd7c69cc26928665281435165fd3288940db9"
                    },
                    "node_type": {
                        "type": "string",
                        "example": "mainnet",
                        "description": "The type of node (e.g., mainnet, testnet)."
                    }
                },
                "required": [
                    "blockchain_version",
                    "hive_revision",
                    "fc_revision",
                    "chain_id",
                    "haf_revision",
                    "node_type"
                ]
            },
            "get_witness_schedule_response": {
                "type": "object",
                "properties": {
                    "account_subsidy_rd": {
                        "$ref": "#/components/schemas/account_subsidy_rd"
                    },
                    "account_subsidy_witness_rd": {
                        "$ref": "#/components/schemas/account_subsidy_rd"
                    },
                    "current_shuffled_witnesses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "witness1",
                            "witness2"
                        ]
                    },
                    "current_virtual_time": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "965626696637118176548648739"
                    },
                    "elected_weight": {
                        "type": "integer",
                        "example": 1
                    },
                    "hardfork_required_witnesses": {
                        "type": "integer",
                        "example": 17
                    },
                    "id": {
                        "type": "integer",
                        "example": 0
                    },
                    "majority_version": {
                        "type": "string",
                        "example": "1.27.3"
                    },
                    "max_miner_witnesses": {
                        "type": "integer",
                        "example": 0
                    },
                    "max_runner_witnesses": {
                        "type": "integer",
                        "example": 1
                    },
                    "max_voted_witnesses": {
                        "type": "integer",
                        "example": 20
                    },
                    "median_props": {
                        "$ref": "#/components/schemas/witness_props"
                    },
                    "min_witness_account_subsidy_decay": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0
                    },
                    "miner_weight": {
                        "type": "integer",
                        "example": 1
                    },
                    "next_shuffle_block_num": {
                        "type": "integer",
                        "example": 96113997
                    },
                    "num_scheduled_witnesses": {
                        "type": "integer",
                        "example": 21
                    },
                    "timeshare_weight": {
                        "type": "integer",
                        "example": 5
                    },
                    "witness_pay_normalization_factor": {
                        "type": "integer",
                        "example": 25
                    }
                },
                "required": [
                    "account_subsidy_rd",
                    "account_subsidy_witness_rd",
                    "current_shuffled_witnesses",
                    "current_virtual_time",
                    "elected_weight",
                    "hardfork_required_witnesses",
                    "id",
                    "majority_version",
                    "max_miner_witnesses",
                    "max_runner_witnesses",
                    "max_voted_witnesses",
                    "median_props",
                    "min_witness_account_subsidy_decay",
                    "miner_weight",
                    "next_shuffle_block_num",
                    "num_scheduled_witnesses",
                    "timeshare_weight",
                    "witness_pay_normalization_factor"
                ]
            },
            "hbd_conversion": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "conversion_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-31T23:53:51",
                        "description": "The date when the conversion will take place."
                    },
                    "id": {
                        "type": "integer",
                        "example": 433539
                    },
                    "owner": {
                        "type": "string",
                        "example": "demo.com"
                    },
                    "requestid": {
                        "type": "integer",
                        "example": 3205281453
                    }
                },
                "required": [
                    "amount",
                    "conversion_date",
                    "id",
                    "owner",
                    "requestid"
                ]
            },
            "hbd_exchange_rate": {
                "$ref": "#/components/schemas/base_and_quote"
            },
            "hive_int": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "integer"
                    }
                ]
            },
            "is_known_transaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "is_known_transaction_response": {
                "type": "object",
                "properties": {
                    "is_known": {
                        "type": "boolean",
                        "description": "Indicates if the transaction is known."
                    }
                },
                "required": [
                    "is_known"
                ]
            },
            "items_array": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": [
                                "integer",
                                "null"
                            ]
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "number",
                            "format": "double"
                        }
                    ]
                },
                "minItems": 5,
                "maxItems": 5
            },
            "list_account_recovery_requests": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_account_recovery_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/account_recovery"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "list_accounts": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "object",
                        "example": ""
                    },
                    "limit": {
                        "type": "integer",
                        "example": 10
                    },
                    "order": {
                        "type": "string",
                        "example": "by_name"
                    },
                    "delayed_votes_active": {
                        "type": "boolean",
                        "example": true,
                        "description": "Optional."
                    }
                },
                "required": [
                    "start",
                    "limit",
                    "order"
                ]
            },
            "list_accounts_response": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/account"
                        }
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "list_all_subscriptions": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "alice",
                        "description": "Comma-separated list of account names."
                    }
                },
                "required": [
                    "account"
                ]
            },
            "list_all_subscriptions_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/subscriptions_array"
                }
            },
            "list_change_recovery_account_requests": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_change_recovery_account_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/find_account_recovery"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "list_collateralized_conversion_requests": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_collateralized_conversion_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/collateralized_conversion_requests"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "list_communities": {
                "type": "object",
                "properties": {
                    "last": {
                        "type": "string",
                        "example": "",
                        "description": "Name of the last community."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "Limit number of listed communities, default: 100"
                    },
                    "query": {
                        "type": "string",
                        "example": "developers",
                        "description": "Filters against title and about community fields."
                    },
                    "sort": {
                        "type": "string",
                        "default": "rank",
                        "description": "Sort order for the communities."
                    },
                    "observer": {
                        "type": "string",
                        "example": "alice",
                        "description": "A valid account observing the communities."
                    }
                }
            },
            "list_communities_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/community_object"
                }
            },
            "list_community_roles": {
                "type": "object",
                "properties": {
                    "last": {
                        "type": "string",
                        "example": "",
                        "description": "Name of the last subscriber."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "Limit number of listed communities, default: 100"
                    },
                    "community": {
                        "type": "string",
                        "example": "hive-123456",
                        "description": "community category name."
                    }
                },
                "required": [
                    "community"
                ]
            },
            "list_community_roles_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/team_array"
                }
            },
            "list_decline_voting_rights_requests": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_decline_voting_rights_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline_voting_rights"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "list_escrows": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_escrows_response": {
                "type": "object",
                "properties": {
                    "escrows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/escrow"
                        }
                    }
                },
                "required": [
                    "escrows"
                ]
            },
            "list_hbd_conversion_requests": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_hbd_conversion_requests_response": {
                "type": "object",
                "properties": {
                    "requests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/hbd_conversion"
                        }
                    }
                },
                "required": [
                    "requests"
                ]
            },
            "list_limit_orders": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_limit_orders_response": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/orders"
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            },
            "list_owner_histories": {
                "$ref": "#/components/schemas/start_limit"
            },
            "list_owner_histories_response": {
                "type": "object",
                "properties": {
                    "owner_auths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/owner_auth_history"
                        }
                    }
                },
                "required": [
                    "owner_auths"
                ]
            },
            "list_pop_communities": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "required": [
                    "limit"
                ]
            },
            "list_pop_communities_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/pop_communities"
                }
            },
            "list_proposal_votes": {
                "$ref": "#/components/schemas/start_limit_proposals_votes"
            },
            "list_proposal_votes_response": {
                "type": "object",
                "properties": {
                    "proposal_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/proposal_vote"
                        }
                    }
                },
                "required": [
                    "proposal_votes"
                ]
            },
            "list_proposals": {
                "$ref": "#/components/schemas/start_limit_proposals"
            },
            "list_proposals_response": {
                "type": "object",
                "properties": {
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/proposals"
                        }
                    }
                },
                "required": [
                    "proposals"
                ]
            },
            "list_subscribers": {
                "type": "object",
                "properties": {
                    "last": {
                        "type": "string",
                        "example": "",
                        "description": "Name of the last subscriber."
                    },
                    "limit": {
                        "type": "integer",
                        "example": 100,
                        "description": "Limit number of listed subscribers, default: 100"
                    },
                    "community": {
                        "type": "string",
                        "example": "hive-123456",
                        "description": "community category name."
                    }
                },
                "required": [
                    "community"
                ]
            },
            "list_subscribers_response": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/subscriptions_array"
                }
            },
            "list_savings_withdrawals": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_savings_withdrawals_response": {
                "type": "object",
                "properties": {
                    "withdrawals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/savings_withdrawal"
                        }
                    }
                },
                "required": [
                    "withdrawals"
                ]
            },
            "list_vesting_delegation_expirations": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_vesting_delegation_expirations_response": {
                "type": "object",
                "properties": {
                    "delegations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vesting_delegation_expirations"
                        }
                    }
                },
                "required": [
                    "delegations"
                ]
            },
            "list_vesting_delegations": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_vesting_delegations_response": {
                "type": "object",
                "properties": {
                    "delegations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vesting_delegation"
                        }
                    }
                },
                "required": [
                    "delegations"
                ]
            },
            "list_votes": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_votes_response": {
                "type": "object",
                "properties": {
                    "votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/vote"
                        }
                    }
                },
                "required": [
                    "votes"
                ]
            },
            "list_withdraw_vesting_routes": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_withdraw_vesting_routes_response": {
                "type": "object",
                "properties": {
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/withdraw_vesting_routes"
                        }
                    }
                },
                "required": [
                    "routes"
                ]
            },
            "list_witness_votes": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_witness_votes_response": {
                "type": "object",
                "properties": {
                    "votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness_vote"
                        }
                    }
                },
                "required": [
                    "votes"
                ]
            },
            "list_witnesses": {
                "$ref": "#/components/schemas/start_limit_order"
            },
            "list_witnesses_response": {
                "type": "object",
                "properties": {
                    "witnesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "required": [
                    "witnesses"
                ]
            },
            "nai_decimal": {
                "type": "object",
                "properties": {
                    "nai": {
                        "type": "string",
                        "example": "@@000000021",
                        "description": "The NAI (Network Asset Identifier) of the asset."
                    },
                    "decimals": {
                        "type": "integer",
                        "example": 3,
                        "description": "The number of decimal places for the asset."
                    }
                },
                "required": [
                    "nai",
                    "decimals"
                ]
            },
            "notification_object": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date when the notification was created."
                    },
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier for the notification."
                    },
                    "msg": {
                        "type": "string",
                        "description": "The message content of the notification."
                    },
                    "score": {
                        "type": "integer",
                        "description": "The score associated with the notification."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of notification (e.g., mention, reply)."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL associated with the notification."
                    }
                },
                "required": [
                    "date",
                    "id",
                    "msg",
                    "score",
                    "type",
                    "url"
                ]
            },
            "operation_body": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    }
                },
                "required": [
                    "type",
                    "value"
                ]
            },
            "operation_body_condenser": {
                "type": "array",
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object"
                        }
                    ]
                },
                "minItems": 2,
                "maxItems": 2
            },
            "orders": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-12-14T04:05:39",
                        "description": "The date when the order was created."
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-12-15T05:05:21",
                        "description": "The expiration time of the order."
                    },
                    "seller": {
                        "type": "string",
                        "example": "",
                        "description": "The account that created the order."
                    },
                    "orderid": {
                        "type": "integer",
                        "example": 0,
                        "description": "The ID of the order."
                    },
                    "for_sale": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0,
                        "description": "The amount of the asset for sale."
                    },
                    "sell_price": {
                        "type": "object",
                        "properties": {
                            "base": {
                                "$ref": "#/components/schemas/balance",
                                "description": "The base asset of the order."
                            },
                            "quote": {
                                "$ref": "#/components/schemas/balance",
                                "description": "The quote asset of the order."
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "created",
                    "expiration",
                    "seller",
                    "orderid",
                    "for_sale",
                    "sell_price"
                ]
            },
            "owner_auth_history": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "noorkh",
                        "description": "The name of the account."
                    },
                    "id": {
                        "type": "integer",
                        "example": 765309,
                        "description": "The ID of the owner authority history."
                    },
                    "last_valid_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T11:40:09",
                        "description": "The last valid time of the owner authority."
                    },
                    "previous_owner_authority": {
                        "$ref": "#/components/schemas/auths",
                        "description": "The previous owner authority of the account."
                    }
                },
                "required": [
                    "account",
                    "id",
                    "last_valid_time",
                    "previous_owner_authority"
                ]
            },
            "pop_communities": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 2,
                "maxItems": 2
            },
            "post_object": {
                "type": "object",
                "properties": {
                    "post_id": {
                        "type": "integer",
                        "example": 123456789,
                        "description": "The unique identifier for the post."
                    },
                    "author": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that created the post."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "my-first-post",
                        "description": "The permanent link to the post."
                    },
                    "category": {
                        "type": "string",
                        "example": "hive",
                        "description": "The category under which the post is classified."
                    },
                    "title": {
                        "type": "string",
                        "example": "My First Post",
                        "description": "The title of the post."
                    },
                    "body": {
                        "type": "string",
                        "example": "This is the content of my first post.",
                        "description": "The body content of the post."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T11:40:09",
                        "description": "The date and time when the post was created."
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T12:00:00",
                        "description": "The date and time when the post was last updated."
                    },
                    "depth": {
                        "type": "integer",
                        "example": 0,
                        "description": "The depth of the post in the comment hierarchy."
                    },
                    "children": {
                        "type": "integer",
                        "example": 5,
                        "description": "The number of direct replies (children) to the post."
                    },
                    "net_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 1000,
                        "description": "The net rshares (relative shares) of the post, indicating its popularity."
                    },
                    "is_paidout": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether the post has been paid out."
                    },
                    "payout_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-20T00:00:00",
                        "description": "The date and time when the payout for the post will occur."
                    },
                    "replies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "reply1",
                            "reply2"
                        ],
                        "description": "An array of replies to the post."
                    },
                    "reblogs": {
                        "type": "integer",
                        "example": 10,
                        "description": "The number of times the post has been reblogged."
                    },
                    "url": {
                        "type": "string",
                        "example": "https://hive.blog/@alice/my-first-post",
                        "description": "The URL of the post."
                    },
                    "beneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/beneficiaries"
                        },
                        "description": "An array of beneficiary objects associated with the post."
                    },
                    "max_accepted_payout": {
                        "type": "string",
                        "example": "1000.000 HIVE",
                        "description": "The maximum accepted payout for the post."
                    },
                    "percent_hbd": {
                        "type": "integer",
                        "example": 10000,
                        "description": "The percentage of the payout that will be in HBD (Hive Backed Dollars)."
                    },
                    "json_metadata": {
                        "type": "object",
                        "example": {
                            "tags": [
                                "hive",
                                "blockchain"
                            ],
                            "app": "hive/0.1"
                        },
                        "description": "JSON metadata associated with the post, containing additional information like tags and application used."
                    },
                    "stats": {
                        "$ref": "#/components/schemas/stats_object",
                        "description": "Statistics object containing various metrics related to the post."
                    },
                    "payout": {
                        "type": "number",
                        "format": "double",
                        "example": 5000.75,
                        "description": "The payout amount for the post, in HIVE."
                    },
                    "author_reputation": {
                        "type": "number",
                        "format": "double",
                        "example": 69.25,
                        "description": "The reputation score of the author, indicating their standing in the Hive community."
                    },
                    "active_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/active_votes_object"
                        },
                        "description": "An array of active votes on the post, containing information about the voters and their vote weight."
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "blacklist1",
                            "blacklist2"
                        ],
                        "description": "An array of blacklists associated with the post, indicating accounts that have blacklisted it."
                    },
                    "reblogged_by": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "bob",
                            "charlie"
                        ],
                        "description": "An array of accounts that have reblogged the post."
                    },
                    "community": {
                        "type": "string",
                        "example": "hive-101145",
                        "description": "The community to which the post belongs, if applicable."
                    },
                    "community_title": {
                        "type": "string",
                        "example": "Hive Community",
                        "description": "The title of the community associated with the post."
                    },
                    "author_title": {
                        "type": "string",
                        "example": "Blockchain Enthusiast",
                        "description": "The title of the author, if applicable."
                    },
                    "author_role": {
                        "type": "string",
                        "example": "content_creator",
                        "description": "The role of the author in the Hive ecosystem."
                    },
                    "curator_payout_value": {
                        "type": "string",
                        "example": "50.000 HBD",
                        "description": "The value of the curator payout for the post."
                    },
                    "author_payout_value": {
                        "type": "string",
                        "example": "950.000 HBD",
                        "description": "The value of the author payout for the post."
                    },
                    "pending_payout_value": {
                        "type": "string",
                        "example": "1000.000 HBD",
                        "description": "The pending payout value for the post, which is the total payout that has not yet been processed."
                    },
                    "parent_author": {
                        "type": "string",
                        "example": "parent_author_name",
                        "description": "The author of the parent post, if this post is a reply."
                    },
                    "parent_permlink": {
                        "type": "string",
                        "example": "parent-permlink",
                        "description": "The permlink of the parent post, if this post is a reply."
                    }
                },
                "required": [
                    "post_id",
                    "author",
                    "permlink",
                    "category",
                    "title",
                    "body",
                    "created",
                    "updated",
                    "depth",
                    "children",
                    "net_rshares",
                    "is_paidout",
                    "payout_at",
                    "replies",
                    "reblogs",
                    "url",
                    "beneficiaries",
                    "max_accepted_payout",
                    "percent_hbd",
                    "json_metadata",
                    "stats",
                    "payout",
                    "author_reputation",
                    "active_votes",
                    "blacklists"
                ]
            },
            "post_condenser": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the author of the post."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The unique identifier for the post."
                    },
                    "category": {
                        "type": "string",
                        "example": "hive",
                        "description": "The category of the post."
                    },
                    "title": {
                        "type": "string",
                        "example": "Welcome to Hive",
                        "description": "The title of the post."
                    },
                    "body": {
                        "type": "string",
                        "example": "Welcome to Hive",
                        "description": "The body content of the post."
                    },
                    "json_metadata": {
                        "type": "object",
                        "example": {
                            "tags": [
                                "hive",
                                "blockchain"
                            ],
                            "app": "hive/0.1"
                        },
                        "description": "JSON metadata associated with the post, containing additional information like tags and application used."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-20T00:00:00",
                        "description": "The date and time when the post was created."
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-20T00:00:00",
                        "description": "The date and time when the post was last updated."
                    },
                    "depth": {
                        "type": "integer",
                        "example": 1,
                        "description": "The depth of the post in the comment tree."
                    },
                    "children": {
                        "type": "integer",
                        "example": 1,
                        "description": "The number of children comments for the post."
                    },
                    "curator_payout_value": {
                        "type": "string",
                        "example": "50.000 HIVE",
                        "description": "The value of the curator payout for the post."
                    },
                    "replies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "reply1",
                            "reply2"
                        ],
                        "description": "An array of replies to the post."
                    },
                    "body_length": {
                        "type": "integer",
                        "example": 1,
                        "description": "The length of the post body content."
                    },
                    "author_reputation": {
                        "type": "number",
                        "format": "double",
                        "example": 69.25,
                        "description": "The reputation score of the author, indicating their standing in the Hive community."
                    },
                    "parent_author": {
                        "type": "string",
                        "example": "parent_author_name",
                        "description": "The author of the parent post, if this post is a reply."
                    },
                    "parent_permlink": {
                        "type": "string",
                        "example": "parent-permlink",
                        "description": "The permlink of the parent post, if this post is a reply."
                    },
                    "url": {
                        "type": "string",
                        "example": "https://hive.blog/@alice/my-first-post",
                        "description": "The URL of the post."
                    },
                    "root_title": {
                        "type": "string",
                        "example": "My First Post",
                        "description": "The title of the root post."
                    },
                    "beneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/beneficiaries"
                        },
                        "description": "An array of beneficiary objects associated with the post."
                    },
                    "max_accepted_payout": {
                        "type": "string",
                        "example": "1000.000 HIVE",
                        "description": "The maximum accepted payout for the post."
                    },
                    "percent_hbd": {
                        "type": "integer",
                        "example": 10000,
                        "description": "The percentage of the payout that will be in HBD (Hive Backed Dollars)."
                    },
                    "active_votes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/active_votes_condenser"
                        },
                        "description": "An array of active votes on the post, containing information about the voters and their vote weight."
                    },
                    "last_payout": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T11:40:09",
                        "description": "The date and time when the post was last paid out."
                    },
                    "cashout_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T12:00:00",
                        "description": "The date and time when the post is scheduled to be paid out."
                    },
                    "pending_payout_value": {
                        "type": "string",
                        "example": "1000.000 HBD",
                        "description": "The pending payout value for the post, which is the total payout that has not yet been processed."
                    },
                    "total_payout_value": {
                        "type": "string",
                        "example": "950.000 HBD",
                        "description": "The total payout value for the post, which is the sum of all payouts that have been processed."
                    },
                    "reblogged_by": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "bob",
                            "charlie"
                        ],
                        "description": "An array of accounts that have reblogged the post."
                    },
                    "id": {
                        "type": "integer",
                        "example": 1,
                        "description": "Unique identifier for the resource; appears only when post_id is absent."
                    },
                    "post_id": {
                        "type": "integer",
                        "example": 1,
                        "description": "Unique identifier for a post; appears only when id is absent."
                    },
                    "author_rewards": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000,
                        "description": "The total rewards earned by the author for the post."
                    },
                    "max_cashout_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-16T12:00:00",
                        "description": "The date and time when the post is scheduled to be paid out."
                    },
                    "reward_weight": {
                        "type": "integer",
                        "example": 1000,
                        "description": "The weight of the post in the reward distribution."
                    },
                    "root_author": {
                        "type": "string",
                        "example": "root_author_name",
                        "description": "The author of the root post, if this post is a reply."
                    },
                    "root_permlink": {
                        "type": "string",
                        "example": "root-permlink",
                        "description": "The permlink of the root post, if this post is a reply."
                    },
                    "allow_replies": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether replies are allowed for this post."
                    },
                    "allow_votes": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether votes are allowed for this post."
                    },
                    "allow_curation_rewards": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether curation rewards are allowed for this post."
                    },
                    "net_votes": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000,
                        "description": "The net votes (upvotes - downvotes) for the post."
                    },
                    "children_abs_rshares": {
                        "type": "integer",
                        "example": 0
                    },
                    "total_pending_payout_value": {
                        "type": "string",
                        "example": "100.000 HIVE",
                        "description": "The total pending payout value for the post."
                    },
                    "total_vote_weight": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000
                    },
                    "vote_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000
                    },
                    "net_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000
                    },
                    "abs_rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 10000
                    }
                },
                "required": [
                    "author",
                    "permlink",
                    "category",
                    "title",
                    "body",
                    "json_metadata",
                    "created",
                    "last_update",
                    "depth",
                    "children",
                    "curator_payout_value",
                    "replies",
                    "body_length",
                    "author_reputation",
                    "parent_author",
                    "parent_permlink",
                    "url",
                    "root_title",
                    "beneficiaries",
                    "max_accepted_payout",
                    "percent_hbd",
                    "active_votes",
                    "last_payout",
                    "cashout_time",
                    "pending_payout_value",
                    "total_payout_value"
                ]
            },
            "post_voting_power": {
                "$ref": "#/components/schemas/balance"
            },
            "proposal_vote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 0
                    },
                    "voter": {
                        "type": "string",
                        "example": "charlie",
                        "description": "The name of the account that voted on the proposal."
                    },
                    "proposal": {
                        "$ref": "#/components/schemas/proposals"
                    }
                },
                "required": [
                    "id",
                    "voter",
                    "proposal"
                ]
            },
            "proposals": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "proposal_id": {
                        "type": "string",
                        "example": "139925218365120"
                    },
                    "creator": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that created the proposal."
                    },
                    "receiver": {
                        "type": "string",
                        "example": "bob",
                        "description": "The name of the account that will benefit from the proposal."
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-07-01T00:00:00",
                        "description": "The start date of the proposal."
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-01T23:59:59",
                        "description": "The end date of the proposal."
                    },
                    "daily_pay": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The daily pay amount of the proposal."
                    },
                    "subject": {
                        "type": "string",
                        "example": "My Proposal",
                        "description": "The subject of the proposal."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "creator-proposal-permlink",
                        "description": "The permlink of the proposal."
                    },
                    "total_votes": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "77351826710",
                        "description": "The total vests voted on the proposal."
                    },
                    "status": {
                        "type": "string",
                        "example": "active",
                        "description": "The status of the proposal."
                    }
                },
                "required": [
                    "id",
                    "proposal_id",
                    "creator",
                    "receiver",
                    "start_date",
                    "end_date",
                    "daily_pay",
                    "subject",
                    "permlink",
                    "total_votes",
                    "status"
                ]
            },
            "proposals_condenser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "proposal_id": {
                        "type": "string",
                        "example": "139925218365120"
                    },
                    "creator": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that created the proposal."
                    },
                    "receiver": {
                        "type": "string",
                        "example": "bob",
                        "description": "The name of the account that will benefit from the proposal."
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-07-01T00:00:00",
                        "description": "The start date of the proposal."
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-08-01T23:59:59",
                        "description": "The end date of the proposal."
                    },
                    "daily_pay": {
                        "type": "string",
                        "example": "4800.000 HBD",
                        "description": "The daily pay amount of the proposal."
                    },
                    "subject": {
                        "type": "string",
                        "example": "My Proposal",
                        "description": "The subject of the proposal."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "creator-proposal-permlink",
                        "description": "The permlink of the proposal."
                    },
                    "total_votes": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "77351826710",
                        "description": "The total vests voted on the proposal."
                    },
                    "status": {
                        "type": "string",
                        "example": "active",
                        "description": "The status of the proposal."
                    }
                },
                "required": [
                    "id",
                    "proposal_id",
                    "creator",
                    "receiver",
                    "start_date",
                    "end_date",
                    "daily_pay",
                    "subject",
                    "permlink",
                    "total_votes",
                    "status"
                ]
            },
            "rc_account_object": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account."
                    },
                    "rc_manabar": {
                        "$ref": "#/components/schemas/voting_manabar"
                    },
                    "max_rc_creation_adjustment": {
                        "$ref": "#/components/schemas/balance"
                    },
                    "max_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The maximum resource credits available for the account."
                    },
                    "delegated_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The amount of resource credits delegated to other accounts."
                    },
                    "received_delegated_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The amount of resource credits received from other accounts."
                    }
                },
                "required": [
                    "account",
                    "rc_manabar",
                    "max_rc_creation_adjustment",
                    "max_rc"
                ]
            },
            "rc_account_object_condenser": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account."
                    },
                    "rc_manabar": {
                        "$ref": "#/components/schemas/voting_manabar"
                    },
                    "max_rc_creation_adjustment": {
                        "type": "string",
                        "example": "2020.748973 VESTS",
                        "description": "The maximum resource credits creation adjustment."
                    },
                    "max_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The maximum resource credits available for the account."
                    },
                    "delegated_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The amount of resource credits delegated to other accounts."
                    },
                    "received_delegated_rc": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The amount of resource credits received from other accounts."
                    }
                },
                "required": [
                    "account",
                    "rc_manabar",
                    "max_rc_creation_adjustment",
                    "max_rc"
                ]
            },
            "recurrent_transfer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "trigger_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-06T13:36:45",
                        "description": "The date when the transfer will be triggered."
                    },
                    "from": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that created the transfer."
                    },
                    "to": {
                        "type": "string",
                        "example": "bob",
                        "description": "The name of the account that will receive the transfer."
                    },
                    "amount": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of the transfer."
                    },
                    "memo": {
                        "type": "string",
                        "example": "Payroll",
                        "description": "The memo message."
                    },
                    "recurrence": {
                        "type": "integer",
                        "example": 26,
                        "description": "The recurrence period of the transfer in hours."
                    },
                    "consecutive_failures": {
                        "type": "integer",
                        "example": 0,
                        "description": "The number of consecutive failures of the transfer."
                    },
                    "remaining_executions": {
                        "type": "integer",
                        "example": 3,
                        "description": "The number of remaining executions of the transfer."
                    }
                },
                "required": [
                    "id",
                    "trigger_date",
                    "from",
                    "to",
                    "amount",
                    "memo",
                    "recurrence",
                    "consecutive_failures",
                    "remaining_executions"
                ]
            },
            "recurrent_transfer_condenser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "trigger_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-06T13:36:45",
                        "description": "The date when the transfer will be triggered."
                    },
                    "from": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that created the transfer."
                    },
                    "to": {
                        "type": "string",
                        "example": "bob",
                        "description": "The name of the account that will receive the transfer."
                    },
                    "amount": {
                        "type": "string",
                        "example": "2020.748 HIVE",
                        "description": "The amount of the transfer."
                    },
                    "memo": {
                        "type": "string",
                        "example": "Payroll",
                        "description": "The memo message."
                    },
                    "recurrence": {
                        "type": "integer",
                        "example": 26,
                        "description": "The recurrence period of the transfer in hours."
                    },
                    "consecutive_failures": {
                        "type": "integer",
                        "example": 0,
                        "description": "The number of consecutive failures of the transfer."
                    },
                    "remaining_executions": {
                        "type": "integer",
                        "example": 3,
                        "description": "The number of remaining executions of the transfer."
                    }
                },
                "required": [
                    "id",
                    "trigger_date",
                    "from",
                    "to",
                    "amount",
                    "memo",
                    "recurrence",
                    "consecutive_failures",
                    "remaining_executions"
                ]
            },
            "reward_funds": {
                "type": "object",
                "properties": {
                    "author_reward_curve": {
                        "type": "string",
                        "example": "linear",
                        "description": "The author reward curve."
                    },
                    "content_constant": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "2000000000000",
                        "description": "The content constant."
                    },
                    "curation_reward_curve": {
                        "type": "string",
                        "example": "linear",
                        "description": "The curation reward curve."
                    },
                    "id": {
                        "type": "integer",
                        "example": 0
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T12:59:21"
                    },
                    "name": {
                        "type": "string",
                        "example": "post"
                    },
                    "percent_content_rewards": {
                        "type": "integer",
                        "example": 10000
                    },
                    "percent_curation_rewards": {
                        "type": "integer",
                        "example": 5000
                    },
                    "recent_claims": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "711345102753889024"
                    },
                    "reward_balance": {
                        "$ref": "#/components/schemas/balance"
                    }
                },
                "required": [
                    "author_reward_curve",
                    "content_constant",
                    "curation_reward_curve",
                    "id",
                    "last_update",
                    "name",
                    "percent_content_rewards",
                    "percent_curation_rewards",
                    "recent_claims",
                    "reward_balance"
                ]
            },
            "savings_withdrawal": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of the withdrawal."
                    },
                    "complete": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-31T11:51:39",
                        "description": "The date when the withdrawal will be completed."
                    },
                    "from": {
                        "type": "string",
                        "example": "demo.com",
                        "description": "The name of the account that created the withdrawal."
                    },
                    "id": {
                        "type": "integer",
                        "example": 213646,
                        "description": "The ID of the withdrawal."
                    },
                    "memo": {
                        "type": "string",
                        "example": "",
                        "description": "The memo message."
                    },
                    "request_id": {
                        "type": "integer",
                        "example": 3205148605,
                        "description": "The ID of the request."
                    },
                    "to": {
                        "type": "string",
                        "example": "demo.com",
                        "description": "The name of the account that will receive the withdrawal."
                    }
                },
                "required": [
                    "amount",
                    "complete",
                    "from",
                    "id",
                    "memo",
                    "request_id",
                    "to"
                ]
            },
            "start_limit": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "object",
                        "example": []
                    },
                    "limit": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "required": [
                    "start",
                    "limit"
                ]
            },
            "start_limit_order": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "object",
                        "example": []
                    },
                    "limit": {
                        "type": "integer",
                        "example": 10
                    },
                    "order": {
                        "type": "string",
                        "example": "order_name"
                    }
                },
                "required": [
                    "start",
                    "limit",
                    "order"
                ]
            },
            "start_limit_proposals": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "object",
                        "example": [
                            10
                        ]
                    },
                    "limit": {
                        "type": "integer",
                        "example": 10
                    },
                    "order": {
                        "type": "string",
                        "example": "by_voter_proposal"
                    },
                    "order_direction": {
                        "type": "string",
                        "example": "ascending"
                    },
                    "status": {
                        "type": "string",
                        "example": "all"
                    },
                    "last_id": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0,
                        "description": "The last ID of the proposal to start from."
                    }
                },
                "required": [
                    "start",
                    "limit",
                    "order",
                    "order_direction",
                    "status"
                ]
            },
            "start_limit_proposals_votes": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "object",
                        "example": [
                            10
                        ]
                    },
                    "limit": {
                        "type": "integer",
                        "example": 10
                    },
                    "order": {
                        "type": "string",
                        "example": "by_voter_proposal"
                    },
                    "order_direction": {
                        "type": "string",
                        "example": "ascending"
                    },
                    "status": {
                        "type": "string",
                        "example": "all"
                    }
                },
                "required": [
                    "start",
                    "limit",
                    "order",
                    "order_direction",
                    "status"
                ]
            },
            "stats_object": {
                "type": "object",
                "properties": {
                    "hide": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether the post is hidden."
                    },
                    "gray": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether the post is grayed out."
                    },
                    "total_votes": {
                        "type": "integer",
                        "example": 100,
                        "description": "The total number of votes on the post."
                    },
                    "flag_weight": {
                        "type": "number",
                        "format": "double",
                        "example": 10,
                        "description": "The weight of the flag on the post."
                    },
                    "muted_reasons": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2
                        ],
                        "description": "An array of reasons for muting the post, represented as integers."
                    },
                    "is_pinned": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates whether the post is pinned."
                    }
                },
                "required": [
                    "hide",
                    "gray",
                    "total_votes",
                    "flag_weight"
                ]
            },
            "subscriptions_array": {
                "type": "array",
                "items": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "minItems": 4,
                "maxItems": 4
            },
            "team_array": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "minItems": 3,
                "maxItems": 3
            },
            "transaction": {
                "type": "object",
                "properties": {
                    "ref_block_num": {
                        "type": "integer",
                        "example": 0
                    },
                    "ref_block_prefix": {
                        "type": "integer",
                        "example": 0
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01T00:00:00"
                    },
                    "operations": {
                        "$ref": "#/components/schemas/array_of_operations",
                        "example": []
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/extensions",
                        "example": []
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    }
                },
                "required": [
                    "ref_block_num",
                    "ref_block_prefix",
                    "expiration",
                    "operations",
                    "extensions",
                    "signatures"
                ]
            },
            "transaction_account_history": {
                "type": "object",
                "properties": {
                    "ref_block_num": {
                        "type": "integer",
                        "example": 0
                    },
                    "ref_block_prefix": {
                        "type": "integer",
                        "example": 0
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01T00:00:00"
                    },
                    "operations": {
                        "$ref": "#/components/schemas/array_of_operations",
                        "example": []
                    },
                    "extensions": {
                        "$ref": "#/components/schemas/extensions",
                        "example": []
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    },
                    "block_num": {
                        "type": "integer",
                        "example": 21401130
                    },
                    "transaction_id": {
                        "type": "string",
                        "example": "6fde0190a97835ea6d9e651293e90c89911f933c",
                        "description": "The ID of the transaction."
                    },
                    "transaction_num": {
                        "type": "integer",
                        "example": 25,
                        "description": "The transaction number in the block."
                    }
                },
                "required": [
                    "ref_block_num",
                    "ref_block_prefix",
                    "expiration",
                    "operations",
                    "extensions",
                    "signatures",
                    "block_num",
                    "transaction_id",
                    "transaction_num"
                ]
            },
            "verify_account_authority": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account to verify."
                    },
                    "signers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "STM5RrTRNDhhrMaA24SzSeE5AvmUcutb1q1VZp1imnT8p871s3UjN"
                        ],
                        "description": "An array of strings representing the keys to verify."
                    }
                },
                "required": [
                    "account",
                    "signers"
                ]
            },
            "verify_account_authority_response": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "valid"
                ]
            },
            "verify_authority": {
                "type": "object",
                "properties": {
                    "trx": {
                        "$ref": "#/components/schemas/transaction"
                    },
                    "pack": {
                        "type": "string",
                        "example": "legacy"
                    }
                },
                "required": [
                    "trx",
                    "pack"
                ]
            },
            "verify_authority_response": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates whether the transaction has all of the required signatures."
                    }
                },
                "required": [
                    "valid"
                ]
            },
            "verify_signatures": {
                "type": "object",
                "properties": {
                    "hash": {
                        "type": "string",
                        "example": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of strings representing the signatures to verify."
                    },
                    "required_owner": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of strings representing the required owner keys."
                    },
                    "required_active": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of strings representing the required active keys."
                    },
                    "required_posting": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of strings representing the required posting keys."
                    },
                    "required_other": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [],
                        "description": "An array of strings representing the required other keys."
                    }
                },
                "required": [
                    "hash",
                    "signatures",
                    "required_owner",
                    "required_active",
                    "required_posting",
                    "required_other"
                ]
            },
            "verify_signatures_response": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "valid"
                ]
            },
            "vesting_delegation": {
                "type": "object",
                "properties": {
                    "delegator": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that delegated the shares."
                    },
                    "delegatee": {
                        "type": "string",
                        "example": "sharker",
                        "description": "The name of the account that received the delegation."
                    },
                    "id": {
                        "type": "integer",
                        "example": 2454889,
                        "description": "The ID of the delegation."
                    },
                    "min_delegation_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-07T15:35:00"
                    },
                    "vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of vesting shares delegated."
                    }
                },
                "required": [
                    "delegator",
                    "delegatee",
                    "id",
                    "min_delegation_time",
                    "vesting_shares"
                ]
            },
            "vesting_delegation_expirations": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "delegator": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that delegated the shares."
                    },
                    "vesting_shares": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The amount of vesting shares delegated."
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-12-05T21:46:48",
                        "description": "The expiration time of the delegation."
                    }
                },
                "required": [
                    "id",
                    "delegator",
                    "vesting_shares",
                    "expiration"
                ]
            },
            "operation_object": {
                "type": "object",
                "properties": {
                    "block": {
                        "type": "integer",
                        "description": "The block number in which the operation was included."
                    },
                    "op": {
                        "$ref": "#/components/schemas/operation_body",
                        "description": "Body of the operation."
                    },
                    "op_in_trx": {
                        "type": "integer",
                        "description": "The index of the operation in the transaction."
                    },
                    "operation_id": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The unique ID of the operation."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the operation was executed."
                    },
                    "trx_id": {
                        "type": "string",
                        "description": "The ID of the transaction that contains the operation."
                    },
                    "trx_in_block": {
                        "type": "integer",
                        "description": "The index of the transaction in the block."
                    },
                    "virtual_op": {
                        "type": "boolean",
                        "description": "Indicates whether the operation is a virtual operation."
                    }
                },
                "required": [
                    "block",
                    "op",
                    "op_in_trx",
                    "operation_id",
                    "timestamp",
                    "trx_id",
                    "trx_in_block",
                    "virtual_op"
                ]
            },
            "operation_object_condenser": {
                "type": "object",
                "properties": {
                    "block": {
                        "type": "integer",
                        "description": "The block number in which the operation was included."
                    },
                    "op": {
                        "$ref": "#/components/schemas/operation_body_condenser",
                        "description": "Body of the operation."
                    },
                    "op_in_trx": {
                        "type": "integer",
                        "description": "The index of the operation in the transaction."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the operation was executed."
                    },
                    "trx_id": {
                        "type": "string",
                        "description": "The ID of the transaction that contains the operation."
                    },
                    "trx_in_block": {
                        "type": "integer",
                        "description": "The index of the transaction in the block."
                    },
                    "virtual_op": {
                        "type": "boolean",
                        "description": "Indicates whether the operation is a virtual operation."
                    }
                },
                "required": [
                    "block",
                    "op",
                    "op_in_trx",
                    "timestamp",
                    "trx_id",
                    "trx_in_block",
                    "virtual_op"
                ]
            },
            "ops_by_block_object": {
                "type": "object",
                "properties": {
                    "block": {
                        "type": "integer",
                        "description": "The block number."
                    },
                    "irreversible": {
                        "type": "boolean",
                        "description": "Indicates whether the block is irreversible."
                    },
                    "ops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/operation_object"
                        },
                        "description": "An array of operation objects included in the block."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the block."
                    }
                },
                "required": [
                    "block",
                    "irreversible",
                    "ops",
                    "timestamp"
                ]
            },
            "vote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12345,
                        "description": "The ID of the vote."
                    },
                    "voter": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that cast the vote."
                    },
                    "author": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The author of the post that was voted on."
                    },
                    "permlink": {
                        "type": "string",
                        "example": "announcing-the-launch-of-hive-blockchain",
                        "description": "The permlink of the post that was voted on."
                    },
                    "weight": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": "0",
                        "description": "The weight of the vote."
                    },
                    "rshares": {
                        "$ref": "#/components/schemas/hive_int",
                        "example": 0,
                        "description": "The number of rshares voted."
                    },
                    "vote_percent": {
                        "type": "integer",
                        "example": 0,
                        "description": "The percentage of the vote."
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-04-07T19:15:36",
                        "description": "The last update time of the vote."
                    },
                    "num_changes": {
                        "type": "integer",
                        "example": -1,
                        "description": "The number of changes made to the vote."
                    }
                },
                "required": [
                    "id",
                    "voter",
                    "author",
                    "permlink",
                    "weight",
                    "rshares",
                    "vote_percent",
                    "last_update",
                    "num_changes"
                ]
            },
            "voting_manabar": {
                "type": "object",
                "properties": {
                    "current_mana": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "last_update_time": {
                        "type": "integer"
                    }
                },
                "required": [
                    "current_mana",
                    "last_update_time"
                ]
            },
            "withdraw_vesting_routes": {
                "type": "object",
                "properties": {
                    "from_account": {
                        "type": "string",
                        "example": "hiveio",
                        "description": "The name of the account that is withdrawing vesting shares."
                    },
                    "to_account": {
                        "type": "string",
                        "example": "ecency",
                        "description": "The name of the receiver of the withdrawal"
                    },
                    "percent": {
                        "type": "integer",
                        "example": 10000
                    },
                    "auto_vest": {
                        "type": "boolean",
                        "example": false
                    },
                    "id": {
                        "type": "integer",
                        "example": 12345,
                        "description": "The ID of the withdrawal route."
                    }
                },
                "required": [
                    "from_account",
                    "to_account",
                    "percent",
                    "auto_vest",
                    "id"
                ]
            },
            "witness": {
                "type": "object",
                "properties": {
                    "available_witness_account_subsidies": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The number of available witness account subsidies."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date of witness creation."
                    },
                    "hardfork_time_vote": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the hardfork time vote was made."
                    },
                    "hardfork_version_vote": {
                        "type": "string",
                        "description": "The version of the hardfork that was voted for."
                    },
                    "hbd_exchange_rate": {
                        "$ref": "#/components/schemas/base_and_quote",
                        "description": "The HBD exchange rate."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Witness's identification number."
                    },
                    "last_aslot": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The last aslot of the witness."
                    },
                    "last_confirmed_block_num": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The last confirmed block number of the witness."
                    },
                    "last_hbd_exchange_update": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time when the last HBD exchange update was made."
                    },
                    "last_work": {
                        "type": "string",
                        "description": "The last work done by the witness."
                    },
                    "owner": {
                        "type": "string",
                        "description": "Witness name."
                    },
                    "pow_worker": {
                        "$ref": "#/components/schemas/hive_int",
                        "description": "The proof-of-work worker of the witness."
                    },
                    "props": {
                        "$ref": "#/components/schemas/witness_props"
                    },
                    "running_version": {
                        "type": "string",
                        "description": "The version of the running witness software."
                    },
                    "signing_key": {
                        "type": "string",
                        "description": "Witness's signing key."
                    },
                    "total_missed": {
                        "type": "integer",
                        "description": "The total number of missed blocks by the witness."
                    },
                    "url": {
                        "type": "string"
                    },
                    "virtual_last_update": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "virtual_position": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "virtual_scheduled_time": {
                        "$ref": "#/components/schemas/hive_int"
                    },
                    "votes": {
                        "$ref": "#/components/schemas/hive_int"
                    }
                },
                "required": [
                    "available_witness_account_subsidies",
                    "created",
                    "hardfork_time_vote",
                    "hardfork_version_vote",
                    "hbd_exchange_rate",
                    "id",
                    "last_aslot",
                    "last_confirmed_block_num",
                    "last_hbd_exchange_update",
                    "last_work",
                    "owner",
                    "pow_worker",
                    "props",
                    "running_version",
                    "signing_key",
                    "total_missed",
                    "url",
                    "virtual_last_update",
                    "virtual_position",
                    "virtual_scheduled_time",
                    "votes"
                ]
            },
            "witness_props": {
                "type": "object",
                "properties": {
                    "account_creation_fee": {
                        "$ref": "#/components/schemas/balance",
                        "description": "The fee for creating an account."
                    },
                    "account_subsidy_budget": {
                        "type": "integer",
                        "description": "The budget for account subsidies."
                    },
                    "account_subsidy_decay": {
                        "type": "integer",
                        "description": "The decay rate for account subsidies."
                    },
                    "hbd_interest_rate": {
                        "type": "integer",
                        "description": "The interest rate for HBD."
                    },
                    "maximum_block_size": {
                        "type": "integer",
                        "description": "The maximum size of a block."
                    }
                },
                "required": [
                    "account_creation_fee",
                    "account_subsidy_budget",
                    "account_subsidy_decay",
                    "hbd_interest_rate",
                    "maximum_block_size"
                ]
            },
            "witness_vote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 0
                    },
                    "witness": {
                        "type": "string",
                        "example": "witness1",
                        "description": "The name of the witness that was voted for."
                    },
                    "account": {
                        "type": "string",
                        "example": "alice",
                        "description": "The name of the account that voted for the witness."
                    }
                },
                "required": [
                    "id",
                    "witness",
                    "account"
                ]
            }
        }
    },
    "x-envelope": "jsonrpc-2.0"
}