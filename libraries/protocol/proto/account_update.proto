syntax = "proto2";

import "authority.proto";

package hive.protocol.buffers;

/* Operations account_update_operation and account_update2_operation share a limit of allowed updates of the owner authority:
 * two executions per 60 minutes (HIVE_OWNER_UPDATE_LIMIT) (meaning each of them can be executed twice or both can be executed once during that time period).
 * After 30 days (HIVE_OWNER_AUTH_RECOVERY_PERIOD) using the account recovery process to change the owner authority is no longer possible.
 * The operation account_update_operation allows changing authorities, it doesnâ€™t allow changing the posting_json_metadata.
 *
 * @param {string} account - Account name, it cannot be updated.
 * @param {authority} owner - In order to update the {owner}, the owner authority is required.
 *                            It may be changed 2 times per hour.
 *                            If a user provides a new authority, the old one will be deleted,
 *                            but the deleted authority may be used up to 30 days in the process of the recovery account.
 * @param {authority} active - In order to update the {active}, the active authority is required.
 *                             If a user provides a new authority, the old one will be deleted.
 * @param {authority} posting - In order to update the {posting}, the active authority is required.
 *                              If a user provides a new authority, the old one will be deleted.
 * @param {string} memo_key - In order to update the {memo_key}, active authority is required.
 *                            If a user provides a new key, the old one will be deleted.
 * @param {string} json_metadata - json_string; in order to update the {json_metadata}, the active authority is required.
 */
message account_update {
  required string    account = 1;
  optional authority owner = 2;
  optional authority active = 3;
  optional authority posting = 4;
  required string    memo_key = 5 [json_name = "memo_key"];
  required string    json_metadata = 6 [json_name = "json_metadata"];
}
