syntax = "proto2";

import "asset.proto";

package hive.protocol.buffers;

/* Related to recurrent_transfer_operation.
 * Generated during block processing starting in the block that included above operation and then after every period
 * set in the operation until all transfers are executed, too many fail due to shortfall of funds or the transfer is cancelled.
 * Note: in case of accumulation of very big amount of recurrent transfers to be executed in particular block, some
 * are going to be postponed to next block(s) and so will be generation of this vop.
 * @see failed_recurrent_transfer
 *
 * @param {string} from_account - user that initiated the transfer (source of amount)
 * @param {string} to_account - user that is target of transfer (receiver of amount)
 * @param {asset} amount - (HIVE of HBD) amount transferred in current iteration
 * @param {string} memo - memo attached to the transfer
 * @param {number} remaining_executions - number of remaining pending transfers
 */
message fill_recurrent_transfer {
  required string from_account = 1 [json_name = "from"];
  required string to_account = 2 [json_name = "to"];
  required asset  amount = 3;
  required string memo = 4;
  required uint32 remaining_executions = 5 [json_name = "remaining_executions"];
}
